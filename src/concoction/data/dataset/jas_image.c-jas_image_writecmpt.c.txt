-----label-----
0
-----code-----
int jas_image_writecmpt(jas_image_t *image, int cmptno, jas_image_coord_t x, jas_image_coord_t y, jas_image_coord_t width,
  jas_image_coord_t height, jas_matrix_t *data)
{
	jas_image_cmpt_t *cmpt;
	jas_image_coord_t i;
	jas_image_coord_t j;
	jas_seqent_t *d;
	jas_seqent_t *dr;
	int drs;
	jas_seqent_t v;
	int k;
	int c;

	if (cmptno < 0 || cmptno >= image->numcmpts_) {
		return -1;
	}

	cmpt = image->cmpts_[cmptno];
	if (x >= cmpt->width_ || y >= cmpt->height_ ||
	  x + width > cmpt->width_ ||
	  y + height > cmpt->height_) {
		return -1;
	}

	if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width) {
		return -1;
	}

	dr = jas_matrix_getref(data, 0, 0);
	drs = jas_matrix_rowstep(data);
	for (i = 0; i < height; ++i, dr += drs) {
		d = dr;
		if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
		  * cmpt->cps_, SEEK_SET) < 0) {
			return -1;
		}
		for (j = width; j > 0; --j, ++d) {
			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
			for (k = cmpt->cps_; k > 0; --k) {
				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
				if (jas_stream_putc(cmpt->stream_,
				  (unsigned char) c) == EOF) {
					return -1;
				}
				v <<= 8;
			}
		}
	}

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
3,11
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
16,17
18,19
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
41,42
41,43
41,44
41,45
41,46
41,47
41,48
41,49
41,50
41,51
41,52
41,53
41,54
41,55
41,56
41,57
41,58
42,43
43,44
43,45
44,45
46,47
46,48
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
65,66
65,67
68,69
69,70
69,71
70,71
72,73
72,74
75,76
76,77
76,78
78,79
80,81
81,82
81,83
82,83
84,85
86,87
87,88
87,89
89,90
91,92
92,93
92,94
94,95
96,97
96,98
97,98
97,99
98,99
98,100
99,100
102,103
102,104
103,104
105,106
105,107
106,107
109,110
110,111
111,112
113,114
114,115
114,116
115,116
117,118
117,119
118,119
118,120
119,120
122,123
124,125
124,126
125,126
125,127
126,127
126,128
127,128
127,129
128,129
128,130
129,130
131,132
131,133
132,133
135,136
135,137
136,137
138,139
138,140
139,140
142,143
142,144
143,144
143,145
144,145
146,147
148,149
148,150
149,150
152,153
152,154
153,154
153,155
154,155
156,157
158,159
158,160
159,160
162,163
163,164
164,165
166,167
166,168
167,168
167,169
168,169
168,170
169,170
169,171
170,171
172,173
174,175
176,177
176,178
177,178
177,179
178,179
180,181
182,183
184,185
185,186
186,187
188,189
189,190
189,191
190,191
192,193
192,194
192,195
192,196
193,194
195,196
199,200
200,201
200,202
201,202
203,204
203,205
204,205
206,207
208,209
208,210
208,211
208,212
209,210
210,211
210,212
211,212
214,215
214,216
215,216
217,218
219,220
219,221
220,221
221,222
223,224
223,225
224,225
226,227
228,229
228,230
228,231
229,230
230,231
230,232
231,232
233,234
235,236
235,237
236,237
236,238
237,238
237,239
237,240
237,241
238,239
240,241
240,242
241,242
244,245
244,246
245,246
246,247
246,248
247,248
247,249
248,249
248,250
249,250
252,253
253,254
253,255
254,255
256,257
258,259
260,261
260,262
261,262
264,265
267,268
268,269
269,270
271,272
271,273
271,274
271,275
272,273
273,274
273,275
274,275
276,277
278,279
278,280
279,280
282,283
282,284
283,284
284,285
286,287
287,288
289,290
289,291
290,291
291,292
291,293
292,293
294,295
294,296
294,297
294,298
295,296
297,298
298,299
300,301
300,302
301,302
304,305
304,306
305,306
308,309
308,310
308,311
308,312
309,310
310,311
310,312
311,312
313,314
313,315
314,315
317,318
317,319
318,319
321,322
322,323
324,325
324,326
324,327
325,326
326,327
326,328
327,328
329,330
329,331
330,331
331,332
331,333
332,333
334,335
335,336
335,337
337,338
338,339
338,340
339,340
339,341
340,341
345,346
345,347
346,347
346,348
347,348
347,349
347,350
348,349
350,351
350,352
351,352
354,355
354,356
355,356
355,357
358,359
360,361
362,363
363,364
364,365
366,367
367,368
367,369
368,369
371,372
-----nextToken-----
2,4,7,9,10,12,14,17,19,22,24,27,29,32,34,37,39,40,45,47,48,52,54,58,60,64,66,67,71,73,74,77,79,83,85,88,90,93,95,100,101,104,107,108,112,116,120,121,123,130,133,134,137,140,141,145,147,150,151,155,157,160,161,165,171,173,175,179,181,183,187,191,194,196,197,198,202,205,207,212,213,216,218,222,225,227,232,234,239,242,243,250,251,255,257,259,262,263,265,266,270,275,277,280,281,285,288,293,296,299,302,303,306,307,312,315,316,319,320,323,328,333,336,341,342,343,344,349,352,353,356,357,359,361,365,369,370,372
-----computeFrom-----
97,98
97,99
98,99
98,100
102,103
102,104
114,115
114,116
125,126
125,127
126,127
126,128
127,128
127,129
128,129
128,130
135,136
135,137
142,143
142,144
143,144
143,145
152,153
152,154
153,154
153,155
167,168
167,169
168,169
168,170
176,177
176,178
189,190
189,191
200,201
200,202
210,211
210,212
214,215
214,216
223,224
223,225
230,231
230,232
236,237
236,238
244,245
244,246
246,247
246,248
247,248
247,249
253,254
253,255
273,274
273,275
278,279
278,280
291,292
291,293
310,311
310,312
317,318
317,319
326,327
326,328
329,330
329,331
331,332
331,333
335,336
335,337
338,339
338,340
346,347
346,348
367,368
367,369
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionList;UnaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionList;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
int jas_image_writecmpt(jas_image_t *image, int cmptno, jas_image_coord_t x, jas_image_coord_t y, jas_image_coord_t width,  jas_image_coord_t height, jas_matrix_t *data){	jas_image_cmpt_t *cmpt;	jas_image_coord_t i;	jas_image_coord_t j;	jas_seqent_t *d;	jas_seqent_t *dr;	int drs;	jas_seqent_t v;	int k;	int c;	if (cmptno < 0 || cmptno >= image->numcmpts_) {		return -1;	}	cmpt = image->cmpts_[cmptno];	if (x >= cmpt->width_ || y >= cmpt->height_ ||	  x + width > cmpt->width_ ||	  y + height > cmpt->height_) {		return -1;	}	if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width) {		return -1;	}	dr = jas_matrix_getref(data, 0, 0);	drs = jas_matrix_rowstep(data);	for (i = 0; i < height; ++i, dr += drs) {		d = dr;		if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0) {			return -1;		}		for (j = width; j > 0; --j, ++d) {			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}	}	return 0;}
int
jas_image_writecmpt(jas_image_t *image, int cmptno, jas_image_coord_t x, jas_image_coord_t y, jas_image_coord_t width,  jas_image_coord_t height, jas_matrix_t *data)
jas_image_writecmpt
jas_image_t *image
jas_image_t
jas_image_t
*image
*
image
int cmptno
int
cmptno
cmptno
jas_image_coord_t x
jas_image_coord_t
jas_image_coord_t
x
x
jas_image_coord_t y
jas_image_coord_t
jas_image_coord_t
y
y
jas_image_coord_t width
jas_image_coord_t
jas_image_coord_t
width
width
jas_image_coord_t height
jas_image_coord_t
jas_image_coord_t
height
height
jas_matrix_t *data
jas_matrix_t
jas_matrix_t
*data
*
data
{	jas_image_cmpt_t *cmpt;	jas_image_coord_t i;	jas_image_coord_t j;	jas_seqent_t *d;	jas_seqent_t *dr;	int drs;	jas_seqent_t v;	int k;	int c;	if (cmptno < 0 || cmptno >= image->numcmpts_) {		return -1;	}	cmpt = image->cmpts_[cmptno];	if (x >= cmpt->width_ || y >= cmpt->height_ ||	  x + width > cmpt->width_ ||	  y + height > cmpt->height_) {		return -1;	}	if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width) {		return -1;	}	dr = jas_matrix_getref(data, 0, 0);	drs = jas_matrix_rowstep(data);	for (i = 0; i < height; ++i, dr += drs) {		d = dr;		if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0) {			return -1;		}		for (j = width; j > 0; --j, ++d) {			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}	}	return 0;}
jas_image_cmpt_t *cmpt;
jas_image_cmpt_t *cmpt;
jas_image_cmpt_t
jas_image_cmpt_t
*cmpt
*
cmpt
jas_image_coord_t i;
jas_image_coord_t i;
jas_image_coord_t
jas_image_coord_t
i
i
jas_image_coord_t j;
jas_image_coord_t j;
jas_image_coord_t
jas_image_coord_t
j
j
jas_seqent_t *d;
jas_seqent_t *d;
jas_seqent_t
jas_seqent_t
*d
*
d
jas_seqent_t *dr;
jas_seqent_t *dr;
jas_seqent_t
jas_seqent_t
*dr
*
dr
int drs;
int drs;
int
drs
drs
jas_seqent_t v;
jas_seqent_t v;
jas_seqent_t
jas_seqent_t
v
v
int k;
int k;
int
k
k
int c;
int c;
int
c
c
if (cmptno < 0 || cmptno >= image->numcmpts_) {		return -1;	}
cmptno < 0 || cmptno >= image->numcmpts_
cmptno < 0
cmptno
cmptno
0
cmptno >= image->numcmpts_
cmptno
cmptno
image->numcmpts_
image
image
numcmpts_
{		return -1;	}
return -1;
-1
1
cmpt = image->cmpts_[cmptno];
cmpt = image->cmpts_[cmptno]
cmpt
cmpt
image->cmpts_[cmptno]
image->cmpts_
image
image
cmpts_
cmptno
cmptno
if (x >= cmpt->width_ || y >= cmpt->height_ ||	  x + width > cmpt->width_ ||	  y + height > cmpt->height_) {		return -1;	}
x >= cmpt->width_ || y >= cmpt->height_ ||	  x + width > cmpt->width_ ||	  y + height > cmpt->height_
x >= cmpt->width_ || y >= cmpt->height_ ||	  x + width > cmpt->width_
x >= cmpt->width_ || y >= cmpt->height_
x >= cmpt->width_
x
x
cmpt->width_
cmpt
cmpt
width_
y >= cmpt->height_
y
y
cmpt->height_
cmpt
cmpt
height_
x + width > cmpt->width_
x + width
x
x
width
width
cmpt->width_
cmpt
cmpt
width_
y + height > cmpt->height_
y + height
y
y
height
height
cmpt->height_
cmpt
cmpt
height_
{		return -1;	}
return -1;
-1
1
if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width) {		return -1;	}
jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width
jas_matrix_numrows(data) != height
jas_matrix_numrows(data)
jas_matrix_numrows
jas_matrix_numrows
data
data
height
height
jas_matrix_numcols(data) != width
jas_matrix_numcols(data)
jas_matrix_numcols
jas_matrix_numcols
data
data
width
width
{		return -1;	}
return -1;
-1
1
dr = jas_matrix_getref(data, 0, 0);
dr = jas_matrix_getref(data, 0, 0)
dr
dr
jas_matrix_getref(data, 0, 0)
jas_matrix_getref
jas_matrix_getref
data
data
0
0
drs = jas_matrix_rowstep(data);
drs = jas_matrix_rowstep(data)
drs
drs
jas_matrix_rowstep(data)
jas_matrix_rowstep
jas_matrix_rowstep
data
data
for (i = 0; i < height; ++i, dr += drs) {		d = dr;		if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0) {			return -1;		}		for (j = width; j > 0; --j, ++d) {			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}	}
i = 0;
i = 0
i
i
0
i < height
i
i
height
height
++i, dr += drs
++i
i
i
dr += drs
dr
dr
drs
drs
{		d = dr;		if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0) {			return -1;		}		for (j = width; j > 0; --j, ++d) {			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}	}
d = dr;
d = dr
d
d
dr
dr
if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0) {			return -1;		}
jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET) < 0
jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)		  * cmpt->cps_, SEEK_SET)
jas_stream_seek
jas_stream_seek
cmpt->stream_
cmpt
cmpt
stream_
(cmpt->width_ * (y + i) + x)		  * cmpt->cps_
(cmpt->width_ * (y + i) + x)
cmpt->width_ * (y + i) + x
cmpt->width_ * (y + i)
cmpt->width_
cmpt
cmpt
width_
(y + i)
y + i
y
y
i
i
x
x
cmpt->cps_
cmpt
cmpt
cps_
SEEK_SET
SEEK_SET
0
{			return -1;		}
return -1;
-1
1
for (j = width; j > 0; --j, ++d) {			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}
j = width;
j = width
j
j
width
width
j > 0
j
j
0
--j, ++d
--j
j
j
++d
d
d
{			v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);			for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}		}
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_)
v
v
inttobits(*d, cmpt->prec_, cmpt->sgnd_)
inttobits
inttobits
*d
d
d
cmpt->prec_
cmpt
cmpt
prec_
cmpt->sgnd_
cmpt
cmpt
sgnd_
for (k = cmpt->cps_; k > 0; --k) {				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}
k = cmpt->cps_;
k = cmpt->cps_
k
k
cmpt->cps_
cmpt
cmpt
cps_
k > 0
k
k
0
--k
k
k
{				c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;				if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}				v <<= 8;			}
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff
c
c
(v >> (8 * (cmpt->cps_ - 1))) & 0xff
(v >> (8 * (cmpt->cps_ - 1)))
v >> (8 * (cmpt->cps_ - 1))
v
v
(8 * (cmpt->cps_ - 1))
8 * (cmpt->cps_ - 1)
8
(cmpt->cps_ - 1)
cmpt->cps_ - 1
cmpt->cps_
cmpt
cmpt
cps_
1
0xff
if (jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF) {					return -1;				}
jas_stream_putc(cmpt->stream_,				  (unsigned char) c) == EOF
jas_stream_putc(cmpt->stream_,				  (unsigned char) c)
jas_stream_putc
jas_stream_putc
cmpt->stream_
cmpt
cmpt
stream_
(unsigned char) c
unsigned char
unsigned char

c
c
EOF
EOF
{					return -1;				}
return -1;
-1
1
v <<= 8;
v <<= 8
v
v
8
return 0;
0
-----joern-----
(95,130,0)
(100,82,0)
(25,67,0)
(32,129,0)
(115,80,0)
(107,7,0)
(1,39,0)
(72,65,0)
(129,67,0)
(52,62,0)
(68,39,0)
(62,108,0)
(6,86,0)
(74,127,0)
(34,106,0)
(50,45,0)
(9,7,0)
(62,106,0)
(51,111,0)
(4,124,0)
(73,130,0)
(10,85,0)
(97,113,0)
(107,33,0)
(58,82,0)
(45,14,0)
(4,85,0)
(13,16,0)
(100,85,0)
(4,118,0)
(4,127,0)
(127,82,0)
(117,14,0)
(60,81,0)
(90,25,0)
(31,36,0)
(11,95,0)
(3,80,0)
(0,46,0)
(85,87,0)
(65,67,0)
(26,111,0)
(121,62,0)
(128,25,0)
(66,16,0)
(28,108,0)
(92,100,0)
(125,106,0)
(7,130,0)
(78,25,0)
(7,27,0)
(77,122,0)
(5,67,0)
(46,108,0)
(104,13,0)
(8,127,0)
(13,27,0)
(36,124,0)
(37,4,0)
(57,86,0)
(111,51,0)
(45,61,0)
(111,130,0)
(13,130,0)
(75,77,0)
(13,129,0)
(81,122,0)
(43,45,0)
(21,124,0)
(62,124,0)
(14,45,0)
(65,87,0)
(42,21,0)
(95,87,0)
(29,61,0)
(93,4,0)
(16,13,0)
(98,7,0)
(129,13,0)
(56,107,0)
(67,65,0)
(116,82,0)
(83,62,0)
(113,82,0)
(76,21,0)
(20,25,0)
(102,95,0)
(35,122,0)
(51,27,0)
(16,107,0)
(30,130,0)
(87,33,0)
(70,108,0)
(19,25,0)
(86,108,0)
(59,24,0)
(110,33,0)
(106,62,0)
(103,13,0)
(88,51,0)
(122,33,0)
(49,13,0)
(112,4,0)
(40,54,0)
(109,37,0)
(61,122,0)
(63,39,0)
(17,39,0)
(54,130,0)
(53,129,0)
(18,39,0)
(84,65,0)
(62,120,0)
(5,82,0)
(23,51,0)
(91,39,0)
(85,100,0)
(85,4,0)
(12,25,0)
(55,39,0)
(64,13,0)
(15,100,0)
(119,33,0)
(47,67,0)
(44,39,0)
(129,87,0)
(96,16,0)
(37,107,0)
(21,33,0)
(45,81,0)
(61,45,0)
(25,27,0)
(80,77,0)
(80,27,0)
(100,67,0)
(122,77,0)
(95,27,0)
(2,36,0)
(45,124,0)
(81,45,0)
(41,13,0)
(77,80,0)
(77,130,0)
(106,108,0)
(36,33,0)
(45,33,0)
(127,4,0)
(22,48,0)
(7,107,0)
(123,5,0)
(14,122,0)
(126,25,0)
(101,14,0)
(67,33,0)
(79,87,0)
(105,5,0)
(4,37,0)
(25,130,0)
(71,81,0)
(114,62,0)
(87,95,0)
(13,67,0)
(86,67,0)
(99,61,0)
(94,33,0)
(38,33,0)
(69,37,0)
(62,124,1)
(82,58,1)
(43,50,1)
(13,16,1)
(11,102,1)
(127,82,1)
(111,130,1)
(62,106,1)
(28,25,1)
(106,108,1)
(62,108,1)
(84,72,1)
(21,42,1)
(52,121,1)
(56,87,1)
(97,4,1)
(74,8,1)
(121,83,1)
(13,27,1)
(25,130,1)
(45,61,1)
(40,21,1)
(15,10,1)
(86,57,1)
(111,51,1)
(0,62,1)
(104,41,1)
(83,114,1)
(26,54,1)
(81,60,1)
(108,70,1)
(112,93,1)
(22,13,1)
(60,71,1)
(93,5,1)
(34,125,1)
(13,104,1)
(71,14,1)
(79,45,1)
(67,65,1)
(5,67,1)
(123,82,1)
(46,0,1)
(54,130,1)
(13,130,1)
(102,79,1)
(6,46,1)
(45,124,1)
(53,32,1)
(130,73,1)
(95,27,1)
(100,82,1)
(5,105,1)
(4,37,1)
(77,80,1)
(95,11,1)
(13,129,1)
(14,117,1)
(58,116,1)
(92,15,1)
(78,20,1)
(76,5,1)
(126,67,1)
(64,103,1)
(77,130,1)
(129,53,1)
(69,109,1)
(16,107,1)
(32,64,1)
(28,59,1)
(8,37,1)
(45,14,1)
(12,19,1)
(103,36,1)
(129,87,1)
(100,92,1)
(7,27,1)
(36,124,1)
(6,108,1)
(101,43,1)
(51,88,1)
(2,31,1)
(59,25,1)
(96,66,1)
(86,108,1)
(37,69,1)
(80,27,1)
(77,75,1)
(7,98,1)
(21,124,1)
(36,2,1)
(46,108,1)
(113,82,1)
(54,40,1)
(25,67,1)
(73,30,1)
(129,67,1)
(20,12,1)
(65,87,1)
(114,86,1)
(122,77,1)
(23,26,1)
(66,129,1)
(49,16,1)
(125,52,1)
(7,130,1)
(47,107,1)
(89,111,1)
(85,100,1)
(26,130,1)
(61,122,1)
(87,95,1)
(95,130,1)
(65,84,1)
(14,122,1)
(128,90,1)
(123,113,1)
(57,6,1)
(50,122,1)
(3,35,1)
(19,126,1)
(127,74,1)
(25,27,1)
(99,81,1)
(4,127,1)
(4,85,1)
(61,29,1)
(75,80,1)
(88,23,1)
(37,107,1)
(5,82,1)
(86,67,1)
(51,27,1)
(10,112,1)
(85,87,1)
(72,47,1)
(113,97,1)
(13,67,1)
(45,81,1)
(98,9,1)
(25,128,1)
(116,22,1)
(80,115,1)
(90,78,1)
(31,86,1)
(4,124,1)
(105,123,1)
(117,101,1)
(29,99,1)
(35,111,1)
(81,122,1)
(16,96,1)
(9,56,1)
(106,34,1)
(115,3,1)
(100,67,1)
(41,49,1)
(109,85,1)
(42,76,1)
(107,7,1)
(70,28,1)
(116,13,1)
(127,5,2)
(32,111,2)
(65,111,2)
(7,27,2)
(25,130,2)
(67,65,2)
(88,111,2)
(106,108,2)
(35,111,2)
(4,85,2)
(4,124,2)
(57,86,2)
(77,80,2)
(106,86,2)
(117,111,2)
(13,130,2)
(46,108,2)
(2,111,2)
(16,111,2)
(87,95,2)
(41,111,2)
(25,27,2)
(80,27,2)
(46,86,2)
(4,127,2)
(128,111,2)
(107,7,2)
(11,111,2)
(26,111,2)
(102,111,2)
(61,111,2)
(122,77,2)
(40,111,2)
(122,111,2)
(23,111,2)
(19,111,2)
(109,5,2)
(92,5,2)
(103,111,2)
(74,5,2)
(114,86,2)
(21,111,2)
(83,86,2)
(104,111,2)
(121,86,2)
(14,111,2)
(99,111,2)
(93,5,2)
(25,111,2)
(62,86,2)
(54,130,2)
(113,82,2)
(75,111,2)
(105,5,2)
(6,86,2)
(77,130,2)
(45,124,2)
(79,111,2)
(129,67,2)
(111,130,2)
(53,111,2)
(51,27,2)
(100,82,2)
(95,130,2)
(43,111,2)
(16,107,2)
(13,16,2)
(58,111,2)
(21,124,2)
(25,67,2)
(3,111,2)
(85,5,2)
(37,107,2)
(20,111,2)
(100,67,2)
(77,111,2)
(71,111,2)
(36,124,2)
(50,111,2)
(57,111,2)
(52,86,2)
(36,111,2)
(66,111,2)
(13,111,2)
(98,111,2)
(123,111,2)
(9,111,2)
(56,111,2)
(4,37,2)
(123,5,2)
(61,122,2)
(15,5,2)
(7,130,2)
(13,67,2)
(105,111,2)
(125,86,2)
(4,5,2)
(45,61,2)
(82,111,2)
(64,111,2)
(60,111,2)
(6,111,2)
(107,111,2)
(5,82,2)
(78,111,2)
(65,87,2)
(81,122,2)
(22,13,2)
(86,86,2)
(51,111,2)
(101,111,2)
(126,111,2)
(70,111,2)
(62,124,2)
(115,111,2)
(129,111,2)
(31,111,2)
(90,111,2)
(108,111,2)
(45,14,2)
(112,5,2)
(45,111,2)
(81,111,2)
(95,111,2)
(42,111,2)
(54,111,2)
(29,111,2)
(86,67,2)
(59,25,2)
(69,5,2)
(28,111,2)
(10,5,2)
(111,111,2)
(111,51,2)
(34,86,2)
(62,108,2)
(76,111,2)
(85,100,2)
(116,111,2)
(62,106,2)
(13,129,2)
(80,111,2)
(100,5,2)
(87,111,2)
(97,5,2)
(5,5,2)
(67,111,2)
(5,67,2)
(72,111,2)
(85,87,2)
(7,111,2)
(84,111,2)
(37,5,2)
(47,111,2)
(8,5,2)
(13,27,2)
(129,87,2)
(96,111,2)
(113,5,2)
(14,122,2)
(45,81,2)
(127,82,2)
(86,108,2)
(49,111,2)
(86,111,2)
(5,111,2)
(0,86,2)
(95,27,2)
(12,111,2)
-----------------------------------
(0,i)
(1,cmpt)
(2,"\\n")
(3,image)
(4,fprintf(out, " f(%d,%d)
(5,i < n)
(6,i)
(7,jas_image_cmptheight(image, cmptno)
(8,buf)
(9,image)
(10,width)
(11,cmptno)
(12,0)
(13,jas_image_readcmpt2(image, cmptno, width - n, height - 1, n, 1, buf)
(14,cmpt->prec_)
(15,n)
(16,height - 1)
(17,i)
(18,for (cmptno = 0; cmptno < image->numcmpts_; ++cmptno)
(19,cmptno)
(20,0)
(21,fprintf(out, "\\n")
(22,abort()
(23,image)
(24,)
(25,jas_image_readcmpt2(image, cmptno, 0, 0, n, 1, buf)
(26,cmptno)
(27,jas_image_t *image)
(28,i)
(29,type_)
(30,cmptno)
(31,out)
(32,width)
(33,)
(34,i)
(35,cmpt)
(36,fprintf(out, "\\n")
(37,height - 1)
(38,if (jas_image_readcmpt2(image, cmptno, width - n, height - 1, n, 1, buf)
(39,)
(40,cmptno)
(41,1)
(42,"\\n")
(43,"prec=%d, sgnd=%d, cmpttype=%d\\n")
(44,n)
(45,fprintf(out, "prec=%d, sgnd=%d, cmpttype=%d\\n", cmpt->prec_,\\n\\t\\t  cmpt->sgnd_, cmpt->type_)
(46,++i)
(47,n)
(48,)
(49,n)
(50,out)
(51,image->numcmpts_)
(52,0)
(53,n)
(54,++cmptno)
(55,buf)
(56,height)
(57,n)
(58,0)
(59,abort()
(60,sgnd_)
(61,cmpt->type_)
(62,fprintf(out, " f(%d,%d)
(63,height)
(64,cmptno)
(65,JAS_MIN(16, width)
(66,height)
(67,n = JAS_MIN(16, width)
(68,width)
(69,1)
(70,0)
(71,cmpt)
(72,16)
(73,0)
(74,i)
(75,cmptno)
(76,out)
(77,image->cmpts_[cmptno])
(78,n)
(79,width)
(80,image->cmpts_)
(81,cmpt->sgnd_)
(82,i = 0)
(83," f(%d,%d)
(84,width)
(85,width - n + i)
(86,i < n)
(87,width = jas_image_cmptwidth(image, cmptno)
(88,numcmpts_)
(89,RET)
(90,1)
(91,cmptno)
(92,i)
(93,out)
(94,if (jas_image_readcmpt2(image, cmptno, 0, 0, n, 1, buf)
(95,jas_image_cmptwidth(image, cmptno)
(96,1)
(97,i)
(98,cmptno)
(99,cmpt)
(100,n + i)
(101,cmpt)
(102,image)
(103,image)
(104,buf)
(105,n)
(106,buf[i])
(107,height = jas_image_cmptheight(image, cmptno)
(108,i = 0)
(109,height)
(110,for (i = 0; i < n; ++i)
(111,cmptno < image->numcmpts_)
(112," f(%d,%d)
(113,++i)
(114,out)
(115,cmpts_)
(116,i)
(117,prec_)
(118,)
(119,for (i = 0; i < n; ++i)
(120,)
(121,i)
(122,cmpt = image->cmpts_[cmptno])
(123,i)
(124,FILE *out)
(125,buf)
(126,image)
(127,buf[i])
(128,buf)
(129,width - n)
(130,cmptno = 0)
-----cfg-----
(7,27)
(26,37)
(26,44)
(27,26)
(27,34)
(30,26)
(32,30)
(34,32)
(36,215)
(37,36)
(39,54)
(41,39)
(42,41)
(44,42)
(47,76)
(47,81)
(48,47)
(48,68)
(49,48)
(49,61)
(50,49)
(50,59)
(52,50)
(54,52)
(55,49)
(57,55)
(59,57)
(60,48)
(61,66)
(64,60)
(66,64)
(67,47)
(68,73)
(71,67)
(73,71)
(75,215)
(76,75)
(79,90)
(79,94)
(80,79)
(80,85)
(81,80)
(84,79)
(85,84)
(89,215)
(90,89)
(92,100)
(94,92)
(98,104)
(100,98)
(104,107)
(107,117)
(107,213)
(110,107)
(111,113)
(113,110)
(117,125)
(121,143)
(121,147)
(122,121)
(123,131)
(125,123)
(126,122)
(127,138)
(128,127)
(129,132)
(131,129)
(132,128)
(136,126)
(138,136)
(142,215)
(143,142)
(147,150)
(150,162)
(150,111)
(153,150)
(154,156)
(156,153)
(159,176)
(161,159)
(162,166)
(164,169)
(166,164)
(167,161)
(169,167)
(172,177)
(174,172)
(176,174)
(177,193)
(177,154)
(180,177)
(183,201)
(185,183)
(186,185)
(188,186)
(190,188)
(191,190)
(193,191)
(197,208)
(197,210)
(198,197)
(199,203)
(201,199)
(202,198)
(203,202)
(207,215)
(208,207)
(210,180)
(213,215)
-----path-----
7,27,26,37,36,215
7,27,26,44,42,41,39,54,52,50,49,48,47,76,75,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177,193,191,190
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177,154,156,153
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177,193
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177,154
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,76,75,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,76,75,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,76,75,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107
7,27,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,76,75,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,76,75,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213
7,27,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,76,75,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,76,75,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111
7,27,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,37,36,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174,172,177
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176,174
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213
7,27,34,32,30,26,44,42,41,39,54,52,50,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111
7,27,34,32,30,26,44,42,41,39,54,52,50,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161,159,176
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169,167,161
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166,164,169
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113,110,107
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,162,166
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150,111,113
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,47,81,80,85,84,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,76,75,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,143,142
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121,147,150
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,79,94,92,100,98,104,107,213,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,90,89,215
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,117,125,123,131,129,132,128,127,138,136,126,122,121
7,27,34,32,30,26,44,42,41,39,54,52,50,59,57,55,49,61,66,64,60,48,68,73,71,67,47,81,80,85,84,79,94,92,100,98,104,107,213,215
-----cfgNode-----
5,<global>
6,<empty>
7,int jas_image_writecmpt (jas_image_t *image,int cmptno,jas_image_coord_t x,jas_image_coord_t y,jas_image_coord_t width,jas_image_coord_t height,jas_matrix_t *data)
8,jas_image_t *image
9,int cmptno
10,jas_image_coord_t x
11,jas_image_coord_t y
12,jas_image_coord_t width
13,jas_image_coord_t height
14,jas_matrix_t *data
15,<empty>
16,jas_image_cmpt_t* cmpt
17,jas_image_coord_t i
18,jas_image_coord_t j
19,jas_seqent_t* d
20,jas_seqent_t* dr
21,int drs
22,jas_seqent_t v
23,int k
24,int c
25,if (cmptno < 0 || cmptno >= image->numcmpts_)
26,cmptno < 0 || cmptno >= image->numcmpts_
27,cmptno < 0
28,cmptno
29,0
30,cmptno >= image->numcmpts_
31,cmptno
32,image->numcmpts_
33,image
34,numcmpts_
35,<empty>
36,return -1;
37,-1
38,1
39,cmpt = image->cmpts_[cmptno]
40,cmpt
41,image->cmpts_[cmptno]
42,image->cmpts_
43,image
44,cmpts_
45,cmptno
46,if (x >= cmpt->width_ || y >= cmpt->height_ ||
47,	  x + width > cmpt->width_ ||
48,	  y + height > cmpt->height_)
49,x >= cmpt->width_ || y >= cmpt->height_ ||
50,	  x + width > cmpt->width_ ||
51,	  y + height > cmpt->height_
52,x >= cmpt->width_ || y >= cmpt->height_ ||
53,	  x + width > cmpt->width_
54,x >= cmpt->width_ || y >= cmpt->height_
55,x >= cmpt->width_
56,x
57,cmpt->width_
58,cmpt
59,width_
60,y >= cmpt->height_
61,y
62,cmpt->height_
63,cmpt
64,height_
65,x + width > cmpt->width_
66,x + width
67,x
68,width
69,cmpt->width_
70,cmpt
71,width_
72,y + height > cmpt->height_
73,y + height
74,y
75,height
76,cmpt->height_
77,cmpt
78,height_
79,<empty>
80,return -1;
81,-1
82,1
83,if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width)
84,jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width
85,jas_matrix_numrows(data) != height
86,jas_matrix_numrows(data)
87,data
88,height
89,jas_matrix_numcols(data) != width
90,jas_matrix_numcols(data)
91,data
92,width
93,<empty>
94,return -1;
95,-1
96,1
97,dr = jas_matrix_getref(data, 0, 0)
98,dr
99,jas_matrix_getref(data, 0, 0)
100,data
101,0
102,0
103,drs = jas_matrix_rowstep(data)
104,drs
105,jas_matrix_rowstep(data)
106,data
107,for (i = 0;i < height;++i, dr += drs)
108,<empty>
109,i = 0
110,i
111,0
112,i < height
113,i
114,height
115,++i, dr += drs
116,++i
117,i
118,dr += drs
119,dr
120,drs
121,<empty>
122,d = dr
123,d
124,dr
125,if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
126,		  * cmpt->cps_, SEEK_SET) < 0)
127,jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
128,		  * cmpt->cps_, SEEK_SET) < 0
129,jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
130,		  * cmpt->cps_, SEEK_SET)
131,cmpt->stream_
132,cmpt
133,stream_
134,(cmpt->width_ * (y + i) + x)
135,		  * cmpt->cps_
136,cmpt->width_ * (y + i) + x
137,cmpt->width_ * (y + i)
138,cmpt->width_
139,cmpt
140,width_
141,y + i
142,y
143,i
144,x
145,cmpt->cps_
146,cmpt
147,cps_
148,SEEK_SET
149,0
150,<empty>
151,return -1;
152,-1
153,1
154,for (j = width;j > 0;--j, ++d)
155,<empty>
156,j = width
157,j
158,width
159,j > 0
160,j
161,0
162,--j, ++d
163,--j
164,j
165,++d
166,d
167,<empty>
168,v = inttobits(*d, cmpt->prec_, cmpt->sgnd_)
169,v
170,inttobits(*d, cmpt->prec_, cmpt->sgnd_)
171,*d
172,d
173,cmpt->prec_
174,cmpt
175,prec_
176,cmpt->sgnd_
177,cmpt
178,sgnd_
179,for (k = cmpt->cps_;k > 0;--k)
180,<empty>
181,k = cmpt->cps_
182,k
183,cmpt->cps_
184,cmpt
185,cps_
186,k > 0
187,k
188,0
189,--k
190,k
191,<empty>
192,c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff
193,c
194,(v >> (8 * (cmpt->cps_ - 1))) & 0xff
195,v >> (8 * (cmpt->cps_ - 1))
196,v
197,8 * (cmpt->cps_ - 1)
198,8
199,cmpt->cps_ - 1
200,cmpt->cps_
201,cmpt
202,cps_
203,1
204,0xff
205,if (jas_stream_putc(cmpt->stream_,
206,				  (unsigned char) c) == EOF)
207,jas_stream_putc(cmpt->stream_,
208,				  (unsigned char) c) == EOF
209,jas_stream_putc(cmpt->stream_,
210,				  (unsigned char) c)
211,cmpt->stream_
212,cmpt
213,stream_
214,(unsigned char) c
215,unsigned char
216,c
217,EOF
218,<empty>
219,return -1;
220,-1
221,1
222,v <<= 8
223,v
224,8
225,return 0;
226,0
227,RET
228,jas_image_t *image
229,int cmptno
230,jas_image_coord_t x
231,jas_image_coord_t y
232,jas_image_coord_t width
233,jas_image_coord_t height
234,jas_matrix_t *data
235,RET
236,int jas_image_writecmpt (jas_image_t *image,int cmptno,jas_image_coord_t x,jas_image_coord_t y,jas_image_coord_t width,jas_image_coord_t height,jas_matrix_t *data)
237,jas_image_t *image
238,int cmptno
239,jas_image_coord_t x
240,jas_image_coord_t y
241,jas_image_coord_t width
242,jas_image_coord_t height
243,jas_matrix_t *data
244,<empty>
245,jas_image_cmpt_t* cmpt
246,jas_image_coord_t i
247,jas_image_coord_t j
248,jas_seqent_t* d
249,jas_seqent_t* dr
250,int drs
251,jas_seqent_t v
252,int k
253,int c
254,if (cmptno < 0 || cmptno >= image->numcmpts_)
255,cmptno < 0 || cmptno >= image->numcmpts_
256,cmptno < 0
257,cmptno
258,0
259,cmptno >= image->numcmpts_
260,cmptno
261,image->numcmpts_
262,image
263,numcmpts_
264,<empty>
265,return -1;
266,-1
267,1
268,cmpt = image->cmpts_[cmptno]
269,cmpt
270,image->cmpts_[cmptno]
271,image->cmpts_
272,image
273,cmpts_
274,cmptno
275,if (x >= cmpt->width_ || y >= cmpt->height_ ||
276,	  x + width > cmpt->width_ ||
277,	  y + height > cmpt->height_)
278,x >= cmpt->width_ || y >= cmpt->height_ ||
279,	  x + width > cmpt->width_ ||
280,	  y + height > cmpt->height_
281,x >= cmpt->width_ || y >= cmpt->height_ ||
282,	  x + width > cmpt->width_
283,x >= cmpt->width_ || y >= cmpt->height_
284,x >= cmpt->width_
285,x
286,cmpt->width_
287,cmpt
288,width_
289,y >= cmpt->height_
290,y
291,cmpt->height_
292,cmpt
293,height_
294,x + width > cmpt->width_
295,x + width
296,x
297,width
298,cmpt->width_
299,cmpt
300,width_
301,y + height > cmpt->height_
302,y + height
303,y
304,height
305,cmpt->height_
306,cmpt
307,height_
308,<empty>
309,return -1;
310,-1
311,1
312,if (jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width)
313,jas_matrix_numrows(data) != height || jas_matrix_numcols(data) != width
314,jas_matrix_numrows(data) != height
315,jas_matrix_numrows(data)
316,data
317,height
318,jas_matrix_numcols(data) != width
319,jas_matrix_numcols(data)
320,data
321,width
322,<empty>
323,return -1;
324,-1
325,1
326,dr = jas_matrix_getref(data, 0, 0)
327,dr
328,jas_matrix_getref(data, 0, 0)
329,data
330,0
331,0
332,drs = jas_matrix_rowstep(data)
333,drs
334,jas_matrix_rowstep(data)
335,data
336,for (i = 0;i < height;++i, dr += drs)
337,<empty>
338,i = 0
339,i
340,0
341,i < height
342,i
343,height
344,++i, dr += drs
345,++i
346,i
347,dr += drs
348,dr
349,drs
350,<empty>
351,d = dr
352,d
353,dr
354,if (jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
355,		  * cmpt->cps_, SEEK_SET) < 0)
356,jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
357,		  * cmpt->cps_, SEEK_SET) < 0
358,jas_stream_seek(cmpt->stream_, (cmpt->width_ * (y + i) + x)
359,		  * cmpt->cps_, SEEK_SET)
360,cmpt->stream_
361,cmpt
362,stream_
363,(cmpt->width_ * (y + i) + x)
364,		  * cmpt->cps_
365,cmpt->width_ * (y + i) + x
366,cmpt->width_ * (y + i)
367,cmpt->width_
368,cmpt
369,width_
370,y + i
371,y
372,i
373,x
374,cmpt->cps_
375,cmpt
376,cps_
377,SEEK_SET
378,0
379,<empty>
380,return -1;
381,-1
382,1
383,for (j = width;j > 0;--j, ++d)
384,<empty>
385,j = width
386,j
387,width
388,j > 0
389,j
390,0
391,--j, ++d
392,--j
393,j
394,++d
395,d
396,<empty>
397,v = inttobits(*d, cmpt->prec_, cmpt->sgnd_)
398,v
399,inttobits(*d, cmpt->prec_, cmpt->sgnd_)
400,*d
401,d
402,cmpt->prec_
403,cmpt
404,prec_
405,cmpt->sgnd_
406,cmpt
407,sgnd_
408,for (k = cmpt->cps_;k > 0;--k)
409,<empty>
410,k = cmpt->cps_
411,k
412,cmpt->cps_
413,cmpt
414,cps_
415,k > 0
416,k
417,0
418,--k
419,k
420,<empty>
421,c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff
422,c
423,(v >> (8 * (cmpt->cps_ - 1))) & 0xff
424,v >> (8 * (cmpt->cps_ - 1))
425,v
426,8 * (cmpt->cps_ - 1)
427,8
428,cmpt->cps_ - 1
429,cmpt->cps_
430,cmpt
431,cps_
432,1
433,0xff
434,if (jas_stream_putc(cmpt->stream_,
435,				  (unsigned char) c) == EOF)
436,jas_stream_putc(cmpt->stream_,
437,				  (unsigned char) c) == EOF
438,jas_stream_putc(cmpt->stream_,
439,				  (unsigned char) c)
440,cmpt->stream_
441,cmpt
442,stream_
443,(unsigned char) c
444,unsigned char
445,c
446,EOF
447,<empty>
448,return -1;
449,-1
450,1
451,v <<= 8
452,v
453,8
454,return 0;
455,0
456,RET
457,jas_image_t *image
458,int cmptno
459,jas_image_coord_t x
460,jas_image_coord_t y
461,jas_image_coord_t width
462,jas_image_coord_t height
463,jas_matrix_t *data
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
int jas_image_writecmpt(jas_image_t *image, int cmptno, jas_image_coord_t x, jas_image_coord_t y, jas_image_coord_t width,   jas_image_coord_t height, jas_matrix_t *data) {
jas_image_cmpt_t *cmpt;
jas_image_coord_t i;
jas_image_coord_t j;
jas_seqent_t *d;
jas_seqent_t *dr;
int drs;
jas_seqent_t v;
int k;
int c;
cmpt = image->cmpts_[cmptno];
dr = jas_matrix_getref(data, 0, 0);
drs = jas_matrix_rowstep(data);
for(i = 0;i < height;++i, dr += drs)
d = dr;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
for(j = width;j > 0;--j, ++d)
v = inttobits(*d, cmpt->prec_, cmpt->sgnd_);
for(k = cmpt->cps_;k > 0;--k)
c = (v >> (8 * (cmpt->cps_ - 1))) & 0xff;
v <<= 8;
return 0;
=======================
