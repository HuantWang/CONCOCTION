-----label-----
0
-----code-----
static int jp2_ftyp_putdata(jp2_box_t *box, jas_stream_t *out)
{
	jp2_ftyp_t *ftyp = &box->data.ftyp;
	unsigned int i;
	if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)) {
		return -1;
	}
	for (i = 0; i < ftyp->numcompatcodes; ++i) {
		if (jp2_putuint32(out, ftyp->compatcodes[i])) {
			return -1;
		}
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
18,19
19,20
19,21
20,21
22,23
22,24
22,25
25,26
26,27
27,28
27,29
28,29
28,30
29,30
33,34
34,35
34,36
36,37
38,39
38,40
39,40
39,41
40,41
40,42
40,43
41,42
43,44
45,46
45,47
46,47
49,50
49,51
49,52
50,51
52,53
54,55
54,56
55,56
58,59
59,60
60,61
62,63
62,64
62,65
62,66
63,64
64,65
64,66
65,66
68,69
68,70
69,70
71,72
71,73
72,73
75,76
76,77
78,79
79,80
79,81
80,81
80,82
80,83
81,82
83,84
85,86
85,87
86,87
86,88
87,88
90,91
92,93
93,94
94,95
96,97
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,24,30,31,32,35,37,42,44,47,48,51,53,56,57,61,66,67,70,73,74,77,82,84,88,89,91,95,97
-----computeFrom-----
39,40
39,41
64,65
64,66
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static int jp2_ftyp_putdata(jp2_box_t *box, jas_stream_t *out){	jp2_ftyp_t *ftyp = &box->data.ftyp;	unsigned int i;	if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)) {		return -1;	}	for (i = 0; i < ftyp->numcompatcodes; ++i) {		if (jp2_putuint32(out, ftyp->compatcodes[i])) {			return -1;		}	}	return 0;}
static int
jp2_ftyp_putdata(jp2_box_t *box, jas_stream_t *out)
jp2_ftyp_putdata
jp2_box_t *box
jp2_box_t
jp2_box_t
*box
*
box
jas_stream_t *out
jas_stream_t
jas_stream_t
*out
*
out
{	jp2_ftyp_t *ftyp = &box->data.ftyp;	unsigned int i;	if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)) {		return -1;	}	for (i = 0; i < ftyp->numcompatcodes; ++i) {		if (jp2_putuint32(out, ftyp->compatcodes[i])) {			return -1;		}	}	return 0;}
jp2_ftyp_t *ftyp = &box->data.ftyp;
jp2_ftyp_t *ftyp = &box->data.ftyp;
jp2_ftyp_t
jp2_ftyp_t
*ftyp = &box->data.ftyp
*
ftyp
= &box->data.ftyp
&box->data.ftyp
box->data.ftyp
box->data
box
box
data
ftyp
unsigned int i;
unsigned int i;
unsigned int
i
i
if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)) {		return -1;	}
jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)
jp2_putuint32(out, ftyp->majver)
jp2_putuint32
jp2_putuint32
out
out
ftyp->majver
ftyp
ftyp
majver
jp2_putuint32(out, ftyp->minver)
jp2_putuint32
jp2_putuint32
out
out
ftyp->minver
ftyp
ftyp
minver
{		return -1;	}
return -1;
-1
1
for (i = 0; i < ftyp->numcompatcodes; ++i) {		if (jp2_putuint32(out, ftyp->compatcodes[i])) {			return -1;		}	}
i = 0;
i = 0
i
i
0
i < ftyp->numcompatcodes
i
i
ftyp->numcompatcodes
ftyp
ftyp
numcompatcodes
++i
i
i
{		if (jp2_putuint32(out, ftyp->compatcodes[i])) {			return -1;		}	}
if (jp2_putuint32(out, ftyp->compatcodes[i])) {			return -1;		}
jp2_putuint32(out, ftyp->compatcodes[i])
jp2_putuint32
jp2_putuint32
out
out
ftyp->compatcodes[i]
ftyp->compatcodes
ftyp
ftyp
compatcodes
i
i
{			return -1;		}
return -1;
-1
1
return 0;
0
-----joern-----
(5,11,0)
(18,14,0)
(21,25,0)
(0,7,0)
(22,11,0)
(1,15,0)
(15,11,0)
(11,0,0)
(13,7,0)
(11,8,0)
(18,7,0)
(25,24,0)
(7,18,0)
(3,25,0)
(0,11,0)
(24,2,0)
(20,5,0)
(7,0,0)
(4,18,0)
(9,15,0)
(10,18,0)
(16,8,0)
(12,6,0)
(5,6,0)
(25,11,0)
(24,25,0)
(17,5,0)
(19,8,0)
(6,2,0)
(0,7,1)
(21,15,1)
(9,11,1)
(23,6,1)
(10,22,1)
(1,9,1)
(11,0,1)
(17,20,1)
(13,18,1)
(12,5,1)
(18,4,1)
(5,11,1)
(24,25,1)
(7,18,1)
(23,15,1)
(20,24,1)
(15,11,1)
(3,21,1)
(6,12,1)
(25,3,1)
(18,14,1)
(7,13,1)
(15,1,1)
(5,17,1)
(4,10,1)
(25,11,1)
(12,15,2)
(3,15,2)
(11,0,2)
(25,11,2)
(25,15,2)
(24,15,2)
(24,25,2)
(0,7,2)
(15,11,2)
(5,11,2)
(21,15,2)
(20,15,2)
(17,15,2)
(6,15,2)
(5,15,2)
(7,18,2)
(18,14,2)
-----------------------------------
(0,&box->data.cdef)
(1,ents)
(2,)
(3,ents)
(4,data)
(5,cdef->ents)
(6,cdef->ents = 0)
(7,box->data.cdef)
(8,)
(9,cdef)
(10,box)
(11,*cdef = &box->data.cdef)
(12,0)
(13,cdef)
(14,jp2_box_t *box)
(15,cdef->ents)
(16,if (cdef->ents)
(17,ents)
(18,box->data)
(19,cdef)
(20,cdef)
(21,cdef)
(22,cdef)
(23,RET)
(24,jas_free(cdef->ents)
(25,cdef->ents)
-----cfg-----
(7,18)
(12,27)
(14,12)
(15,14)
(16,19)
(18,16)
(19,15)
(22,35)
(22,39)
(23,22)
(23,32)
(25,23)
(27,25)
(28,22)
(30,28)
(32,30)
(34,64)
(35,34)
(39,46)
(42,56)
(42,62)
(44,42)
(46,44)
(47,46)
(51,60)
(51,47)
(53,51)
(54,53)
(56,54)
(59,64)
(60,59)
(62,64)
-----path-----
7,18,16,19,15,14,12,27,25,23,22,35,34,64
7,18,16,19,15,14,12,27,25,23,22,39,46,44,42,56,54,53,51,60,59,64
7,18,16,19,15,14,12,27,25,23,22,39,46,44,42,62,64
7,18,16,19,15,14,12,27,25,23,32,30,28,22,35,34,64
7,18,16,19,15,14,12,27,25,23,32,30,28,22,39,46,44,42,56,54,53,51,60,59,64
7,18,16,19,15,14,12,27,25,23,32,30,28,22,39,46,44,42,62,64
-----cfgNode-----
5,<global>
6,<empty>
7,int jp2_ftyp_putdata (jp2_box_t *box,jas_stream_t *out)
8,jp2_box_t *box
9,jas_stream_t *out
10,<empty>
11,jp2_ftyp_t* ftyp
12,*ftyp = &box->data.ftyp
13,ftyp
14,&box->data.ftyp
15,box->data.ftyp
16,box->data
17,box
18,data
19,ftyp
20,unsigned int i
21,if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver))
22,jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)
23,jp2_putuint32(out, ftyp->majver)
24,out
25,ftyp->majver
26,ftyp
27,majver
28,jp2_putuint32(out, ftyp->minver)
29,out
30,ftyp->minver
31,ftyp
32,minver
33,<empty>
34,return -1;
35,-1
36,1
37,for (i = 0;i < ftyp->numcompatcodes;++i)
38,<empty>
39,i = 0
40,i
41,0
42,i < ftyp->numcompatcodes
43,i
44,ftyp->numcompatcodes
45,ftyp
46,numcompatcodes
47,++i
48,i
49,<empty>
50,if (jp2_putuint32(out, ftyp->compatcodes[i]))
51,jp2_putuint32(out, ftyp->compatcodes[i])
52,out
53,ftyp->compatcodes[i]
54,ftyp->compatcodes
55,ftyp
56,compatcodes
57,i
58,<empty>
59,return -1;
60,-1
61,1
62,return 0;
63,0
64,RET
65,jp2_box_t *box
66,jas_stream_t *out
67,RET
68,int jp2_ftyp_putdata (jp2_box_t *box,jas_stream_t *out)
69,jp2_box_t *box
70,jas_stream_t *out
71,<empty>
72,jp2_ftyp_t* ftyp
73,*ftyp = &box->data.ftyp
74,ftyp
75,&box->data.ftyp
76,box->data.ftyp
77,box->data
78,box
79,data
80,ftyp
81,unsigned int i
82,if (jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver))
83,jp2_putuint32(out, ftyp->majver) || jp2_putuint32(out, ftyp->minver)
84,jp2_putuint32(out, ftyp->majver)
85,out
86,ftyp->majver
87,ftyp
88,majver
89,jp2_putuint32(out, ftyp->minver)
90,out
91,ftyp->minver
92,ftyp
93,minver
94,<empty>
95,return -1;
96,-1
97,1
98,for (i = 0;i < ftyp->numcompatcodes;++i)
99,<empty>
100,i = 0
101,i
102,0
103,i < ftyp->numcompatcodes
104,i
105,ftyp->numcompatcodes
106,ftyp
107,numcompatcodes
108,++i
109,i
110,<empty>
111,if (jp2_putuint32(out, ftyp->compatcodes[i]))
112,jp2_putuint32(out, ftyp->compatcodes[i])
113,out
114,ftyp->compatcodes[i]
115,ftyp->compatcodes
116,ftyp
117,compatcodes
118,i
119,<empty>
120,return -1;
121,-1
122,1
123,return 0;
124,0
125,RET
126,jp2_box_t *box
127,jas_stream_t *out
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
static int jp2_ftyp_putdata(jp2_box_t *box, jas_stream_t *out) {
jp2_ftyp_t *ftyp = &box->data.ftyp;
unsigned int i;
for(i = 0;i < ftyp->numcompatcodes;++i)
return 0;
=======================
