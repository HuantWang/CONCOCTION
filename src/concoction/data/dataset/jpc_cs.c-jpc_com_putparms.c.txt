-----label-----
0
-----code-----
static int jpc_com_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out)
{
	jpc_com_t *com = &ms->parms.com;

	/* Eliminate compiler warning about unused variables. */
	cstate = 0;

	if (jpc_putuint16(out, com->regid)) {
		return -1;
	}
	if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)) {
		return -1;
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
23,26
23,27
23,28
24,25
25,26
25,27
26,27
28,29
28,30
28,31
31,32
32,33
33,34
33,35
34,35
34,36
35,36
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
45,48
46,47
48,49
50,51
50,52
51,52
54,55
55,56
56,57
58,59
58,60
59,60
60,61
61,62
62,63
64,65
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,27,29,30,36,37,38,42,43,47,49,52,53,57,63,65
-----computeFrom-----
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;IfStatement;ProblemExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static int jpc_com_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out){	jpc_com_t *com = &ms->parms.com;	/* Eliminate compiler warning about unused variables. */	cstate = 0;	if (jpc_putuint16(out, com->regid)) {		return -1;	}	if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)) {		return -1;	}	return 0;}
static int
jpc_com_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out)
jpc_com_putparms
jpc_ms_t *ms
jpc_ms_t
jpc_ms_t
*ms
*
ms
jpc_cstate_t *cstate
jpc_cstate_t
jpc_cstate_t
*cstate
*
cstate
jas_stream_t *out
jas_stream_t
jas_stream_t
*out
*
out
{	jpc_com_t *com = &ms->parms.com;	/* Eliminate compiler warning about unused variables. */	cstate = 0;	if (jpc_putuint16(out, com->regid)) {		return -1;	}	if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)) {		return -1;	}	return 0;}
jpc_com_t *com = &ms->parms.com;
jpc_com_t *com = &ms->parms.com;
jpc_com_t
jpc_com_t
*com = &ms->parms.com
*
com
= &ms->parms.com
&ms->parms.com
ms->parms.com
ms->parms
ms
ms
parms
com
cstate = 0;
cstate = 0
cstate
cstate
0
if (jpc_putuint16(out, com->regid)) {		return -1;	}
jpc_putuint16(out, com->regid)
jpc_putuint16
jpc_putuint16
out
out
com->regid
com
com
regid
{		return -1;	}
return -1;
-1
1
if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)) {		return -1;	}
jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)
{		return -1;	}
return -1;
-1
1
return 0;
0
-----joern-----
(24,32,0)
(21,17,0)
(20,43,0)
(3,43,0)
(45,23,0)
(6,27,0)
(9,14,0)
(15,40,0)
(19,28,0)
(0,15,0)
(29,23,0)
(28,10,0)
(15,7,0)
(17,27,0)
(49,36,0)
(30,38,0)
(43,7,0)
(36,27,0)
(23,27,0)
(23,48,0)
(28,38,0)
(10,26,0)
(51,39,0)
(6,41,0)
(10,41,0)
(14,18,0)
(50,11,0)
(48,23,0)
(46,11,0)
(36,38,0)
(32,11,0)
(38,36,0)
(1,51,0)
(38,28,0)
(31,51,0)
(16,28,0)
(51,27,0)
(44,36,0)
(11,32,0)
(13,26,0)
(2,14,0)
(43,4,0)
(32,43,0)
(34,6,0)
(38,7,0)
(17,7,0)
(17,33,0)
(41,10,0)
(43,32,0)
(25,4,0)
(38,26,0)
(5,39,0)
(42,15,0)
(22,6,0)
(35,26,0)
(14,7,0)
(11,27,0)
(37,38,0)
(41,6,0)
(39,51,0)
(47,17,0)
(8,10,0)
(48,23,1)
(38,7,1)
(42,39,1)
(11,46,1)
(39,5,1)
(32,24,1)
(21,39,1)
(17,27,1)
(23,27,1)
(14,9,1)
(38,36,1)
(43,32,1)
(51,27,1)
(45,38,1)
(44,49,1)
(47,21,1)
(2,48,1)
(37,30,1)
(20,48,1)
(6,27,1)
(28,16,1)
(10,41,1)
(19,36,1)
(12,15,1)
(39,51,1)
(6,34,1)
(32,11,1)
(29,45,1)
(15,0,1)
(23,29,1)
(3,20,1)
(38,28,1)
(5,51,1)
(0,42,1)
(11,27,1)
(12,17,1)
(15,7,1)
(43,7,1)
(22,8,1)
(49,37,1)
(41,6,1)
(12,14,1)
(1,43,1)
(14,7,1)
(17,47,1)
(9,2,1)
(50,3,1)
(36,44,1)
(24,11,1)
(46,50,1)
(36,27,1)
(28,10,1)
(31,1,1)
(51,31,1)
(17,7,1)
(16,19,1)
(30,10,1)
(34,22,1)
(51,27,2)
(11,48,2)
(32,11,2)
(28,10,2)
(15,7,2)
(42,39,2)
(38,7,2)
(20,48,2)
(38,36,2)
(51,48,2)
(17,39,2)
(3,48,2)
(14,7,2)
(5,48,2)
(9,48,2)
(14,48,2)
(24,48,2)
(43,48,2)
(17,27,2)
(6,27,2)
(41,6,2)
(39,48,2)
(39,51,2)
(11,27,2)
(38,28,2)
(50,48,2)
(2,48,2)
(31,48,2)
(47,39,2)
(10,41,2)
(21,39,2)
(32,48,2)
(46,48,2)
(15,39,2)
(23,27,2)
(48,23,2)
(0,39,2)
(17,7,2)
(36,27,2)
(43,7,2)
(1,48,2)
(43,32,2)
-----------------------------------
(0,"\\n")
(1,ms)
(2,out)
(3," len = %d;")
(4,)
(5,dumpparms)
(6,ms->id)
(7,FILE *out)
(8,mstabent)
(9,"\\n")
(10,mstabent = jpc_mstab_lookup(ms->id)
(11,ms->len)
(12,RET)
(13,mstabent)
(14,fprintf(out, "\\n")
(15,fprintf(out, "\\n")
(16,name)
(17,(*ms->ops->dumpparms)
(18,)
(19,mstabent)
(20,out)
(21,ms)
(22,ms)
(23,ms->id)
(24,2)
(25,if (ms->ops->dumpparms)
(26,)
(27,jpc_ms_t *ms)
(28,mstabent->name)
(29,id)
(30,out)
(31,ops)
(32,ms->len + 2)
(33,)
(34,id)
(35,if (JPC_MS_HASPARMS(ms->id)
(36,ms->id)
(37,"type = 0x%04x (%s)
(38,fprintf(out, "type = 0x%04x (%s)
(39,ms->ops->dumpparms)
(40,)
(41,jpc_mstab_lookup(ms->id)
(42,out)
(43,fprintf(out, " len = %d;", ms->len + 2)
(44,id)
(45,ms)
(46,len)
(47,out)
(48,JPC_MS_HASPARMS(ms->id)
(49,ms)
(50,ms)
(51,ms->ops)
-----cfg-----
(32,31)
(35,38)
(35,40)
(37,42)
(38,37)
(7,19)
(40,42)
(13,21)
(15,13)
(16,15)
(17,20)
(19,17)
(20,16)
(21,29)
(25,35)
(25,32)
(27,25)
(29,27)
(31,42)
-----path-----
7,19,17,20,16,15,13,21,29,27,25,35,38,37,42
7,19,17,20,16,15,13,21,29,27,25,35,40,42
7,19,17,20,16,15,13,21,29,27,25,32,31,42
-----cfgNode-----
5,<global>
6,<empty>
7,int jpc_com_putparms (jpc_ms_t *ms,jpc_cstate_t *cstate,jas_stream_t *out)
8,jpc_ms_t *ms
9,jpc_cstate_t *cstate
10,jas_stream_t *out
11,<empty>
12,jpc_com_t* com
13,*com = &ms->parms.com
14,com
15,&ms->parms.com
16,ms->parms.com
17,ms->parms
18,ms
19,parms
20,com
21,cstate = 0
22,cstate
23,0
24,if (jpc_putuint16(out, com->regid))
25,jpc_putuint16(out, com->regid)
26,out
27,com->regid
28,com
29,regid
30,<empty>
31,return -1;
32,-1
33,1
34,if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len))
35,jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)
36,<empty>
37,return -1;
38,-1
39,1
40,return 0;
41,0
42,RET
43,jpc_ms_t *ms
44,jpc_cstate_t *cstate
45,jas_stream_t *out
46,RET
47,int jpc_com_putparms (jpc_ms_t *ms,jpc_cstate_t *cstate,jas_stream_t *out)
48,jpc_ms_t *ms
49,jpc_cstate_t *cstate
50,jas_stream_t *out
51,<empty>
52,jpc_com_t* com
53,*com = &ms->parms.com
54,com
55,&ms->parms.com
56,ms->parms.com
57,ms->parms
58,ms
59,parms
60,com
61,cstate = 0
62,cstate
63,0
64,if (jpc_putuint16(out, com->regid))
65,jpc_putuint16(out, com->regid)
66,out
67,com->regid
68,com
69,regid
70,<empty>
71,return -1;
72,-1
73,1
74,if (jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len))
75,jas_stream_write(out, com->data, com->len) != JAS_CAST(int, com->len)
76,<empty>
77,return -1;
78,-1
79,1
80,return 0;
81,0
82,RET
83,jpc_ms_t *ms
84,jpc_cstate_t *cstate
85,jas_stream_t *out
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
static int jpc_com_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out) {
jpc_com_t *com = &ms->parms.com;
cstate = 0;
return 0;
=======================
