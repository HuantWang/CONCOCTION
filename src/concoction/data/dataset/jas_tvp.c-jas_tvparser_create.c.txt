-----label-----
0
-----code-----
jas_tvparser_t *jas_tvparser_create(const char *s)
{
	jas_tvparser_t *tvp;
	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {
		return 0;
	}
	if (!(tvp->buf = jas_strdup(s))) {
		jas_tvparser_destroy(tvp);
		return 0;
	}
	tvp->pos = tvp->buf;
	tvp->tag = 0;
	tvp->val = 0;
	return tvp;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
9,10
9,11
12,13
12,14
12,15
12,16
12,17
12,18
12,19
13,14
14,15
14,16
15,16
17,18
17,19
20,21
20,22
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
34,35
35,36
37,38
37,39
38,39
39,40
40,41
40,42
41,42
41,43
42,43
45,46
45,47
46,47
48,49
50,51
50,52
51,52
52,53
52,54
53,54
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
65,66
65,67
66,67
69,70
70,71
70,72
71,72
71,73
72,73
76,77
77,78
77,79
78,79
78,80
79,80
83,84
84,85
-----nextToken-----
3,5,6,8,10,11,16,18,19,25,28,32,33,36,43,44,47,49,54,56,58,63,64,67,68,73,74,75,80,81,82,85
-----computeFrom-----
23,24
23,25
40,41
40,42
60,61
60,62
70,71
70,72
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;CompoundStatement;ReturnStatement;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
jas_tvparser_t *jas_tvparser_create(const char *s){	jas_tvparser_t *tvp;	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}	if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}	tvp->pos = tvp->buf;	tvp->tag = 0;	tvp->val = 0;	return tvp;}
jas_tvparser_t
jas_tvparser_t
*jas_tvparser_create(const char *s)
*
jas_tvparser_create
const char *s
const char
*s
*
s
{	jas_tvparser_t *tvp;	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}	if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}	tvp->pos = tvp->buf;	tvp->tag = 0;	tvp->val = 0;	return tvp;}
jas_tvparser_t *tvp;
jas_tvparser_t *tvp;
jas_tvparser_t
jas_tvparser_t
*tvp
*
tvp
if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}
!(tvp = jas_malloc(sizeof(jas_tvparser_t)))
(tvp = jas_malloc(sizeof(jas_tvparser_t)))
tvp = jas_malloc(sizeof(jas_tvparser_t))
tvp
tvp
jas_malloc(sizeof(jas_tvparser_t))
jas_malloc
jas_malloc
sizeof(jas_tvparser_t)
jas_tvparser_t
jas_tvparser_t
jas_tvparser_t

{		return 0;	}
return 0;
0
if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}
!(tvp->buf = jas_strdup(s))
(tvp->buf = jas_strdup(s))
tvp->buf = jas_strdup(s)
tvp->buf
tvp
tvp
buf
jas_strdup(s)
jas_strdup
jas_strdup
s
s
{		jas_tvparser_destroy(tvp);		return 0;	}
jas_tvparser_destroy(tvp);
jas_tvparser_destroy(tvp)
jas_tvparser_destroy
jas_tvparser_destroy
tvp
tvp
return 0;
0
tvp->pos = tvp->buf;
tvp->pos = tvp->buf
tvp->pos
tvp
tvp
pos
tvp->buf
tvp
tvp
buf
tvp->tag = 0;
tvp->tag = 0
tvp->tag
tvp
tvp
tag
0
tvp->val = 0;
tvp->val = 0
tvp->val
tvp
tvp
val
0
return tvp;
tvp
tvp
-----joern-----
(6,5,0)
(13,8,0)
(5,0,0)
(9,7,0)
(1,10,0)
(10,7,0)
(11,9,0)
(5,7,0)
(13,10,0)
(10,13,0)
(3,9,0)
(2,10,0)
(12,0,0)
(13,10,1)
(4,5,1)
(9,7,1)
(5,7,1)
(10,7,1)
(9,11,1)
(11,3,1)
(6,9,1)
(2,1,1)
(10,2,1)
(6,13,1)
(1,9,1)
(5,6,1)
(5,7,2)
(9,7,2)
(2,9,2)
(13,9,2)
(10,9,2)
(10,7,2)
(13,10,2)
(1,9,2)
-----------------------------------
(0,)
(1,tvp)
(2,buf)
(3,tvp)
(4,RET)
(5,jas_free(tvp)
(6,tvp)
(7,jas_tvparser_t *tvp)
(8,)
(9,tvp->buf)
(10,tvp->buf)
(11,buf)
(12,if (tvp->buf)
(13,jas_free(tvp->buf)
-----cfg-----
(7,16)
(12,19)
(12,26)
(13,12)
(15,13)
(16,15)
(19,53)
(22,30)
(22,37)
(23,22)
(24,27)
(26,24)
(27,23)
(30,32)
(32,53)
(34,44)
(35,40)
(37,35)
(38,34)
(40,38)
(41,49)
(42,41)
(44,42)
(46,51)
(47,46)
(49,47)
(51,53)
-----path-----
7,16,15,13,12,19,53
7,16,15,13,12,26,24,27,23,22,30,32,53
7,16,15,13,12,26,24,27,23,22,37,35,40,38,34,44,42,41,49,47,46,51,53
-----cfgNode-----
5,<global>
6,<empty>
7,jas_tvparser_t jas_tvparser_create (const char *s)
8,const char *s
9,<empty>
10,jas_tvparser_t* tvp
11,if (!(tvp = jas_malloc(sizeof(jas_tvparser_t))))
12,!(tvp = jas_malloc(sizeof(jas_tvparser_t)))
13,tvp = jas_malloc(sizeof(jas_tvparser_t))
14,tvp
15,jas_malloc(sizeof(jas_tvparser_t))
16,sizeof(jas_tvparser_t)
17,jas_tvparser_t
18,<empty>
19,return 0;
20,0
21,if (!(tvp->buf = jas_strdup(s)))
22,!(tvp->buf = jas_strdup(s))
23,tvp->buf = jas_strdup(s)
24,tvp->buf
25,tvp
26,buf
27,jas_strdup(s)
28,s
29,<empty>
30,jas_tvparser_destroy(tvp)
31,tvp
32,return 0;
33,0
34,tvp->pos = tvp->buf
35,tvp->pos
36,tvp
37,pos
38,tvp->buf
39,tvp
40,buf
41,tvp->tag = 0
42,tvp->tag
43,tvp
44,tag
45,0
46,tvp->val = 0
47,tvp->val
48,tvp
49,val
50,0
51,return tvp;
52,tvp
53,RET
54,const char *s
55,RET
56,jas_tvparser_t jas_tvparser_create (const char *s)
57,const char *s
58,<empty>
59,jas_tvparser_t* tvp
60,if (!(tvp = jas_malloc(sizeof(jas_tvparser_t))))
61,!(tvp = jas_malloc(sizeof(jas_tvparser_t)))
62,tvp = jas_malloc(sizeof(jas_tvparser_t))
63,tvp
64,jas_malloc(sizeof(jas_tvparser_t))
65,sizeof(jas_tvparser_t)
66,jas_tvparser_t
67,<empty>
68,return 0;
69,0
70,if (!(tvp->buf = jas_strdup(s)))
71,!(tvp->buf = jas_strdup(s))
72,tvp->buf = jas_strdup(s)
73,tvp->buf
74,tvp
75,buf
76,jas_strdup(s)
77,s
78,<empty>
79,jas_tvparser_destroy(tvp)
80,tvp
81,return 0;
82,0
83,tvp->pos = tvp->buf
84,tvp->pos
85,tvp
86,pos
87,tvp->buf
88,tvp
89,buf
90,tvp->tag = 0
91,tvp->tag
92,tvp
93,tag
94,0
95,tvp->val = 0
96,tvp->val
97,tvp
98,val
99,0
100,return tvp;
101,tvp
102,RET
103,const char *s
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
jas_tvparser_t *jas_tvparser_create(const char *s) {
jas_tvparser_t *tvp;
tvp->pos = tvp->buf;
tvp->tag = 0;
tvp->val = 0;
return tvp;
=======================
