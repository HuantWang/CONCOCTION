-----label-----
0
-----code-----
void jpc_mqenc_destroy(jpc_mqenc_t *mqenc)
{
	if (mqenc->ctxs) {
		jas_free(mqenc->ctxs);
	}
	jas_free(mqenc);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
12,14
13,14
13,15
14,15
17,18
18,19
19,20
19,21
20,21
22,23
22,24
23,24
26,27
27,28
27,29
28,29
30,31
-----nextToken-----
2,4,7,9,10,15,16,21,24,25,29,31
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void jpc_mqenc_destroy(jpc_mqenc_t *mqenc){	if (mqenc->ctxs) {		jas_free(mqenc->ctxs);	}	jas_free(mqenc);}
void
jpc_mqenc_destroy(jpc_mqenc_t *mqenc)
jpc_mqenc_destroy
jpc_mqenc_t *mqenc
jpc_mqenc_t
jpc_mqenc_t
*mqenc
*
mqenc
{	if (mqenc->ctxs) {		jas_free(mqenc->ctxs);	}	jas_free(mqenc);}
if (mqenc->ctxs) {		jas_free(mqenc->ctxs);	}
mqenc->ctxs
mqenc
mqenc
ctxs
{		jas_free(mqenc->ctxs);	}
jas_free(mqenc->ctxs);
jas_free(mqenc->ctxs)
jas_free
jas_free
mqenc->ctxs
mqenc
mqenc
ctxs
jas_free(mqenc);
jas_free(mqenc)
jas_free
jas_free
mqenc
mqenc
-----joern-----
(48,17,0)
(33,7,0)
(61,41,0)
(46,45,0)
(19,76,0)
(28,17,0)
(62,17,0)
(13,52,0)
(1,15,0)
(67,60,0)
(52,17,0)
(50,76,0)
(4,17,0)
(71,61,0)
(46,52,0)
(2,15,0)
(38,62,0)
(22,14,0)
(47,67,0)
(76,43,0)
(51,46,0)
(18,40,0)
(76,17,0)
(63,48,0)
(45,46,0)
(9,4,0)
(72,34,0)
(68,27,0)
(5,70,0)
(43,70,0)
(48,63,0)
(7,0,0)
(16,67,0)
(41,70,0)
(68,7,0)
(15,8,0)
(32,18,0)
(73,44,0)
(14,58,0)
(66,43,0)
(32,74,0)
(46,34,0)
(6,68,0)
(46,17,0)
(40,58,0)
(32,28,0)
(63,27,0)
(62,8,0)
(75,28,0)
(56,40,0)
(60,35,0)
(4,69,0)
(44,46,0)
(46,44,0)
(39,18,0)
(3,40,0)
(21,71,0)
(34,17,0)
(23,45,0)
(28,32,0)
(10,71,0)
(11,48,0)
(57,60,0)
(25,70,0)
(52,46,0)
(41,61,0)
(26,41,0)
(24,14,0)
(40,17,0)
(18,70,0)
(27,63,0)
(55,68,0)
(67,17,0)
(58,14,0)
(8,65,0)
(8,15,0)
(15,27,0)
(59,62,0)
(35,60,0)
(14,27,0)
(37,52,0)
(31,45,0)
(60,67,0)
(45,17,0)
(30,74,0)
(58,36,0)
(54,44,0)
(74,32,0)
(46,49,0)
(42,34,0)
(18,62,0)
(12,32,0)
(44,17,0)
(20,48,0)
(64,27,0)
(67,8,0)
(58,62,0)
(53,65,0)
(34,46,0)
(43,76,0)
(29,61,0)
(27,70,0)
(7,68,0)
(68,55,1)
(3,56,1)
(52,17,1)
(58,14,1)
(15,2,1)
(7,68,1)
(21,29,1)
(7,0,1)
(52,13,1)
(51,44,1)
(41,61,1)
(60,57,1)
(75,58,1)
(41,10,1)
(1,62,1)
(63,48,1)
(46,17,1)
(47,16,1)
(59,7,1)
(64,43,1)
(68,27,1)
(67,17,1)
(16,8,1)
(44,54,1)
(40,17,1)
(76,50,1)
(12,28,1)
(57,67,1)
(19,66,1)
(32,28,1)
(40,3,1)
(73,45,1)
(28,17,1)
(23,52,1)
(58,62,1)
(11,64,1)
(75,4,1)
(8,15,1)
(44,17,1)
(18,40,1)
(9,35,1)
(14,22,1)
(38,59,1)
(34,17,1)
(67,47,1)
(31,23,1)
(54,73,1)
(45,17,1)
(55,6,1)
(66,41,1)
(56,35,1)
(45,31,1)
(13,37,1)
(62,38,1)
(18,62,1)
(4,9,1)
(75,46,1)
(10,21,1)
(37,34,1)
(48,20,1)
(33,68,1)
(39,18,1)
(28,75,1)
(46,44,1)
(14,27,1)
(18,32,1)
(50,19,1)
(74,30,1)
(46,34,1)
(24,40,1)
(4,17,1)
(72,42,1)
(46,45,1)
(20,11,1)
(29,26,1)
(76,17,1)
(35,60,1)
(30,28,1)
(43,76,1)
(48,17,1)
(46,51,1)
(60,67,1)
(32,74,1)
(6,27,1)
(42,7,1)
(27,63,1)
(67,8,1)
(22,24,1)
(46,52,1)
(15,27,1)
(34,72,1)
(32,12,1)
(7,33,1)
(62,17,1)
(2,1,1)
(46,45,2)
(2,7,2)
(58,62,2)
(4,35,2)
(13,7,2)
(40,17,2)
(32,28,2)
(63,48,2)
(46,34,2)
(41,61,2)
(62,7,2)
(15,27,2)
(62,17,2)
(3,35,2)
(54,7,2)
(60,7,2)
(35,60,2)
(46,52,2)
(67,17,2)
(73,7,2)
(47,7,2)
(27,63,2)
(58,14,2)
(46,44,2)
(30,28,2)
(8,7,2)
(67,8,2)
(35,7,2)
(68,27,2)
(39,18,2)
(52,17,2)
(51,7,2)
(74,28,2)
(42,7,2)
(46,17,2)
(7,68,2)
(14,27,2)
(48,17,2)
(23,7,2)
(18,62,2)
(4,17,2)
(72,7,2)
(46,7,2)
(56,35,2)
(45,17,2)
(34,17,2)
(16,7,2)
(59,7,2)
(37,7,2)
(14,35,2)
(1,7,2)
(60,67,2)
(31,7,2)
(32,74,2)
(76,17,2)
(67,7,2)
(34,7,2)
(45,7,2)
(52,7,2)
(43,76,2)
(44,17,2)
(7,0,2)
(28,17,2)
(38,7,2)
(8,15,2)
(44,7,2)
(24,35,2)
(22,35,2)
(15,7,2)
(18,40,2)
(57,7,2)
(58,35,2)
(9,35,2)
(12,28,2)
(40,35,2)
-----------------------------------
(0,int bit)
(1,state)
(2,qeval)
(3,creg)
(4,jpc_mqenc_codemps2(mqenc)
(5,if (state->mps == bit)
(6,state)
(7,state->mps == bit)
(8,mqenc->areg -= state->qeval)
(9,mqenc)
(10,bit)
(11,mqenc)
(12,0)
(13,creg)
(14,state->qeval)
(15,state->qeval)
(16,mqenc)
(17,jpc_mqenc_t *mqenc)
(18,return jpc_mqenc_error(mqenc)
(19,mqenc)
(20,curctx)
(21,mqenc)
(22,qeval)
(23,mqenc)
(24,state)
(25,state)
(26,100)
(27,state = *(mqenc->curctx)
(28,jpc_mqenc_error(mqenc)
(29,"jpc_mqenc_putbit(%p, %d)
(30,1)
(31,ctreg)
(32,jpc_mqenc_error(mqenc)
(33,bit)
(34,mqenc->areg)
(35,!(mqenc->areg & 0x8000)
(36,)
(37,mqenc)
(38,areg)
(39,RET)
(40,mqenc->creg)
(41,JAS_DBGLOG(100, ("jpc_mqenc_putbit(%p, %d)
(42,mqenc)
(43,JPC_MQENC_CALL(100, jpc_mqenc_dump(mqenc, stderr)
(44,mqenc->curctx)
(45,mqenc->ctreg)
(46,jpc_mqenc_codelps2(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc->curctx, mqenc)
(47,areg)
(48,mqenc->curctx)
(49,)
(50,stderr)
(51,mqenc)
(52,mqenc->creg)
(53,if (!(mqenc->areg & 0x8000)
(54,curctx)
(55,mps)
(56,mqenc)
(57,0x8000)
(58,mqenc->creg += state->qeval)
(59,mqenc)
(60,mqenc->areg & 0x8000)
(61,)
(62,mqenc->areg)
(63,*(mqenc->curctx)
(64,state)
(65,)
(66,100)
(67,mqenc->areg)
(68,state->mps)
(69,)
(70,)
(71,)
(72,areg)
(73,mqenc)
(74,-1)
(75,mqenc)
(76,jpc_mqenc_dump(mqenc, stderr)
-----cfg-----
(16,15)
(18,16)
(19,21)
(7,13)
(11,18)
(11,19)
(13,11)
(15,19)
-----path-----
7,13,11,18,16,15,19,21
7,13,11,19,21
-----cfgNode-----
5,<global>
6,<empty>
7,void jpc_mqenc_destroy (jpc_mqenc_t *mqenc)
8,jpc_mqenc_t *mqenc
9,<empty>
10,if (mqenc->ctxs)
11,mqenc->ctxs
12,mqenc
13,ctxs
14,<empty>
15,jas_free(mqenc->ctxs)
16,mqenc->ctxs
17,mqenc
18,ctxs
19,jas_free(mqenc)
20,mqenc
21,RET
22,jpc_mqenc_t *mqenc
23,RET
24,void jpc_mqenc_destroy (jpc_mqenc_t *mqenc)
25,jpc_mqenc_t *mqenc
26,<empty>
27,if (mqenc->ctxs)
28,mqenc->ctxs
29,mqenc
30,ctxs
31,<empty>
32,jas_free(mqenc->ctxs)
33,mqenc->ctxs
34,mqenc
35,ctxs
36,jas_free(mqenc)
37,mqenc
38,RET
39,jpc_mqenc_t *mqenc
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
void jpc_mqenc_destroy(jpc_mqenc_t *mqenc) {
if(mqenc->ctxs)
jas_free(mqenc->ctxs);
jas_free(mqenc);
=======================
