-----label-----
0
-----code-----
void jas_iccattrval_destroy(jas_iccattrval_t *attrval)
{
#if 0
jas_eprintf("refcnt=%d\n", attrval->refcnt);
#endif
	if (--attrval->refcnt <= 0) {
		if (attrval->ops->destroy)
			(*attrval->ops->destroy)(attrval);
		jas_free(attrval);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
15,16
15,17
16,17
20,21
20,22
21,22
21,23
22,23
22,24
23,24
23,25
24,25
28,29
29,30
29,31
30,31
31,32
32,33
32,34
33,34
33,35
34,35
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,7,9,10,17,18,19,25,26,27,35,36,37,39,43,45
-----computeFrom-----
13,14
13,15
-----guardedBy-----
17,45
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void jas_iccattrval_destroy(jas_iccattrval_t *attrval){#if 0jas_eprintf("refcnt=%d\n", attrval->refcnt);#endif	if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}}
void
jas_iccattrval_destroy(jas_iccattrval_t *attrval)
jas_iccattrval_destroy
jas_iccattrval_t *attrval
jas_iccattrval_t
jas_iccattrval_t
*attrval
*
attrval
{#if 0jas_eprintf("refcnt=%d\n", attrval->refcnt);#endif	if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}}
if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}
--attrval->refcnt <= 0
--attrval->refcnt
attrval->refcnt
attrval
attrval
refcnt
0
{		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}
if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);
attrval->ops->destroy
attrval->ops
attrval
attrval
ops
destroy
(*attrval->ops->destroy)(attrval);
(*attrval->ops->destroy)(attrval)
(*attrval->ops->destroy)
*attrval->ops->destroy
attrval->ops->destroy
attrval->ops
attrval
attrval
ops
destroy
attrval
attrval
jas_free(attrval);
jas_free(attrval)
jas_free
jas_free
attrval
attrval
-----joern-----
(4,40,0)
(39,28,0)
(47,3,0)
(36,29,0)
(17,47,0)
(35,23,0)
(26,28,0)
(40,22,0)
(43,40,0)
(31,15,0)
(19,28,0)
(22,28,0)
(46,29,0)
(38,28,0)
(33,21,0)
(1,39,0)
(23,38,0)
(45,47,0)
(42,47,0)
(24,12,0)
(1,17,0)
(21,33,0)
(47,45,0)
(25,12,0)
(9,42,0)
(11,28,0)
(16,23,0)
(41,12,0)
(42,31,0)
(39,1,0)
(14,39,0)
(12,47,0)
(10,19,0)
(13,28,0)
(6,19,0)
(27,7,0)
(36,38,0)
(2,48,0)
(29,21,0)
(48,21,0)
(17,1,0)
(49,42,0)
(5,28,0)
(21,48,0)
(22,40,0)
(29,36,0)
(40,47,0)
(31,28,0)
(20,21,0)
(23,47,0)
(12,25,0)
(19,47,0)
(37,17,0)
(0,17,0)
(8,28,0)
(32,29,0)
(38,36,0)
(39,25,0)
(18,31,0)
(7,28,0)
(48,15,0)
(25,39,0)
(30,47,0)
(3,47,0)
(6,7,0)
(27,44,1)
(47,45,1)
(25,12,1)
(16,35,1)
(22,40,1)
(33,21,1)
(19,10,1)
(6,7,1)
(38,36,1)
(6,19,1)
(32,46,1)
(12,47,1)
(48,2,1)
(7,27,1)
(39,25,1)
(14,1,1)
(21,48,1)
(31,15,1)
(3,47,1)
(23,16,1)
(45,30,1)
(40,47,1)
(17,47,1)
(35,3,1)
(17,0,1)
(18,42,1)
(2,20,1)
(40,43,1)
(44,33,1)
(23,47,1)
(48,15,1)
(42,9,1)
(29,32,1)
(37,22,1)
(34,3,1)
(24,41,1)
(0,37,1)
(1,17,1)
(12,24,1)
(4,31,1)
(49,38,1)
(9,49,1)
(27,34,1)
(30,33,1)
(29,21,1)
(39,1,1)
(41,14,1)
(43,4,1)
(31,18,1)
(36,29,1)
(42,47,1)
(46,23,1)
(10,39,1)
(19,47,1)
(6,19,2)
(41,3,2)
(36,29,2)
(18,3,2)
(1,17,2)
(27,3,2)
(39,1,2)
(31,15,2)
(22,3,2)
(47,33,2)
(45,33,2)
(3,47,2)
(4,3,2)
(22,40,2)
(32,3,2)
(25,12,2)
(17,47,2)
(47,45,2)
(42,47,2)
(23,3,2)
(38,36,2)
(27,33,2)
(29,3,2)
(40,47,2)
(36,3,2)
(23,47,2)
(9,3,2)
(39,25,2)
(7,33,2)
(21,48,2)
(12,47,2)
(38,3,2)
(31,3,2)
(48,15,2)
(3,33,2)
(30,33,2)
(40,3,2)
(37,3,2)
(10,3,2)
(24,3,2)
(19,3,2)
(0,3,2)
(1,3,2)
(33,21,2)
(44,33,2)
(49,3,2)
(43,3,2)
(35,3,2)
(14,3,2)
(42,3,2)
(46,3,2)
(12,3,2)
(39,3,2)
(6,7,2)
(17,3,2)
(34,3,2)
(7,3,2)
(29,21,2)
(16,3,2)
(25,3,2)
(19,47,2)
-----------------------------------
(0,data)
(1,&attrval->data)
(2,type)
(3,!(attrval = jas_iccattrval_create0()
(4,attrval)
(5,error:)
(6,RET)
(7,return 0;)
(8,attrval)
(9,type)
(10,attrval)
(11,if (!(attrval = jas_iccattrval_create0()
(12,attrval->data)
(13,info)
(14,0)
(15,jas_iccuint32_t type)
(16,ops)
(17,attrval->data)
(18,type)
(19,return attrval;)
(20,info)
(21,info = jas_iccattrvalinfo_lookup(type)
(22,++attrval->refcnt)
(23,attrval->ops)
(24,data)
(25,sizeof(attrval->data)
(26,if (!(info = jas_iccattrvalinfo_lookup(type)
(27,0)
(28,)
(29,info->ops)
(30,attrval)
(31,attrval->type = type)
(32,ops)
(33,!(info = jas_iccattrvalinfo_lookup(type)
(34,goto error;)
(35,attrval)
(36,&info->ops)
(37,attrval)
(38,attrval->ops = &info->ops)
(39,memset(&attrval->data, 0, sizeof(attrval->data)
(40,attrval->refcnt)
(41,attrval)
(42,attrval->type)
(43,refcnt)
(44,goto error;)
(45,jas_iccattrval_create0()
(46,info)
(47,attrval = jas_iccattrval_create0()
(48,jas_iccattrvalinfo_lookup(type)
(49,attrval)
-----cfg-----
(33,35)
(7,15)
(11,35)
(11,22)
(12,11)
(13,12)
(15,13)
(19,30)
(19,33)
(20,23)
(22,20)
(23,19)
(25,33)
(26,25)
(27,26)
(28,31)
(30,28)
(31,27)
-----path-----
7,15,13,12,11,35
7,15,13,12,11,22,20,23,19,30,28,31,27,26,25,33,35
7,15,13,12,11,22,20,23,19,33,35
-----cfgNode-----
5,<global>
6,<empty>
7,void jas_iccattrval_destroy (jas_iccattrval_t *attrval)
8,jas_iccattrval_t *attrval
9,<empty>
10,if (--attrval->refcnt <= 0)
11,--attrval->refcnt <= 0
12,--attrval->refcnt
13,attrval->refcnt
14,attrval
15,refcnt
16,0
17,<empty>
18,if (attrval->ops->destroy)
19,attrval->ops->destroy
20,attrval->ops
21,attrval
22,ops
23,destroy
24,<empty>
25,(*attrval->ops->destroy)(attrval)
26,*attrval->ops->destroy
27,attrval->ops->destroy
28,attrval->ops
29,attrval
30,ops
31,destroy
32,attrval
33,jas_free(attrval)
34,attrval
35,RET
36,jas_iccattrval_t *attrval
37,RET
38,void jas_iccattrval_destroy (jas_iccattrval_t *attrval)
39,jas_iccattrval_t *attrval
40,<empty>
41,if (--attrval->refcnt <= 0)
42,--attrval->refcnt <= 0
43,--attrval->refcnt
44,attrval->refcnt
45,attrval
46,refcnt
47,0
48,<empty>
49,if (attrval->ops->destroy)
50,attrval->ops->destroy
51,attrval->ops
52,attrval
53,ops
54,destroy
55,<empty>
56,(*attrval->ops->destroy)(attrval)
57,*attrval->ops->destroy
58,attrval->ops->destroy
59,attrval->ops
60,attrval
61,ops
62,destroy
63,attrval
64,jas_free(attrval)
65,attrval
66,RET
67,jas_iccattrval_t *attrval
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
void jas_iccattrval_destroy(jas_iccattrval_t *attrval) {
if(--attrval->refcnt <= 0)
if(attrval->ops->destroy)
(*attrval->ops->destroy)(attrval);
jas_free(attrval);
=======================
