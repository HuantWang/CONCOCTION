-----label-----
0
-----code-----
void jp2_box_destroy(jp2_box_t *box)
{
	if (box->ops->destroy) {
		(*box->ops->destroy)(box);
	}
	jas_free(box);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
12,14
13,14
13,15
14,15
14,16
15,16
19,20
20,21
21,22
21,23
22,23
23,24
24,25
24,26
25,26
25,27
26,27
30,31
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,7,9,10,16,17,18,27,28,29,31,35,37
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void jp2_box_destroy(jp2_box_t *box){	if (box->ops->destroy) {		(*box->ops->destroy)(box);	}	jas_free(box);}
void
jp2_box_destroy(jp2_box_t *box)
jp2_box_destroy
jp2_box_t *box
jp2_box_t
jp2_box_t
*box
*
box
{	if (box->ops->destroy) {		(*box->ops->destroy)(box);	}	jas_free(box);}
if (box->ops->destroy) {		(*box->ops->destroy)(box);	}
box->ops->destroy
box->ops
box
box
ops
destroy
{		(*box->ops->destroy)(box);	}
(*box->ops->destroy)(box);
(*box->ops->destroy)(box)
(*box->ops->destroy)
*box->ops->destroy
box->ops->destroy
box->ops
box
box
ops
destroy
box
box
jas_free(box);
jas_free(box)
jas_free
jas_free
box
box
-----joern-----
(5,11,0)
(18,14,0)
(21,25,0)
(0,7,0)
(22,11,0)
(1,15,0)
(15,11,0)
(11,0,0)
(13,7,0)
(11,8,0)
(18,7,0)
(25,24,0)
(7,18,0)
(3,25,0)
(0,11,0)
(24,2,0)
(20,5,0)
(7,0,0)
(4,18,0)
(9,15,0)
(10,18,0)
(16,8,0)
(12,6,0)
(5,6,0)
(25,11,0)
(24,25,0)
(17,5,0)
(19,8,0)
(6,2,0)
(0,7,1)
(21,15,1)
(9,11,1)
(23,6,1)
(10,22,1)
(1,9,1)
(11,0,1)
(17,20,1)
(13,18,1)
(12,5,1)
(18,4,1)
(5,11,1)
(24,25,1)
(7,18,1)
(23,15,1)
(20,24,1)
(15,11,1)
(3,21,1)
(6,12,1)
(25,3,1)
(18,14,1)
(7,13,1)
(15,1,1)
(5,17,1)
(4,10,1)
(25,11,1)
(12,15,2)
(3,15,2)
(11,0,2)
(25,11,2)
(25,15,2)
(24,15,2)
(24,25,2)
(0,7,2)
(15,11,2)
(5,11,2)
(21,15,2)
(20,15,2)
(17,15,2)
(6,15,2)
(5,15,2)
(7,18,2)
(18,14,2)
-----------------------------------
(0,&box->data.cdef)
(1,ents)
(2,)
(3,ents)
(4,data)
(5,cdef->ents)
(6,cdef->ents = 0)
(7,box->data.cdef)
(8,)
(9,cdef)
(10,box)
(11,*cdef = &box->data.cdef)
(12,0)
(13,cdef)
(14,jp2_box_t *box)
(15,cdef->ents)
(16,if (cdef->ents)
(17,ents)
(18,box->data)
(19,cdef)
(20,cdef)
(21,cdef)
(22,cdef)
(23,RET)
(24,jas_free(cdef->ents)
(25,cdef->ents)
-----cfg-----
(7,14)
(11,22)
(11,25)
(12,15)
(14,12)
(15,11)
(17,25)
(18,17)
(19,18)
(20,23)
(22,20)
(23,19)
(25,27)
-----path-----
7,14,12,15,11,22,20,23,19,18,17,25,27
7,14,12,15,11,25,27
-----cfgNode-----
5,<global>
6,<empty>
7,void jp2_box_destroy (jp2_box_t *box)
8,jp2_box_t *box
9,<empty>
10,if (box->ops->destroy)
11,box->ops->destroy
12,box->ops
13,box
14,ops
15,destroy
16,<empty>
17,(*box->ops->destroy)(box)
18,*box->ops->destroy
19,box->ops->destroy
20,box->ops
21,box
22,ops
23,destroy
24,box
25,jas_free(box)
26,box
27,RET
28,jp2_box_t *box
29,RET
30,void jp2_box_destroy (jp2_box_t *box)
31,jp2_box_t *box
32,<empty>
33,if (box->ops->destroy)
34,box->ops->destroy
35,box->ops
36,box
37,ops
38,destroy
39,<empty>
40,(*box->ops->destroy)(box)
41,*box->ops->destroy
42,box->ops->destroy
43,box->ops
44,box
45,ops
46,destroy
47,box
48,jas_free(box)
49,box
50,RET
51,jp2_box_t *box
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
void jp2_box_destroy(jp2_box_t *box) {
jas_free(box);
=======================
