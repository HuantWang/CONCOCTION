-----label-----
0
-----code-----
static int jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,
  jas_iccuint32_t name, jas_iccattrval_t *val)
{
	int n;
	jas_iccattr_t *attr;
	jas_iccattrval_t *tmpattrval;
	tmpattrval = 0;
	if (i < 0) {
		i = attrtab->numattrs;
	}
	assert(i >= 0 && i <= attrtab->numattrs);
	if (attrtab->numattrs >= attrtab->maxattrs) {
		if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {
			goto error;
		}
	}
	if (!(tmpattrval = jas_iccattrval_clone(val)))
		goto error;
	n = attrtab->numattrs - i;
	if (n > 0)
		memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],
		  n * sizeof(jas_iccattr_t));
	attr = &attrtab->attrs[i];
	attr->name = name;
	attr->val = tmpattrval;
	++attrtab->numattrs;
	return 0;
error:
	if (tmpattrval)
		jas_iccattrval_destroy(tmpattrval);
	return -1;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
16,17
18,19
20,21
20,22
21,22
23,24
23,25
26,27
26,28
26,29
26,30
26,31
26,32
26,33
26,34
26,35
26,36
26,37
26,38
26,39
26,40
26,41
26,42
26,43
27,28
28,29
28,30
30,31
32,33
33,34
33,35
34,35
36,37
36,38
39,40
40,41
40,42
41,42
43,44
43,45
46,47
47,48
47,49
48,49
51,52
51,53
52,53
52,54
53,54
56,57
57,58
58,59
58,60
59,60
61,62
61,63
62,63
65,66
66,67
66,68
67,68
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
77,78
77,79
78,79
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
91,92
92,93
92,94
93,94
93,95
93,96
94,95
96,97
98,99
98,100
99,100
99,101
100,101
104,105
105,106
107,108
107,109
108,109
109,110
110,111
110,112
111,112
113,114
113,115
114,115
116,117
118,119
120,121
121,122
121,123
122,123
124,125
124,126
125,126
125,127
126,127
129,130
131,132
131,133
132,133
132,134
133,134
136,137
137,138
137,139
137,140
137,141
138,139
140,141
141,142
141,143
142,143
142,144
143,144
146,147
146,148
147,148
150,151
151,152
151,153
152,153
152,154
153,154
156,157
158,159
158,160
159,160
161,162
162,163
162,164
163,164
166,167
167,168
167,169
168,169
170,171
171,172
171,173
172,173
172,174
173,174
176,177
178,179
179,180
179,181
180,181
180,182
181,182
184,185
186,187
187,188
187,189
188,189
188,190
189,190
192,193
194,195
195,196
196,197
196,198
197,198
200,201
202,203
202,204
204,205
204,206
205,206
207,208
208,209
208,210
209,210
211,212
213,214
214,215
-----nextToken-----
2,4,7,9,10,12,14,17,19,22,24,25,29,31,35,37,38,42,44,45,49,50,54,55,60,63,64,68,72,73,76,79,80,85,86,89,90,95,97,101,102,103,106,112,115,117,119,123,127,128,130,134,135,139,144,145,148,149,154,155,157,160,164,165,169,174,175,177,182,183,185,190,191,193,198,199,201,203,206,210,212,215
-----computeFrom-----
47,48
47,49
52,53
52,54
58,59
58,60
69,70
69,71
70,71
70,72
74,75
74,76
82,83
82,84
98,99
98,100
110,111
110,112
121,122
121,123
124,125
124,126
132,133
132,134
146,147
146,148
158,159
158,160
167,168
167,169
179,180
179,181
187,188
187,189
-----guardedBy-----
54,60
89,101
86,102
134,160
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;GotoStatement;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;LiteralExpression;LabelStatement;Name;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;LiteralExpression;
-----ast_node-----
static int jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,  jas_iccuint32_t name, jas_iccattrval_t *val){	int n;	jas_iccattr_t *attr;	jas_iccattrval_t *tmpattrval;	tmpattrval = 0;	if (i < 0) {		i = attrtab->numattrs;	}	assert(i >= 0 && i <= attrtab->numattrs);	if (attrtab->numattrs >= attrtab->maxattrs) {		if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {			goto error;		}	}	if (!(tmpattrval = jas_iccattrval_clone(val)))		goto error;	n = attrtab->numattrs - i;	if (n > 0)		memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],		  n * sizeof(jas_iccattr_t));	attr = &attrtab->attrs[i];	attr->name = name;	attr->val = tmpattrval;	++attrtab->numattrs;	return 0;error:	if (tmpattrval)		jas_iccattrval_destroy(tmpattrval);	return -1;}
static int
jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,  jas_iccuint32_t name, jas_iccattrval_t *val)
jas_iccattrtab_add
jas_iccattrtab_t *attrtab
jas_iccattrtab_t
jas_iccattrtab_t
*attrtab
*
attrtab
int i
int
i
i
jas_iccuint32_t name
jas_iccuint32_t
jas_iccuint32_t
name
name
jas_iccattrval_t *val
jas_iccattrval_t
jas_iccattrval_t
*val
*
val
{	int n;	jas_iccattr_t *attr;	jas_iccattrval_t *tmpattrval;	tmpattrval = 0;	if (i < 0) {		i = attrtab->numattrs;	}	assert(i >= 0 && i <= attrtab->numattrs);	if (attrtab->numattrs >= attrtab->maxattrs) {		if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {			goto error;		}	}	if (!(tmpattrval = jas_iccattrval_clone(val)))		goto error;	n = attrtab->numattrs - i;	if (n > 0)		memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],		  n * sizeof(jas_iccattr_t));	attr = &attrtab->attrs[i];	attr->name = name;	attr->val = tmpattrval;	++attrtab->numattrs;	return 0;error:	if (tmpattrval)		jas_iccattrval_destroy(tmpattrval);	return -1;}
int n;
int n;
int
n
n
jas_iccattr_t *attr;
jas_iccattr_t *attr;
jas_iccattr_t
jas_iccattr_t
*attr
*
attr
jas_iccattrval_t *tmpattrval;
jas_iccattrval_t *tmpattrval;
jas_iccattrval_t
jas_iccattrval_t
*tmpattrval
*
tmpattrval
tmpattrval = 0;
tmpattrval = 0
tmpattrval
tmpattrval
0
if (i < 0) {		i = attrtab->numattrs;	}
i < 0
i
i
0
{		i = attrtab->numattrs;	}
i = attrtab->numattrs;
i = attrtab->numattrs
i
i
attrtab->numattrs
attrtab
attrtab
numattrs
assert(i >= 0 && i <= attrtab->numattrs);
assert(i >= 0 && i <= attrtab->numattrs)
assert
assert
i >= 0 && i <= attrtab->numattrs
i >= 0
i
i
0
i <= attrtab->numattrs
i
i
attrtab->numattrs
attrtab
attrtab
numattrs
if (attrtab->numattrs >= attrtab->maxattrs) {		if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {			goto error;		}	}
attrtab->numattrs >= attrtab->maxattrs
attrtab->numattrs
attrtab
attrtab
numattrs
attrtab->maxattrs
attrtab
attrtab
maxattrs
{		if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {			goto error;		}	}
if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {			goto error;		}
jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)
jas_iccattrtab_resize
jas_iccattrtab_resize
attrtab
attrtab
attrtab->numattrs + 32
attrtab->numattrs
attrtab
attrtab
numattrs
32
{			goto error;		}
goto error;
error
if (!(tmpattrval = jas_iccattrval_clone(val)))		goto error;
!(tmpattrval = jas_iccattrval_clone(val))
(tmpattrval = jas_iccattrval_clone(val))
tmpattrval = jas_iccattrval_clone(val)
tmpattrval
tmpattrval
jas_iccattrval_clone(val)
jas_iccattrval_clone
jas_iccattrval_clone
val
val
goto error;
error
n = attrtab->numattrs - i;
n = attrtab->numattrs - i
n
n
attrtab->numattrs - i
attrtab->numattrs
attrtab
attrtab
numattrs
i
i
if (n > 0)		memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],		  n * sizeof(jas_iccattr_t));
n > 0
n
n
0
memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],		  n * sizeof(jas_iccattr_t));
memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],		  n * sizeof(jas_iccattr_t))
memmove
memmove
&attrtab->attrs[i + 1]
attrtab->attrs[i + 1]
attrtab->attrs
attrtab
attrtab
attrs
i + 1
i
i
1
&attrtab->attrs[i]
attrtab->attrs[i]
attrtab->attrs
attrtab
attrtab
attrs
i
i
n * sizeof(jas_iccattr_t)
n
n
sizeof(jas_iccattr_t)
jas_iccattr_t
jas_iccattr_t
jas_iccattr_t

attr = &attrtab->attrs[i];
attr = &attrtab->attrs[i]
attr
attr
&attrtab->attrs[i]
attrtab->attrs[i]
attrtab->attrs
attrtab
attrtab
attrs
i
i
attr->name = name;
attr->name = name
attr->name
attr
attr
name
name
name
attr->val = tmpattrval;
attr->val = tmpattrval
attr->val
attr
attr
val
tmpattrval
tmpattrval
++attrtab->numattrs;
++attrtab->numattrs
attrtab->numattrs
attrtab
attrtab
numattrs
return 0;
0
error:	if (tmpattrval)		jas_iccattrval_destroy(tmpattrval);
error
if (tmpattrval)		jas_iccattrval_destroy(tmpattrval);
tmpattrval
tmpattrval
jas_iccattrval_destroy(tmpattrval);
jas_iccattrval_destroy(tmpattrval)
jas_iccattrval_destroy
jas_iccattrval_destroy
tmpattrval
tmpattrval
return -1;
-1
1
-----joern-----
(4,40,0)
(39,28,0)
(47,3,0)
(36,29,0)
(17,47,0)
(35,23,0)
(26,28,0)
(40,22,0)
(43,40,0)
(31,15,0)
(19,28,0)
(22,28,0)
(46,29,0)
(38,28,0)
(33,21,0)
(1,39,0)
(23,38,0)
(45,47,0)
(42,47,0)
(24,12,0)
(1,17,0)
(21,33,0)
(47,45,0)
(25,12,0)
(9,42,0)
(11,28,0)
(16,23,0)
(41,12,0)
(42,31,0)
(39,1,0)
(14,39,0)
(12,47,0)
(10,19,0)
(13,28,0)
(6,19,0)
(27,7,0)
(36,38,0)
(2,48,0)
(29,21,0)
(48,21,0)
(17,1,0)
(49,42,0)
(5,28,0)
(21,48,0)
(22,40,0)
(29,36,0)
(40,47,0)
(31,28,0)
(20,21,0)
(23,47,0)
(12,25,0)
(19,47,0)
(37,17,0)
(0,17,0)
(8,28,0)
(32,29,0)
(38,36,0)
(39,25,0)
(18,31,0)
(7,28,0)
(48,15,0)
(25,39,0)
(30,47,0)
(3,47,0)
(6,7,0)
(27,44,1)
(47,45,1)
(25,12,1)
(16,35,1)
(22,40,1)
(33,21,1)
(19,10,1)
(6,7,1)
(38,36,1)
(6,19,1)
(32,46,1)
(12,47,1)
(48,2,1)
(7,27,1)
(39,25,1)
(14,1,1)
(21,48,1)
(31,15,1)
(3,47,1)
(23,16,1)
(45,30,1)
(40,47,1)
(17,47,1)
(35,3,1)
(17,0,1)
(18,42,1)
(2,20,1)
(40,43,1)
(44,33,1)
(23,47,1)
(48,15,1)
(42,9,1)
(29,32,1)
(37,22,1)
(34,3,1)
(24,41,1)
(0,37,1)
(1,17,1)
(12,24,1)
(4,31,1)
(49,38,1)
(9,49,1)
(27,34,1)
(30,33,1)
(29,21,1)
(39,1,1)
(41,14,1)
(43,4,1)
(31,18,1)
(36,29,1)
(42,47,1)
(46,23,1)
(10,39,1)
(19,47,1)
(6,19,2)
(41,3,2)
(36,29,2)
(18,3,2)
(1,17,2)
(27,3,2)
(39,1,2)
(31,15,2)
(22,3,2)
(47,33,2)
(45,33,2)
(3,47,2)
(4,3,2)
(22,40,2)
(32,3,2)
(25,12,2)
(17,47,2)
(47,45,2)
(42,47,2)
(23,3,2)
(38,36,2)
(27,33,2)
(29,3,2)
(40,47,2)
(36,3,2)
(23,47,2)
(9,3,2)
(39,25,2)
(7,33,2)
(21,48,2)
(12,47,2)
(38,3,2)
(31,3,2)
(48,15,2)
(3,33,2)
(30,33,2)
(40,3,2)
(37,3,2)
(10,3,2)
(24,3,2)
(19,3,2)
(0,3,2)
(1,3,2)
(33,21,2)
(44,33,2)
(49,3,2)
(43,3,2)
(35,3,2)
(14,3,2)
(42,3,2)
(46,3,2)
(12,3,2)
(39,3,2)
(6,7,2)
(17,3,2)
(34,3,2)
(7,3,2)
(29,21,2)
(16,3,2)
(25,3,2)
(19,47,2)
-----------------------------------
(0,data)
(1,&attrval->data)
(2,type)
(3,!(attrval = jas_iccattrval_create0()
(4,attrval)
(5,error:)
(6,RET)
(7,return 0;)
(8,attrval)
(9,type)
(10,attrval)
(11,if (!(attrval = jas_iccattrval_create0()
(12,attrval->data)
(13,info)
(14,0)
(15,jas_iccuint32_t type)
(16,ops)
(17,attrval->data)
(18,type)
(19,return attrval;)
(20,info)
(21,info = jas_iccattrvalinfo_lookup(type)
(22,++attrval->refcnt)
(23,attrval->ops)
(24,data)
(25,sizeof(attrval->data)
(26,if (!(info = jas_iccattrvalinfo_lookup(type)
(27,0)
(28,)
(29,info->ops)
(30,attrval)
(31,attrval->type = type)
(32,ops)
(33,!(info = jas_iccattrvalinfo_lookup(type)
(34,goto error;)
(35,attrval)
(36,&info->ops)
(37,attrval)
(38,attrval->ops = &info->ops)
(39,memset(&attrval->data, 0, sizeof(attrval->data)
(40,attrval->refcnt)
(41,attrval)
(42,attrval->type)
(43,refcnt)
(44,goto error;)
(45,jas_iccattrval_create0()
(46,info)
(47,attrval = jas_iccattrval_create0()
(48,jas_iccattrvalinfo_lookup(type)
(49,attrval)
-----cfg-----
(128,127)
(7,16)
(16,20)
(20,28)
(20,31)
(24,31)
(26,24)
(28,26)
(29,43)
(30,29)
(31,30)
(31,38)
(34,30)
(36,34)
(38,36)
(40,54)
(40,62)
(41,46)
(43,41)
(44,40)
(46,44)
(49,125)
(49,128)
(49,62)
(51,49)
(52,51)
(54,52)
(59,125)
(59,128)
(59,71)
(60,59)
(62,60)
(66,74)
(68,66)
(69,68)
(71,69)
(74,83)
(74,103)
(78,103)
(79,91)
(80,79)
(81,84)
(83,81)
(84,80)
(87,95)
(88,87)
(89,88)
(91,89)
(93,78)
(95,93)
(97,108)
(99,97)
(100,99)
(101,100)
(103,101)
(105,113)
(106,105)
(108,106)
(110,118)
(111,110)
(113,111)
(115,119)
(116,115)
(118,116)
(119,130)
(125,128)
(127,130)
-----path-----
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,125,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,125,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116
7,16,20,28,26,24,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,62,60,59,125,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,62,60,59,128,127,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,28,26,24,31,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,125,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,125,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,62,60,59,125,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,62,60,59,128,127,130
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116,115
7,16,20,28,26,24,31,38,36,34,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,125,128,127,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,128,127,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,125,128,127,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,128,127,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,30,29,43,41,46,44,40,62,60,59,125,128,127,130
7,16,20,31,30,29,43,41,46,44,40,62,60,59,128,127,130
7,16,20,31,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,125,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,125,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116
7,16,20,31,38,36,34,30,29,43,41,46,44,40,54,52,51,49,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,62,60,59,125,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,62,60,59,128,127,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,83,81,84,80,79,91,89,88,87,95,93,78,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
7,16,20,31,38,36,34,30,29,43,41,46,44,40,62,60,59,71,69,68,66,74,103,101,100,99,97,108,106,105,113,111,110,118,116,115,119,130
-----cfgNode-----
5,<global>
6,<empty>
7,int jas_iccattrtab_add (jas_iccattrtab_t *attrtab,int i,jas_iccuint32_t name,jas_iccattrval_t *val)
8,jas_iccattrtab_t *attrtab
9,int i
10,jas_iccuint32_t name
11,jas_iccattrval_t *val
12,<empty>
13,int n
14,jas_iccattr_t* attr
15,jas_iccattrval_t* tmpattrval
16,tmpattrval = 0
17,tmpattrval
18,0
19,if (i < 0)
20,i < 0
21,i
22,0
23,<empty>
24,i = attrtab->numattrs
25,i
26,attrtab->numattrs
27,attrtab
28,numattrs
29,assert(i >= 0 && i <= attrtab->numattrs)
30,i >= 0 && i <= attrtab->numattrs
31,i >= 0
32,i
33,0
34,i <= attrtab->numattrs
35,i
36,attrtab->numattrs
37,attrtab
38,numattrs
39,if (attrtab->numattrs >= attrtab->maxattrs)
40,attrtab->numattrs >= attrtab->maxattrs
41,attrtab->numattrs
42,attrtab
43,numattrs
44,attrtab->maxattrs
45,attrtab
46,maxattrs
47,<empty>
48,if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32))
49,jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)
50,attrtab
51,attrtab->numattrs + 32
52,attrtab->numattrs
53,attrtab
54,numattrs
55,32
56,<empty>
57,goto error;
58,if (!(tmpattrval = jas_iccattrval_clone(val)))
59,!(tmpattrval = jas_iccattrval_clone(val))
60,tmpattrval = jas_iccattrval_clone(val)
61,tmpattrval
62,jas_iccattrval_clone(val)
63,val
64,<empty>
65,goto error;
66,n = attrtab->numattrs - i
67,n
68,attrtab->numattrs - i
69,attrtab->numattrs
70,attrtab
71,numattrs
72,i
73,if (n > 0)
74,n > 0
75,n
76,0
77,<empty>
78,memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],
79,		  n * sizeof(jas_iccattr_t))
80,&attrtab->attrs[i + 1]
81,attrtab->attrs[i + 1]
82,attrtab->attrs
83,attrtab
84,attrs
85,i + 1
86,i
87,1
88,&attrtab->attrs[i]
89,attrtab->attrs[i]
90,attrtab->attrs
91,attrtab
92,attrs
93,i
94,n * sizeof(jas_iccattr_t)
95,n
96,sizeof(jas_iccattr_t)
97,jas_iccattr_t
98,attr = &attrtab->attrs[i]
99,attr
100,&attrtab->attrs[i]
101,attrtab->attrs[i]
102,attrtab->attrs
103,attrtab
104,attrs
105,i
106,attr->name = name
107,attr->name
108,attr
109,name
110,name
111,attr->val = tmpattrval
112,attr->val
113,attr
114,val
115,tmpattrval
116,++attrtab->numattrs
117,attrtab->numattrs
118,attrtab
119,numattrs
120,return 0;
121,0
122,error:
123,	if (tmpattrval)
124,		jas_iccattrval_destroy(tmpattrval);
125,if (tmpattrval)
126,tmpattrval
127,<empty>
128,jas_iccattrval_destroy(tmpattrval)
129,tmpattrval
130,return -1;
131,-1
132,1
133,RET
134,jas_iccattrtab_t *attrtab
135,int i
136,jas_iccuint32_t name
137,jas_iccattrval_t *val
138,RET
139,int jas_iccattrtab_add (jas_iccattrtab_t *attrtab,int i,jas_iccuint32_t name,jas_iccattrval_t *val)
140,jas_iccattrtab_t *attrtab
141,int i
142,jas_iccuint32_t name
143,jas_iccattrval_t *val
144,<empty>
145,int n
146,jas_iccattr_t* attr
147,jas_iccattrval_t* tmpattrval
148,tmpattrval = 0
149,tmpattrval
150,0
151,if (i < 0)
152,i < 0
153,i
154,0
155,<empty>
156,i = attrtab->numattrs
157,i
158,attrtab->numattrs
159,attrtab
160,numattrs
161,assert(i >= 0 && i <= attrtab->numattrs)
162,i >= 0 && i <= attrtab->numattrs
163,i >= 0
164,i
165,0
166,i <= attrtab->numattrs
167,i
168,attrtab->numattrs
169,attrtab
170,numattrs
171,if (attrtab->numattrs >= attrtab->maxattrs)
172,attrtab->numattrs >= attrtab->maxattrs
173,attrtab->numattrs
174,attrtab
175,numattrs
176,attrtab->maxattrs
177,attrtab
178,maxattrs
179,<empty>
180,if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32))
181,jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)
182,attrtab
183,attrtab->numattrs + 32
184,attrtab->numattrs
185,attrtab
186,numattrs
187,32
188,<empty>
189,goto error;
190,if (!(tmpattrval = jas_iccattrval_clone(val)))
191,!(tmpattrval = jas_iccattrval_clone(val))
192,tmpattrval = jas_iccattrval_clone(val)
193,tmpattrval
194,jas_iccattrval_clone(val)
195,val
196,<empty>
197,goto error;
198,n = attrtab->numattrs - i
199,n
200,attrtab->numattrs - i
201,attrtab->numattrs
202,attrtab
203,numattrs
204,i
205,if (n > 0)
206,n > 0
207,n
208,0
209,<empty>
210,memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],
211,		  n * sizeof(jas_iccattr_t))
212,&attrtab->attrs[i + 1]
213,attrtab->attrs[i + 1]
214,attrtab->attrs
215,attrtab
216,attrs
217,i + 1
218,i
219,1
220,&attrtab->attrs[i]
221,attrtab->attrs[i]
222,attrtab->attrs
223,attrtab
224,attrs
225,i
226,n * sizeof(jas_iccattr_t)
227,n
228,sizeof(jas_iccattr_t)
229,jas_iccattr_t
230,attr = &attrtab->attrs[i]
231,attr
232,&attrtab->attrs[i]
233,attrtab->attrs[i]
234,attrtab->attrs
235,attrtab
236,attrs
237,i
238,attr->name = name
239,attr->name
240,attr
241,name
242,name
243,attr->val = tmpattrval
244,attr->val
245,attr
246,val
247,tmpattrval
248,++attrtab->numattrs
249,attrtab->numattrs
250,attrtab
251,numattrs
252,return 0;
253,0
254,error:
255,	if (tmpattrval)
256,		jas_iccattrval_destroy(tmpattrval);
257,if (tmpattrval)
258,tmpattrval
259,<empty>
260,jas_iccattrval_destroy(tmpattrval)
261,tmpattrval
262,return -1;
263,-1
264,1
265,RET
266,jas_iccattrtab_t *attrtab
267,int i
268,jas_iccuint32_t name
269,jas_iccattrval_t *val
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
static int jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,   jas_iccuint32_t name, jas_iccattrval_t *val) {
int n;
jas_iccattr_t *attr;
jas_iccattrval_t *tmpattrval;
tmpattrval = 0;
assert(i >= 0 && i <= attrtab->numattrs);
n = attrtab->numattrs - i;
attr = &attrtab->attrs[i];
attr->name = name;
attr->val = tmpattrval;
++attrtab->numattrs;
return 0;
=======================
