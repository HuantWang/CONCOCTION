-----label-----
0
-----code-----
jas_image_t *pnm_decode(jas_stream_t *in, char *opts)
{
	pnm_hdr_t hdr;
	jas_image_t *image;
	jas_image_cmptparm_t cmptparms[3];
	jas_image_cmptparm_t *cmptparm;
	int i;

	if (opts) {
		jas_eprintf("warning: ignoring options\n");
	}

	/* Read the file header. */
	if (pnm_gethdr(in, &hdr)) {
		return 0;
	}

	/* Create an image of the correct size. */
	for (i = 0, cmptparm = cmptparms; i < hdr.numcmpts; ++i, ++cmptparm) {
		cmptparm->tlx = 0;
		cmptparm->tly = 0;
		cmptparm->hstep = 1;
		cmptparm->vstep = 1;
		cmptparm->width = hdr.width;
		cmptparm->height = hdr.height;
		cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);
		cmptparm->sgnd = hdr.sgnd;
	}
	if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))) {
		return 0;
	}

	if (hdr.numcmpts == 3) {
		jas_image_setclrspc(image, JAS_CLRSPC_SRGB);
		jas_image_setcmpttype(image, 0,
		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));
		jas_image_setcmpttype(image, 1,
		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));
		jas_image_setcmpttype(image, 2,
		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));
	} else {
		jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);
		jas_image_setcmpttype(image, 0,
		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));
	}

	/* Read image data from stream into image. */
	if (pnm_getdata(in, &hdr, image)) {
		jas_image_destroy(image);
		return 0;
	}

	return image;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
7,8
7,9
8,9
10,11
10,12
13,14
13,15
15,16
15,17
18,19
18,20
18,21
18,22
18,23
18,24
18,25
18,26
18,27
18,28
18,29
18,30
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
33,34
33,35
34,35
36,37
36,38
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
48,49
48,50
50,51
52,53
52,54
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
62,65
63,64
65,66
67,68
68,69
70,71
71,72
73,74
73,75
73,76
73,77
74,75
75,76
75,77
76,77
76,78
77,78
80,81
80,82
81,82
83,84
85,86
85,87
86,87
88,89
88,90
89,90
92,93
92,94
93,94
94,95
96,97
97,98
99,100
99,101
99,102
99,103
99,104
99,105
99,106
99,107
100,101
101,102
101,103
102,103
102,104
103,104
107,108
108,109
108,110
109,110
109,111
110,111
114,115
115,116
115,117
116,117
116,118
117,118
121,122
122,123
122,124
123,124
123,125
124,125
128,129
129,130
129,131
130,131
130,132
131,132
134,135
134,136
135,136
138,139
139,140
139,141
140,141
140,142
141,142
144,145
144,146
145,146
148,149
149,150
149,151
150,151
150,152
151,152
154,155
154,156
155,156
157,158
157,159
158,159
161,162
162,163
162,164
163,164
163,165
164,165
167,168
167,169
168,169
171,172
171,173
172,173
173,174
174,175
174,176
175,176
177,178
177,179
177,180
177,181
178,179
180,181
180,182
181,182
184,185
186,187
188,189
189,190
191,192
191,193
191,194
192,193
192,194
193,194
193,195
194,195
198,199
198,200
198,201
198,202
199,200
200,201
200,202
200,203
201,202
203,204
205,206
207,208
208,209
208,210
208,211
208,212
209,210
211,212
214,215
214,216
215,216
217,218
219,220
220,221
220,222
220,223
220,224
221,222
223,224
226,227
226,228
227,228
229,230
231,232
232,233
232,234
232,235
232,236
233,234
235,236
238,239
238,240
239,240
241,242
243,244
243,245
244,245
245,246
245,247
245,248
246,247
248,249
250,251
252,253
253,254
253,255
253,256
253,257
254,255
256,257
259,260
259,261
260,261
262,263
264,265
264,266
265,266
265,267
265,268
265,269
266,267
268,269
270,271
271,272
273,274
275,276
275,277
276,277
277,278
277,279
278,279
280,281
282,283
284,285
285,286
-----nextToken-----
3,5,6,9,11,12,14,16,17,22,24,28,30,31,35,37,39,43,45,46,49,51,54,59,60,64,66,69,72,78,79,82,84,87,90,91,95,98,104,105,106,111,112,113,118,119,120,125,126,127,132,133,136,137,142,143,146,147,152,153,156,159,160,165,166,169,170,176,179,182,183,185,187,190,195,196,197,202,204,206,210,212,213,216,218,222,224,225,228,230,234,236,237,240,242,247,249,251,255,257,258,261,263,267,269,272,274,279,281,283,286
-----computeFrom-----
76,77
76,78
80,81
80,82
85,86
85,87
101,102
101,103
108,109
108,110
115,116
115,117
122,123
122,124
129,130
129,131
139,140
139,141
149,150
149,151
162,163
162,164
174,175
174,176
192,193
192,194
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ReturnStatement;LiteralExpression;ForStatement;ExpressionStatement;ExpressionList;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionList;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
jas_image_t *pnm_decode(jas_stream_t *in, char *opts){	pnm_hdr_t hdr;	jas_image_t *image;	jas_image_cmptparm_t cmptparms[3];	jas_image_cmptparm_t *cmptparm;	int i;	if (opts) {		jas_eprintf("warning: ignoring options\n");	}	/* Read the file header. */	if (pnm_gethdr(in, &hdr)) {		return 0;	}	/* Create an image of the correct size. */	for (i = 0, cmptparm = cmptparms; i < hdr.numcmpts; ++i, ++cmptparm) {		cmptparm->tlx = 0;		cmptparm->tly = 0;		cmptparm->hstep = 1;		cmptparm->vstep = 1;		cmptparm->width = hdr.width;		cmptparm->height = hdr.height;		cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);		cmptparm->sgnd = hdr.sgnd;	}	if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))) {		return 0;	}	if (hdr.numcmpts == 3) {		jas_image_setclrspc(image, JAS_CLRSPC_SRGB);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));		jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));		jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));	} else {		jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));	}	/* Read image data from stream into image. */	if (pnm_getdata(in, &hdr, image)) {		jas_image_destroy(image);		return 0;	}	return image;}
jas_image_t
jas_image_t
*pnm_decode(jas_stream_t *in, char *opts)
*
pnm_decode
jas_stream_t *in
jas_stream_t
jas_stream_t
*in
*
in
char *opts
char
*opts
*
opts
{	pnm_hdr_t hdr;	jas_image_t *image;	jas_image_cmptparm_t cmptparms[3];	jas_image_cmptparm_t *cmptparm;	int i;	if (opts) {		jas_eprintf("warning: ignoring options\n");	}	/* Read the file header. */	if (pnm_gethdr(in, &hdr)) {		return 0;	}	/* Create an image of the correct size. */	for (i = 0, cmptparm = cmptparms; i < hdr.numcmpts; ++i, ++cmptparm) {		cmptparm->tlx = 0;		cmptparm->tly = 0;		cmptparm->hstep = 1;		cmptparm->vstep = 1;		cmptparm->width = hdr.width;		cmptparm->height = hdr.height;		cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);		cmptparm->sgnd = hdr.sgnd;	}	if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))) {		return 0;	}	if (hdr.numcmpts == 3) {		jas_image_setclrspc(image, JAS_CLRSPC_SRGB);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));		jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));		jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));	} else {		jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));	}	/* Read image data from stream into image. */	if (pnm_getdata(in, &hdr, image)) {		jas_image_destroy(image);		return 0;	}	return image;}
pnm_hdr_t hdr;
pnm_hdr_t hdr;
pnm_hdr_t
pnm_hdr_t
hdr
hdr
jas_image_t *image;
jas_image_t *image;
jas_image_t
jas_image_t
*image
*
image
jas_image_cmptparm_t cmptparms[3];
jas_image_cmptparm_t cmptparms[3];
jas_image_cmptparm_t
jas_image_cmptparm_t
cmptparms[3]
cmptparms
[3]
3
jas_image_cmptparm_t *cmptparm;
jas_image_cmptparm_t *cmptparm;
jas_image_cmptparm_t
jas_image_cmptparm_t
*cmptparm
*
cmptparm
int i;
int i;
int
i
i
if (opts) {		jas_eprintf("warning: ignoring options\n");	}
opts
opts
{		jas_eprintf("warning: ignoring options\n");	}
jas_eprintf("warning: ignoring options\n");
jas_eprintf("warning: ignoring options\n")
jas_eprintf
jas_eprintf
"warning: ignoring options\n"
if (pnm_gethdr(in, &hdr)) {		return 0;	}
pnm_gethdr(in, &hdr)
pnm_gethdr
pnm_gethdr
in
in
&hdr
hdr
hdr
{		return 0;	}
return 0;
0
for (i = 0, cmptparm = cmptparms; i < hdr.numcmpts; ++i, ++cmptparm) {		cmptparm->tlx = 0;		cmptparm->tly = 0;		cmptparm->hstep = 1;		cmptparm->vstep = 1;		cmptparm->width = hdr.width;		cmptparm->height = hdr.height;		cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);		cmptparm->sgnd = hdr.sgnd;	}
i = 0, cmptparm = cmptparms;
i = 0, cmptparm = cmptparms
i = 0
i
i
0
cmptparm = cmptparms
cmptparm
cmptparm
cmptparms
cmptparms
i < hdr.numcmpts
i
i
hdr.numcmpts
hdr
hdr
numcmpts
++i, ++cmptparm
++i
i
i
++cmptparm
cmptparm
cmptparm
{		cmptparm->tlx = 0;		cmptparm->tly = 0;		cmptparm->hstep = 1;		cmptparm->vstep = 1;		cmptparm->width = hdr.width;		cmptparm->height = hdr.height;		cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);		cmptparm->sgnd = hdr.sgnd;	}
cmptparm->tlx = 0;
cmptparm->tlx = 0
cmptparm->tlx
cmptparm
cmptparm
tlx
0
cmptparm->tly = 0;
cmptparm->tly = 0
cmptparm->tly
cmptparm
cmptparm
tly
0
cmptparm->hstep = 1;
cmptparm->hstep = 1
cmptparm->hstep
cmptparm
cmptparm
hstep
1
cmptparm->vstep = 1;
cmptparm->vstep = 1
cmptparm->vstep
cmptparm
cmptparm
vstep
1
cmptparm->width = hdr.width;
cmptparm->width = hdr.width
cmptparm->width
cmptparm
cmptparm
width
hdr.width
hdr
hdr
width
cmptparm->height = hdr.height;
cmptparm->height = hdr.height
cmptparm->height
cmptparm
cmptparm
height
hdr.height
hdr
hdr
height
cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);
cmptparm->prec = pnm_maxvaltodepth(hdr.maxval)
cmptparm->prec
cmptparm
cmptparm
prec
pnm_maxvaltodepth(hdr.maxval)
pnm_maxvaltodepth
pnm_maxvaltodepth
hdr.maxval
hdr
hdr
maxval
cmptparm->sgnd = hdr.sgnd;
cmptparm->sgnd = hdr.sgnd
cmptparm->sgnd
cmptparm
cmptparm
sgnd
hdr.sgnd
hdr
hdr
sgnd
if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))) {		return 0;	}
!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))
(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))
image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
image
image
jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
jas_image_create
jas_image_create
hdr.numcmpts
hdr
hdr
numcmpts
cmptparms
cmptparms
JAS_CLRSPC_UNKNOWN
JAS_CLRSPC_UNKNOWN
{		return 0;	}
return 0;
0
if (hdr.numcmpts == 3) {		jas_image_setclrspc(image, JAS_CLRSPC_SRGB);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));		jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));		jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));	} else {		jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));	}
hdr.numcmpts == 3
hdr.numcmpts
hdr
hdr
numcmpts
3
{		jas_image_setclrspc(image, JAS_CLRSPC_SRGB);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));		jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));		jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));	}
jas_image_setclrspc(image, JAS_CLRSPC_SRGB);
jas_image_setclrspc(image, JAS_CLRSPC_SRGB)
jas_image_setclrspc
jas_image_setclrspc
image
image
JAS_CLRSPC_SRGB
JAS_CLRSPC_SRGB
jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));
jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R))
jas_image_setcmpttype
jas_image_setcmpttype
image
image
0
JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R)
JAS_IMAGE_CT_COLOR
JAS_IMAGE_CT_COLOR
JAS_CLRSPC_CHANIND_RGB_R
JAS_CLRSPC_CHANIND_RGB_R
jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));
jas_image_setcmpttype(image, 1,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G))
jas_image_setcmpttype
jas_image_setcmpttype
image
image
1
JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G)
JAS_IMAGE_CT_COLOR
JAS_IMAGE_CT_COLOR
JAS_CLRSPC_CHANIND_RGB_G
JAS_CLRSPC_CHANIND_RGB_G
jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));
jas_image_setcmpttype(image, 2,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B))
jas_image_setcmpttype
jas_image_setcmpttype
image
image
2
JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B)
JAS_IMAGE_CT_COLOR
JAS_IMAGE_CT_COLOR
JAS_CLRSPC_CHANIND_RGB_B
JAS_CLRSPC_CHANIND_RGB_B
{		jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);		jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));	}
jas_image_setclrspc(image, JAS_CLRSPC_SGRAY);
jas_image_setclrspc(image, JAS_CLRSPC_SGRAY)
jas_image_setclrspc
jas_image_setclrspc
image
image
JAS_CLRSPC_SGRAY
JAS_CLRSPC_SGRAY
jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y));
jas_image_setcmpttype(image, 0,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y))
jas_image_setcmpttype
jas_image_setcmpttype
image
image
0
JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y)
JAS_IMAGE_CT_COLOR
JAS_IMAGE_CT_COLOR
JAS_CLRSPC_CHANIND_GRAY_Y
JAS_CLRSPC_CHANIND_GRAY_Y
if (pnm_getdata(in, &hdr, image)) {		jas_image_destroy(image);		return 0;	}
pnm_getdata(in, &hdr, image)
pnm_getdata
pnm_getdata
in
in
&hdr
hdr
hdr
image
image
{		jas_image_destroy(image);		return 0;	}
jas_image_destroy(image);
jas_image_destroy(image)
jas_image_destroy
jas_image_destroy
image
image
return 0;
0
return image;
image
image
-----joern-----
(76,81,0)
(20,10,0)
(74,111,0)
(12,77,0)
(7,84,0)
(106,45,0)
(34,36,0)
(50,20,0)
(40,60,0)
(80,28,0)
(23,27,0)
(66,105,0)
(27,60,0)
(13,69,0)
(71,105,0)
(45,5,0)
(19,84,0)
(12,107,0)
(5,68,0)
(53,80,0)
(12,41,0)
(7,35,0)
(11,40,0)
(51,2,0)
(68,62,0)
(102,105,0)
(85,15,0)
(52,45,0)
(96,105,0)
(1,28,0)
(43,10,0)
(37,15,0)
(111,74,0)
(41,24,0)
(63,103,0)
(36,61,0)
(31,60,0)
(32,72,0)
(100,34,0)
(6,105,0)
(103,60,0)
(111,62,0)
(38,60,0)
(44,77,0)
(48,28,0)
(9,36,0)
(73,103,0)
(75,41,0)
(31,94,0)
(108,102,0)
(54,101,0)
(94,95,0)
(45,62,0)
(2,35,0)
(22,107,0)
(35,20,0)
(95,49,0)
(94,31,0)
(56,81,0)
(21,38,0)
(57,64,0)
(90,15,0)
(17,105,0)
(26,52,0)
(4,17,0)
(46,19,0)
(27,32,0)
(42,20,0)
(0,105,0)
(77,17,0)
(69,76,0)
(3,68,0)
(39,95,0)
(12,103,0)
(49,5,0)
(8,77,0)
(25,31,0)
(68,5,0)
(32,64,0)
(45,52,0)
(5,45,0)
(33,80,0)
(77,60,0)
(104,88,0)
(35,14,0)
(35,103,0)
(69,60,0)
(7,12,0)
(109,69,0)
(41,60,0)
(12,20,0)
(5,49,0)
(101,15,0)
(20,60,0)
(86,107,0)
(78,15,0)
(40,55,0)
(91,74,0)
(84,18,0)
(49,95,0)
(107,60,0)
(110,38,0)
(12,27,0)
(24,61,0)
(65,105,0)
(107,102,0)
(59,12,0)
(12,34,0)
(103,101,0)
(88,68,0)
(55,40,0)
(72,28,0)
(81,76,0)
(89,15,0)
(83,72,0)
(99,31,0)
(10,15,0)
(87,105,0)
(97,57,0)
(95,94,0)
(93,41,0)
(92,24,0)
(72,32,0)
(30,105,0)
(29,111,0)
(16,27,0)
(12,15,0)
(79,15,0)
(76,69,0)
(67,40,0)
(70,34,0)
(12,38,0)
(95,62,0)
(24,28,0)
(28,82,0)
(47,15,0)
(68,88,0)
(98,58,0)
(34,60,0)
(38,57,0)
(52,26,1)
(77,44,1)
(10,43,1)
(86,55,1)
(91,29,1)
(38,21,1)
(24,92,1)
(7,84,1)
(92,41,1)
(45,62,1)
(57,97,1)
(94,31,1)
(104,3,1)
(95,94,1)
(22,86,1)
(83,27,1)
(73,49,1)
(75,80,1)
(28,48,1)
(27,16,1)
(50,42,1)
(56,76,1)
(46,49,1)
(12,41,1)
(72,28,1)
(35,2,1)
(76,69,1)
(40,11,1)
(44,8,1)
(31,60,1)
(72,83,1)
(20,50,1)
(59,30,1)
(35,20,1)
(68,88,1)
(4,77,1)
(70,100,1)
(102,108,1)
(24,28,1)
(107,60,1)
(12,59,1)
(100,24,1)
(74,91,1)
(1,81,1)
(34,70,1)
(9,34,1)
(40,60,1)
(12,20,1)
(12,38,1)
(80,53,1)
(80,28,1)
(59,87,1)
(12,103,1)
(49,95,1)
(21,110,1)
(69,60,1)
(13,109,1)
(32,72,1)
(49,5,1)
(12,34,1)
(29,81,1)
(7,12,1)
(84,19,1)
(67,36,1)
(43,20,1)
(11,67,1)
(5,45,1)
(93,75,1)
(54,103,1)
(99,39,1)
(27,60,1)
(103,60,1)
(12,27,1)
(97,38,1)
(108,107,1)
(81,76,1)
(12,107,1)
(103,63,1)
(110,32,1)
(5,68,1)
(63,73,1)
(111,62,1)
(41,60,1)
(59,71,1)
(12,77,1)
(48,1,1)
(38,60,1)
(45,52,1)
(33,28,1)
(34,60,1)
(109,10,1)
(36,9,1)
(7,35,1)
(17,4,1)
(25,99,1)
(30,102,1)
(16,23,1)
(42,101,1)
(87,17,1)
(51,111,1)
(20,60,1)
(107,22,1)
(55,40,1)
(8,55,1)
(88,104,1)
(19,46,1)
(95,62,1)
(101,54,1)
(31,25,1)
(69,13,1)
(106,68,1)
(35,103,1)
(53,33,1)
(68,62,1)
(23,80,1)
(26,106,1)
(71,0,1)
(41,93,1)
(111,74,1)
(81,56,1)
(3,95,1)
(77,60,1)
(67,57,1)
(0,55,1)
(2,51,1)
(33,111,1)
(9,80,2)
(67,81,2)
(100,80,2)
(7,35,2)
(32,72,2)
(68,95,2)
(59,81,2)
(20,49,2)
(93,80,2)
(36,80,2)
(104,95,2)
(53,111,2)
(41,60,2)
(44,55,2)
(111,74,2)
(17,55,2)
(84,49,2)
(68,62,2)
(11,81,2)
(95,62,2)
(40,81,2)
(106,68,2)
(45,62,2)
(12,107,2)
(12,27,2)
(1,81,2)
(55,111,2)
(75,80,2)
(54,49,2)
(35,111,2)
(2,111,2)
(88,95,2)
(92,80,2)
(12,81,2)
(12,20,2)
(5,95,2)
(20,60,2)
(50,49,2)
(87,55,2)
(38,60,2)
(77,55,2)
(72,28,2)
(80,81,2)
(41,80,2)
(63,49,2)
(22,55,2)
(32,80,2)
(4,55,2)
(3,95,2)
(48,81,2)
(102,55,2)
(12,34,2)
(111,62,2)
(110,80,2)
(40,60,2)
(33,111,2)
(30,55,2)
(28,81,2)
(72,80,2)
(81,76,2)
(29,81,2)
(107,55,2)
(80,28,2)
(11,111,2)
(51,111,2)
(71,55,2)
(5,68,2)
(12,38,2)
(94,31,2)
(91,81,2)
(52,68,2)
(26,68,2)
(35,103,2)
(49,5,2)
(77,60,2)
(19,49,2)
(7,12,2)
(35,20,2)
(23,80,2)
(103,49,2)
(56,49,2)
(69,49,2)
(95,94,2)
(69,60,2)
(12,111,2)
(21,80,2)
(53,81,2)
(55,81,2)
(59,111,2)
(86,55,2)
(76,69,2)
(83,80,2)
(57,80,2)
(8,55,2)
(34,60,2)
(27,80,2)
(34,80,2)
(13,49,2)
(49,95,2)
(24,28,2)
(67,111,2)
(73,49,2)
(40,111,2)
(0,55,2)
(38,80,2)
(43,49,2)
(12,103,2)
(101,49,2)
(46,49,2)
(74,81,2)
(107,60,2)
(111,81,2)
(109,49,2)
(42,49,2)
(108,55,2)
(33,81,2)
(27,60,2)
(68,88,2)
(76,49,2)
(16,80,2)
(81,49,2)
(55,40,2)
(45,52,2)
(70,80,2)
(24,80,2)
(12,41,2)
(7,84,2)
(31,60,2)
(103,60,2)
(97,80,2)
(45,68,2)
(10,49,2)
(80,111,2)
(5,45,2)
(12,77,2)
-----------------------------------
(0,abort()
(1,maxval)
(2,-1)
(3,in)
(4,3)
(5,pnm_getsintstr(in, &width)
(6,case PNM_TYPE_PBM:)
(7,RET)
(8,hdr)
(9,false)
(10,hdr->height = height)
(11,magic)
(12,return 0;)
(13,magic)
(14,)
(15,)
(16,maxval)
(17,hdr->numcmpts = 3)
(18,)
(19,-1)
(20,hdr->height)
(21,sgnd)
(22,numcmpts)
(23,hdr)
(24,hdr->maxval = maxval)
(25,magic)
(26,height)
(27,hdr->maxval)
(28,maxval = 1)
(29,in)
(30,break;)
(31,hdr->magic)
(32,hdr->maxval = -maxval)
(33,maxval)
(34,hdr->sgnd)
(35,return -1;)
(36,hdr->sgnd = false)
(37,width)
(38,hdr->sgnd)
(39,in)
(40,hdr->magic)
(41,hdr->maxval)
(42,hdr)
(43,height)
(44,numcmpts)
(45,pnm_getsintstr(in, &height)
(46,1)
(47,height)
(48,1)
(49,pnm_getint16(in, &hdr->magic)
(50,height)
(51,1)
(52,&height)
(53,0)
(54,width)
(55,pnm_type(hdr->magic)
(56,PNM_TYPE_PBM)
(57,hdr->sgnd = true)
(58,)
(59,0)
(60,pnm_hdr_t *hdr)
(61,)
(62,jas_stream_t *in)
(63,width)
(64,)
(65,default:)
(66,case PNM_TYPE_PPM:)
(67,hdr)
(68,pnm_getsintstr(in, &width)
(69,hdr->magic)
(70,sgnd)
(71,break;)
(72,-maxval)
(73,hdr)
(74,&maxval)
(75,hdr)
(76,pnm_type(hdr->magic)
(77,hdr->numcmpts)
(78,if (pnm_getint16(in, &hdr->magic)
(79,switch (pnm_type(hdr->magic)
(80,maxval < 0)
(81,pnm_type(hdr->magic)
(82,)
(83,maxval)
(84,return -1;)
(85,if (maxval < 0)
(86,hdr)
(87,break;)
(88,&width)
(89,maxval)
(90,if (pnm_type(hdr->magic)
(91,maxval)
(92,maxval)
(93,maxval)
(94,&hdr->magic)
(95,pnm_getint16(in, &hdr->magic)
(96,case PNM_TYPE_PGM:)
(97,true)
(98,if (pnm_getsintstr(in, &maxval)
(99,hdr)
(100,hdr)
(101,hdr->width = width)
(102,hdr->numcmpts = 1)
(103,hdr->width)
(104,width)
(105,)
(106,in)
(107,hdr->numcmpts)
(108,1)
(109,hdr)
(110,hdr)
(111,pnm_getsintstr(in, &maxval)
-----cfg-----
(129,126)
(131,149)
(134,131)
(7,19)
(7,24)
(138,144)
(141,149)
(144,141)
(147,153)
(147,157)
(19,24)
(149,147)
(22,27)
(22,32)
(24,22)
(153,155)
(27,159)
(155,159)
(157,159)
(31,42)
(32,35)
(35,31)
(38,52)
(38,105)
(40,38)
(42,40)
(43,42)
(44,46)
(46,43)
(49,57)
(50,49)
(52,50)
(54,62)
(55,54)
(57,55)
(59,67)
(60,59)
(62,60)
(64,72)
(65,64)
(67,65)
(69,79)
(70,75)
(72,70)
(73,69)
(75,73)
(76,86)
(77,82)
(79,77)
(80,76)
(82,80)
(83,94)
(84,90)
(86,84)
(87,83)
(88,87)
(90,88)
(91,44)
(92,97)
(94,92)
(95,91)
(97,95)
(99,109)
(99,115)
(100,99)
(102,100)
(103,102)
(105,103)
(109,159)
(112,118)
(112,138)
(113,112)
(115,113)
(118,124)
(121,129)
(124,121)
(126,134)
-----path-----
7,19,24,22,27,159
7,19,24,22,32,35,31,42,40,38,105,103,102,100,99,109,159
7,19,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,118,124,121,129,126,134,131,149,147,153,155,159
7,19,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,118,124,121,129,126,134,131,149,147,157,159
7,19,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,138,144,141,149,147,153,155,159
7,19,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,138,144,141,149,147,157,159
7,24,22,27,159
7,24,22,32,35,31,42,40,38,105,103,102,100,99,109,159
7,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,118,124,121,129,126,134,131,149,147,153,155,159
7,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,118,124,121,129,126,134,131,149,147,157,159
7,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,138,144,141,149,147,153,155,159
7,24,22,32,35,31,42,40,38,105,103,102,100,99,115,113,112,138,144,141,149,147,157,159
-----cfgNode-----
5,<global>
6,<empty>
7,jas_image_t pnm_decode (jas_stream_t *in,char *opts)
8,jas_stream_t *in
9,char *opts
10,<empty>
11,pnm_hdr_t hdr
12,jas_image_t* image
13,jas_image_cmptparm_t[3] cmptparms
14,jas_image_cmptparm_t* cmptparm
15,int i
16,if (opts)
17,opts
18,<empty>
19,jas_eprintf("warning: ignoring options\n")
20,"warning: ignoring options\n"
21,if (pnm_gethdr(in, &hdr))
22,pnm_gethdr(in, &hdr)
23,in
24,&hdr
25,hdr
26,<empty>
27,return 0;
28,0
29,for (i = 0, cmptparm = cmptparms;i < hdr.numcmpts;++i, ++cmptparm)
30,<empty>
31,i = 0, cmptparm = cmptparms
32,i = 0
33,i
34,0
35,cmptparm = cmptparms
36,cmptparm
37,cmptparms
38,i < hdr.numcmpts
39,i
40,hdr.numcmpts
41,hdr
42,numcmpts
43,++i, ++cmptparm
44,++i
45,i
46,++cmptparm
47,cmptparm
48,<empty>
49,cmptparm->tlx = 0
50,cmptparm->tlx
51,cmptparm
52,tlx
53,0
54,cmptparm->tly = 0
55,cmptparm->tly
56,cmptparm
57,tly
58,0
59,cmptparm->hstep = 1
60,cmptparm->hstep
61,cmptparm
62,hstep
63,1
64,cmptparm->vstep = 1
65,cmptparm->vstep
66,cmptparm
67,vstep
68,1
69,cmptparm->width = hdr.width
70,cmptparm->width
71,cmptparm
72,width
73,hdr.width
74,hdr
75,width
76,cmptparm->height = hdr.height
77,cmptparm->height
78,cmptparm
79,height
80,hdr.height
81,hdr
82,height
83,cmptparm->prec = pnm_maxvaltodepth(hdr.maxval)
84,cmptparm->prec
85,cmptparm
86,prec
87,pnm_maxvaltodepth(hdr.maxval)
88,hdr.maxval
89,hdr
90,maxval
91,cmptparm->sgnd = hdr.sgnd
92,cmptparm->sgnd
93,cmptparm
94,sgnd
95,hdr.sgnd
96,hdr
97,sgnd
98,if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)))
99,!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))
100,image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
101,image
102,jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
103,hdr.numcmpts
104,hdr
105,numcmpts
106,cmptparms
107,JAS_CLRSPC_UNKNOWN
108,<empty>
109,return 0;
110,0
111,if (hdr.numcmpts == 3)
112,hdr.numcmpts == 3
113,hdr.numcmpts
114,hdr
115,numcmpts
116,3
117,<empty>
118,jas_image_setclrspc(image, JAS_CLRSPC_SRGB)
119,image
120,JAS_CLRSPC_SRGB
121,jas_image_setcmpttype(image, 0,
122,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R))
123,image
124,0
125,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R)
126,JAS_CLRSPC_CHANIND_RGB_R
127,jas_image_setcmpttype(image, 1,
128,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G))
129,image
130,1
131,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G)
132,JAS_CLRSPC_CHANIND_RGB_G
133,jas_image_setcmpttype(image, 2,
134,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B))
135,image
136,2
137,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B)
138,JAS_CLRSPC_CHANIND_RGB_B
139,else
140,<empty>
141,jas_image_setclrspc(image, JAS_CLRSPC_SGRAY)
142,image
143,JAS_CLRSPC_SGRAY
144,jas_image_setcmpttype(image, 0,
145,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y))
146,image
147,0
148,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y)
149,JAS_CLRSPC_CHANIND_GRAY_Y
150,if (pnm_getdata(in, &hdr, image))
151,pnm_getdata(in, &hdr, image)
152,in
153,&hdr
154,hdr
155,image
156,<empty>
157,jas_image_destroy(image)
158,image
159,return 0;
160,0
161,return image;
162,image
163,RET
164,jas_stream_t *in
165,char *opts
166,RET
167,jas_image_t pnm_decode (jas_stream_t *in,char *opts)
168,jas_stream_t *in
169,char *opts
170,<empty>
171,pnm_hdr_t hdr
172,jas_image_t* image
173,jas_image_cmptparm_t[3] cmptparms
174,jas_image_cmptparm_t* cmptparm
175,int i
176,if (opts)
177,opts
178,<empty>
179,jas_eprintf("warning: ignoring options\n")
180,"warning: ignoring options\n"
181,if (pnm_gethdr(in, &hdr))
182,pnm_gethdr(in, &hdr)
183,in
184,&hdr
185,hdr
186,<empty>
187,return 0;
188,0
189,for (i = 0, cmptparm = cmptparms;i < hdr.numcmpts;++i, ++cmptparm)
190,<empty>
191,i = 0, cmptparm = cmptparms
192,i = 0
193,i
194,0
195,cmptparm = cmptparms
196,cmptparm
197,cmptparms
198,i < hdr.numcmpts
199,i
200,hdr.numcmpts
201,hdr
202,numcmpts
203,++i, ++cmptparm
204,++i
205,i
206,++cmptparm
207,cmptparm
208,<empty>
209,cmptparm->tlx = 0
210,cmptparm->tlx
211,cmptparm
212,tlx
213,0
214,cmptparm->tly = 0
215,cmptparm->tly
216,cmptparm
217,tly
218,0
219,cmptparm->hstep = 1
220,cmptparm->hstep
221,cmptparm
222,hstep
223,1
224,cmptparm->vstep = 1
225,cmptparm->vstep
226,cmptparm
227,vstep
228,1
229,cmptparm->width = hdr.width
230,cmptparm->width
231,cmptparm
232,width
233,hdr.width
234,hdr
235,width
236,cmptparm->height = hdr.height
237,cmptparm->height
238,cmptparm
239,height
240,hdr.height
241,hdr
242,height
243,cmptparm->prec = pnm_maxvaltodepth(hdr.maxval)
244,cmptparm->prec
245,cmptparm
246,prec
247,pnm_maxvaltodepth(hdr.maxval)
248,hdr.maxval
249,hdr
250,maxval
251,cmptparm->sgnd = hdr.sgnd
252,cmptparm->sgnd
253,cmptparm
254,sgnd
255,hdr.sgnd
256,hdr
257,sgnd
258,if (!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)))
259,!(image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN))
260,image = jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
261,image
262,jas_image_create(hdr.numcmpts, cmptparms, JAS_CLRSPC_UNKNOWN)
263,hdr.numcmpts
264,hdr
265,numcmpts
266,cmptparms
267,JAS_CLRSPC_UNKNOWN
268,<empty>
269,return 0;
270,0
271,if (hdr.numcmpts == 3)
272,hdr.numcmpts == 3
273,hdr.numcmpts
274,hdr
275,numcmpts
276,3
277,<empty>
278,jas_image_setclrspc(image, JAS_CLRSPC_SRGB)
279,image
280,JAS_CLRSPC_SRGB
281,jas_image_setcmpttype(image, 0,
282,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R))
283,image
284,0
285,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R)
286,JAS_CLRSPC_CHANIND_RGB_R
287,jas_image_setcmpttype(image, 1,
288,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G))
289,image
290,1
291,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G)
292,JAS_CLRSPC_CHANIND_RGB_G
293,jas_image_setcmpttype(image, 2,
294,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B))
295,image
296,2
297,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B)
298,JAS_CLRSPC_CHANIND_RGB_B
299,else
300,<empty>
301,jas_image_setclrspc(image, JAS_CLRSPC_SGRAY)
302,image
303,JAS_CLRSPC_SGRAY
304,jas_image_setcmpttype(image, 0,
305,		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y))
306,image
307,0
308,JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_GRAY_Y)
309,JAS_CLRSPC_CHANIND_GRAY_Y
310,if (pnm_getdata(in, &hdr, image))
311,pnm_getdata(in, &hdr, image)
312,in
313,&hdr
314,hdr
315,image
316,<empty>
317,jas_image_destroy(image)
318,image
319,return 0;
320,0
321,return image;
322,image
323,RET
324,jas_stream_t *in
325,char *opts
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
jas_image_t *pnm_decode(jas_stream_t *in, char *opts) {
pnm_hdr_t hdr;
jas_image_t *image;
jas_image_cmptparm_t cmptparms[3];
jas_image_cmptparm_t *cmptparm;
int i;
for(i = 0, cmptparm = cmptparms;i < hdr.numcmpts;++i, ++cmptparm)
cmptparm->tlx = 0;
cmptparm->tly = 0;
cmptparm->hstep = 1;
cmptparm->vstep = 1;
cmptparm->width = hdr.width;
cmptparm->height = hdr.height;
cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);
cmptparm->sgnd = hdr.sgnd;
for(i = 0, cmptparm = cmptparms;i < hdr.numcmpts;++i, ++cmptparm)
cmptparm->tlx = 0;
cmptparm->tly = 0;
cmptparm->hstep = 1;
cmptparm->vstep = 1;
cmptparm->width = hdr.width;
cmptparm->height = hdr.height;
cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);
cmptparm->sgnd = hdr.sgnd;
for(i = 0, cmptparm = cmptparms;i < hdr.numcmpts;++i, ++cmptparm)
cmptparm->tlx = 0;
cmptparm->tly = 0;
cmptparm->hstep = 1;
cmptparm->vstep = 1;
cmptparm->width = hdr.width;
cmptparm->height = hdr.height;
cmptparm->prec = pnm_maxvaltodepth(hdr.maxval);
cmptparm->sgnd = hdr.sgnd;
if(hdr.numcmpts == 3)
jas_image_setclrspc(image, JAS_CLRSPC_SRGB);
jas_image_setcmpttype(image, 0, 		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R));
jas_image_setcmpttype(image, 1, 		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G));
jas_image_setcmpttype(image, 2, 		  JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B));
return image;
=======================
