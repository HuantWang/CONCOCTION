-----label-----
0
-----code-----
int JPC_ISTERMINATED(int passno, int firstpassno, int numpasses, int termall,
  int lazy)
{
	int ret;
	int n;
	if (passno - firstpassno == numpasses - 1) {
		ret = 1;
	} else {
		n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);
		ret = (n <= 1) ? 1 : 0;
	}

	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
7,8
9,10
9,11
11,12
13,14
13,15
15,16
17,18
17,19
19,20
21,22
21,23
23,24
25,26
25,27
25,28
25,29
26,27
27,28
27,29
29,30
31,32
32,33
32,34
34,35
36,37
36,38
36,39
37,38
37,39
38,39
38,40
39,40
41,42
43,44
43,45
44,45
47,48
48,49
49,50
49,51
50,51
53,54
53,55
54,55
55,56
55,57
56,57
58,59
58,60
58,61
58,62
58,63
58,64
59,60
61,62
63,64
65,66
67,68
69,70
71,72
72,73
72,74
73,74
75,76
75,77
75,78
76,77
77,78
77,79
78,79
83,84
84,85
-----nextToken-----
2,4,6,8,10,12,14,16,18,20,22,24,28,30,33,35,40,42,45,46,51,52,57,60,62,64,66,68,70,74,79,80,81,82,85
-----computeFrom-----
37,38
37,39
38,39
38,40
43,44
43,45
49,50
49,51
55,56
55,57
72,73
72,74
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
45,66
40,62
42,64
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;ConditionalExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int JPC_ISTERMINATED(int passno, int firstpassno, int numpasses, int termall,  int lazy){	int ret;	int n;	if (passno - firstpassno == numpasses - 1) {		ret = 1;	} else {		n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);		ret = (n <= 1) ? 1 : 0;	}	return ret;}
int
JPC_ISTERMINATED(int passno, int firstpassno, int numpasses, int termall,  int lazy)
JPC_ISTERMINATED
int passno
int
passno
passno
int firstpassno
int
firstpassno
firstpassno
int numpasses
int
numpasses
numpasses
int termall
int
termall
termall
int lazy
int
lazy
lazy
{	int ret;	int n;	if (passno - firstpassno == numpasses - 1) {		ret = 1;	} else {		n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);		ret = (n <= 1) ? 1 : 0;	}	return ret;}
int ret;
int ret;
int
ret
ret
int n;
int n;
int
n
n
if (passno - firstpassno == numpasses - 1) {		ret = 1;	} else {		n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);		ret = (n <= 1) ? 1 : 0;	}
passno - firstpassno == numpasses - 1
passno - firstpassno
passno
passno
firstpassno
firstpassno
numpasses - 1
numpasses
numpasses
1
{		ret = 1;	}
ret = 1;
ret = 1
ret
ret
1
{		n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);		ret = (n <= 1) ? 1 : 0;	}
n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall);
n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
n
n
JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
JPC_SEGPASSCNT
JPC_SEGPASSCNT
passno
passno
firstpassno
firstpassno
numpasses
numpasses
lazy
lazy
termall
termall
ret = (n <= 1) ? 1 : 0;
ret = (n <= 1) ? 1 : 0
ret
ret
(n <= 1) ? 1 : 0
(n <= 1)
n <= 1
n
n
1
1
0
return ret;
ret
ret
-----joern-----
(10,9,0)
(3,5,0)
(14,9,0)
(10,21,0)
(2,33,0)
(5,31,0)
(8,9,0)
(39,5,0)
(38,24,0)
(26,31,0)
(32,31,0)
(15,40,0)
(16,37,0)
(35,31,0)
(27,23,0)
(43,31,0)
(29,10,0)
(13,9,0)
(19,16,0)
(41,16,0)
(22,31,0)
(0,10,0)
(1,2,0)
(11,44,0)
(12,40,0)
(39,44,0)
(16,33,0)
(39,15,0)
(24,12,0)
(25,2,0)
(39,28,0)
(30,15,0)
(37,9,0)
(24,4,0)
(28,31,0)
(7,23,0)
(12,24,0)
(44,36,0)
(6,17,0)
(42,24,0)
(18,28,0)
(37,16,0)
(23,20,0)
(16,19,1)
(39,8,1)
(2,1,1)
(23,7,1)
(25,10,1)
(24,4,1)
(39,5,1)
(8,32,1)
(15,30,1)
(16,33,1)
(27,37,1)
(24,42,1)
(28,18,1)
(39,28,1)
(34,23,1)
(10,0,1)
(41,2,1)
(38,23,1)
(42,38,1)
(23,20,1)
(2,33,1)
(11,2,1)
(18,34,1)
(12,24,1)
(8,34,1)
(30,12,1)
(37,16,1)
(8,35,1)
(39,15,1)
(7,27,1)
(39,44,1)
(19,41,1)
(5,3,1)
(0,29,1)
(10,21,1)
(44,11,1)
(3,34,1)
(1,25,1)
(2,33,2)
(34,23,2)
(28,34,2)
(23,20,2)
(39,28,2)
(39,15,2)
(39,5,2)
(42,23,2)
(10,21,2)
(30,23,2)
(7,2,2)
(41,2,2)
(16,2,2)
(8,34,2)
(15,23,2)
(18,34,2)
(39,44,2)
(3,34,2)
(19,2,2)
(11,2,2)
(27,2,2)
(23,2,2)
(38,23,2)
(37,16,2)
(24,4,2)
(12,24,2)
(12,23,2)
(44,2,2)
(37,2,2)
(16,33,2)
(5,34,2)
(24,23,2)
-----------------------------------
(0,0)
(1,JPC_COX_INS)
(2,qmfbid == JPC_COX_INS)
(3,2)
(4,int orient)
(5,return 2;)
(6,switch (orient)
(7,0)
(8,abort()
(9,)
(10,numlvls = 0)
(11,0)
(12,assert(orient == JPC_TSFB_LL)
(13,if (qmfbid == JPC_COX_INS)
(14,if (lvlno == 0)
(15,return 0;)
(16,qmfbid == JPC_COX_RFT)
(17,)
(18,1)
(19,JPC_COX_RFT)
(20,int lvlno)
(21,int numlvls)
(22,case JPC_TSFB_HH:)
(23,lvlno == 0)
(24,orient == JPC_TSFB_LL)
(25,qmfbid)
(26,case JPC_TSFB_LH:)
(27,lvlno)
(28,return 1;)
(29,numlvls)
(30,0)
(31,)
(32,break;)
(33,int qmfbid)
(34,orient)
(35,break;)
(36,)
(37,assert(qmfbid == JPC_COX_RFT)
(38,orient)
(39,RET)
(40,)
(41,qmfbid)
(42,JPC_TSFB_LL)
(43,case JPC_TSFB_HL:)
(44,return 0;)
-----cfg-----
(32,30)
(17,25)
(17,32)
(18,21)
(21,17)
(38,46)
(7,18)
(40,38)
(25,46)
(41,40)
(46,48)
(30,41)
-----path-----
7,18,21,17,25,46,48
7,18,21,17,32,30,41,40,38,46,48
-----cfgNode-----
5,<global>
6,<empty>
7,int JPC_ISTERMINATED (int passno,int firstpassno,int numpasses,int termall,int lazy)
8,int passno
9,int firstpassno
10,int numpasses
11,int termall
12,int lazy
13,<empty>
14,int ret
15,int n
16,if (passno - firstpassno == numpasses - 1)
17,passno - firstpassno == numpasses - 1
18,passno - firstpassno
19,passno
20,firstpassno
21,numpasses - 1
22,numpasses
23,1
24,<empty>
25,ret = 1
26,ret
27,1
28,else
29,<empty>
30,n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
31,n
32,JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
33,passno
34,firstpassno
35,numpasses
36,lazy
37,termall
38,ret = (n <= 1) ? 1 : 0
39,ret
40,(n <= 1) ? 1 : 0
41,n <= 1
42,n
43,1
44,1
45,0
46,return ret;
47,ret
48,RET
49,int passno
50,int firstpassno
51,int numpasses
52,int termall
53,int lazy
54,RET
55,int JPC_ISTERMINATED (int passno,int firstpassno,int numpasses,int termall,int lazy)
56,int passno
57,int firstpassno
58,int numpasses
59,int termall
60,int lazy
61,<empty>
62,int ret
63,int n
64,if (passno - firstpassno == numpasses - 1)
65,passno - firstpassno == numpasses - 1
66,passno - firstpassno
67,passno
68,firstpassno
69,numpasses - 1
70,numpasses
71,1
72,<empty>
73,ret = 1
74,ret
75,1
76,else
77,<empty>
78,n = JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
79,n
80,JPC_SEGPASSCNT(passno, firstpassno, numpasses, lazy, termall)
81,passno
82,firstpassno
83,numpasses
84,lazy
85,termall
86,ret = (n <= 1) ? 1 : 0
87,ret
88,(n <= 1) ? 1 : 0
89,n <= 1
90,n
91,1
92,1
93,0
94,return ret;
95,ret
96,RET
97,int passno
98,int firstpassno
99,int numpasses
100,int termall
101,int lazy
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
int JPC_ISTERMINATED(int passno, int firstpassno, int numpasses, int termall,   int lazy) {
int ret;
int n;
if(passno - firstpassno == numpasses - 1)
ret = 1;
return ret;
=======================
