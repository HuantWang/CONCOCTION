-----label-----
0
-----code-----
static int jp2_colr_putdata(jp2_box_t *box, jas_stream_t *out)
{
	jp2_colr_t *colr = &box->data.colr;
	if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||
	  jp2_putuint8(out, colr->approx)) {
		return -1;
	}
	switch (colr->method) {
	case JP2_COLR_ENUM:
		if (jp2_putuint32(out, colr->csid)) {
			return -1;
		}
		break;
	case JP2_COLR_ICC:
		if (jas_stream_write(out, colr->iccp,
		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))
			return -1;
		break;
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
19,20
19,21
20,21
22,23
22,24
22,25
25,26
26,27
27,28
27,29
28,29
28,30
29,30
33,34
33,35
34,35
34,36
35,36
35,37
36,37
36,38
36,39
37,38
39,40
41,42
41,43
42,43
45,46
45,47
45,48
46,47
48,49
50,51
50,52
51,52
54,55
54,56
54,57
55,56
57,58
59,60
59,61
60,61
63,64
64,65
65,66
67,68
67,69
68,69
68,70
69,70
72,73
72,74
72,75
72,76
72,77
72,78
73,74
74,75
76,77
76,78
77,78
77,79
77,80
78,79
80,81
82,83
82,84
83,84
86,87
87,88
88,89
91,92
92,93
94,95
94,96
95,96
96,97
97,98
100,101
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,24,30,31,32,38,40,43,44,47,49,52,53,56,58,61,62,66,70,71,75,79,81,84,85,89,90,93,98,99,101
-----computeFrom-----
34,35
34,36
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;SwitchStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;CaseStatement;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;BreakStatement;CaseStatement;IdExpression;Name;IfStatement;ProblemExpression;ReturnStatement;UnaryExpression;LiteralExpression;BreakStatement;ReturnStatement;LiteralExpression;
-----ast_node-----
static int jp2_colr_putdata(jp2_box_t *box, jas_stream_t *out){	jp2_colr_t *colr = &box->data.colr;	if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||	  jp2_putuint8(out, colr->approx)) {		return -1;	}	switch (colr->method) {	case JP2_COLR_ENUM:		if (jp2_putuint32(out, colr->csid)) {			return -1;		}		break;	case JP2_COLR_ICC:		if (jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))			return -1;		break;	}	return 0;}
static int
jp2_colr_putdata(jp2_box_t *box, jas_stream_t *out)
jp2_colr_putdata
jp2_box_t *box
jp2_box_t
jp2_box_t
*box
*
box
jas_stream_t *out
jas_stream_t
jas_stream_t
*out
*
out
{	jp2_colr_t *colr = &box->data.colr;	if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||	  jp2_putuint8(out, colr->approx)) {		return -1;	}	switch (colr->method) {	case JP2_COLR_ENUM:		if (jp2_putuint32(out, colr->csid)) {			return -1;		}		break;	case JP2_COLR_ICC:		if (jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))			return -1;		break;	}	return 0;}
jp2_colr_t *colr = &box->data.colr;
jp2_colr_t *colr = &box->data.colr;
jp2_colr_t
jp2_colr_t
*colr = &box->data.colr
*
colr
= &box->data.colr
&box->data.colr
box->data.colr
box->data
box
box
data
colr
if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||	  jp2_putuint8(out, colr->approx)) {		return -1;	}
jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||	  jp2_putuint8(out, colr->approx)
jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri)
jp2_putuint8(out, colr->method)
jp2_putuint8
jp2_putuint8
out
out
colr->method
colr
colr
method
jp2_putuint8(out, colr->pri)
jp2_putuint8
jp2_putuint8
out
out
colr->pri
colr
colr
pri
jp2_putuint8(out, colr->approx)
jp2_putuint8
jp2_putuint8
out
out
colr->approx
colr
colr
approx
{		return -1;	}
return -1;
-1
1
switch (colr->method) {	case JP2_COLR_ENUM:		if (jp2_putuint32(out, colr->csid)) {			return -1;		}		break;	case JP2_COLR_ICC:		if (jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))			return -1;		break;	}
colr->method
colr
colr
method
{	case JP2_COLR_ENUM:		if (jp2_putuint32(out, colr->csid)) {			return -1;		}		break;	case JP2_COLR_ICC:		if (jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))			return -1;		break;	}
case JP2_COLR_ENUM:
JP2_COLR_ENUM
JP2_COLR_ENUM
if (jp2_putuint32(out, colr->csid)) {			return -1;		}
jp2_putuint32(out, colr->csid)
jp2_putuint32
jp2_putuint32
out
out
colr->csid
colr
colr
csid
{			return -1;		}
return -1;
-1
1
break;
case JP2_COLR_ICC:
JP2_COLR_ICC
JP2_COLR_ICC
if (jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))			return -1;
jas_stream_write(out, colr->iccp,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen)
return -1;
-1
1
break;
return 0;
0
-----joern-----
(5,11,0)
(18,14,0)
(21,25,0)
(0,7,0)
(22,11,0)
(1,15,0)
(15,11,0)
(11,0,0)
(13,7,0)
(11,8,0)
(18,7,0)
(25,24,0)
(7,18,0)
(3,25,0)
(0,11,0)
(24,2,0)
(20,5,0)
(7,0,0)
(4,18,0)
(9,15,0)
(10,18,0)
(16,8,0)
(12,6,0)
(5,6,0)
(25,11,0)
(24,25,0)
(17,5,0)
(19,8,0)
(6,2,0)
(0,7,1)
(21,15,1)
(9,11,1)
(23,6,1)
(10,22,1)
(1,9,1)
(11,0,1)
(17,20,1)
(13,18,1)
(12,5,1)
(18,4,1)
(5,11,1)
(24,25,1)
(7,18,1)
(23,15,1)
(20,24,1)
(15,11,1)
(3,21,1)
(6,12,1)
(25,3,1)
(18,14,1)
(7,13,1)
(15,1,1)
(5,17,1)
(4,10,1)
(25,11,1)
(12,15,2)
(3,15,2)
(11,0,2)
(25,11,2)
(25,15,2)
(24,15,2)
(24,25,2)
(0,7,2)
(15,11,2)
(5,11,2)
(21,15,2)
(20,15,2)
(17,15,2)
(6,15,2)
(5,15,2)
(7,18,2)
(18,14,2)
-----------------------------------
(0,&box->data.cdef)
(1,ents)
(2,)
(3,ents)
(4,data)
(5,cdef->ents)
(6,cdef->ents = 0)
(7,box->data.cdef)
(8,)
(9,cdef)
(10,box)
(11,*cdef = &box->data.cdef)
(12,0)
(13,cdef)
(14,jp2_box_t *box)
(15,cdef->ents)
(16,if (cdef->ents)
(17,ents)
(18,box->data)
(19,cdef)
(20,cdef)
(21,cdef)
(22,cdef)
(23,RET)
(24,jas_free(cdef->ents)
(25,cdef->ents)
-----cfg-----
(65,71)
(66,65)
(69,71)
(7,18)
(12,27)
(14,12)
(15,14)
(16,19)
(18,16)
(19,15)
(21,40)
(21,45)
(22,21)
(22,37)
(23,22)
(23,32)
(25,23)
(27,25)
(28,22)
(30,28)
(32,30)
(33,21)
(35,33)
(37,35)
(39,71)
(40,39)
(43,54)
(43,63)
(43,69)
(45,43)
(50,57)
(50,69)
(52,50)
(54,52)
(56,71)
(57,56)
(63,66)
(63,69)
-----path-----
7,18,16,19,15,14,12,27,25,23,22,21,40,39,71
7,18,16,19,15,14,12,27,25,23,22,21,45,43,54,52,50,57,56,71
7,18,16,19,15,14,12,27,25,23,22,21,45,43,54,52,50,69,71
7,18,16,19,15,14,12,27,25,23,22,21,45,43,63,66,65,71
7,18,16,19,15,14,12,27,25,23,22,21,45,43,63,69,71
7,18,16,19,15,14,12,27,25,23,22,21,45,43,69,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,40,39,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,45,43,54,52,50,57,56,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,45,43,54,52,50,69,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,45,43,63,66,65,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,45,43,63,69,71
7,18,16,19,15,14,12,27,25,23,22,37,35,33,21,45,43,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,40,39,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,45,43,54,52,50,57,56,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,45,43,54,52,50,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,45,43,63,66,65,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,45,43,63,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,21,45,43,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,40,39,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,45,43,54,52,50,57,56,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,45,43,54,52,50,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,45,43,63,66,65,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,45,43,63,69,71
7,18,16,19,15,14,12,27,25,23,32,30,28,22,37,35,33,21,45,43,69,71
-----cfgNode-----
5,<global>
6,<empty>
7,int jp2_colr_putdata (jp2_box_t *box,jas_stream_t *out)
8,jp2_box_t *box
9,jas_stream_t *out
10,<empty>
11,jp2_colr_t* colr
12,*colr = &box->data.colr
13,colr
14,&box->data.colr
15,box->data.colr
16,box->data
17,box
18,data
19,colr
20,if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||
21,	  jp2_putuint8(out, colr->approx))
22,jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||
23,	  jp2_putuint8(out, colr->approx)
24,jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri)
25,jp2_putuint8(out, colr->method)
26,out
27,colr->method
28,colr
29,method
30,jp2_putuint8(out, colr->pri)
31,out
32,colr->pri
33,colr
34,pri
35,jp2_putuint8(out, colr->approx)
36,out
37,colr->approx
38,colr
39,approx
40,<empty>
41,return -1;
42,-1
43,1
44,switch(colr->method)
45,colr->method
46,colr
47,method
48,<empty>
49,case JP2_COLR_ENUM:
50,JP2_COLR_ENUM
51,if (jp2_putuint32(out, colr->csid))
52,jp2_putuint32(out, colr->csid)
53,out
54,colr->csid
55,colr
56,csid
57,<empty>
58,return -1;
59,-1
60,1
61,break;
62,case JP2_COLR_ICC:
63,JP2_COLR_ICC
64,if (jas_stream_write(out, colr->iccp,
65,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))
66,jas_stream_write(out, colr->iccp,
67,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen)
68,<empty>
69,return -1;
70,-1
71,1
72,break;
73,return 0;
74,0
75,RET
76,jp2_box_t *box
77,jas_stream_t *out
78,RET
79,int jp2_colr_putdata (jp2_box_t *box,jas_stream_t *out)
80,jp2_box_t *box
81,jas_stream_t *out
82,<empty>
83,jp2_colr_t* colr
84,*colr = &box->data.colr
85,colr
86,&box->data.colr
87,box->data.colr
88,box->data
89,box
90,data
91,colr
92,if (jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||
93,	  jp2_putuint8(out, colr->approx))
94,jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri) ||
95,	  jp2_putuint8(out, colr->approx)
96,jp2_putuint8(out, colr->method) || jp2_putuint8(out, colr->pri)
97,jp2_putuint8(out, colr->method)
98,out
99,colr->method
100,colr
101,method
102,jp2_putuint8(out, colr->pri)
103,out
104,colr->pri
105,colr
106,pri
107,jp2_putuint8(out, colr->approx)
108,out
109,colr->approx
110,colr
111,approx
112,<empty>
113,return -1;
114,-1
115,1
116,switch(colr->method)
117,colr->method
118,colr
119,method
120,<empty>
121,case JP2_COLR_ENUM:
122,JP2_COLR_ENUM
123,if (jp2_putuint32(out, colr->csid))
124,jp2_putuint32(out, colr->csid)
125,out
126,colr->csid
127,colr
128,csid
129,<empty>
130,return -1;
131,-1
132,1
133,break;
134,case JP2_COLR_ICC:
135,JP2_COLR_ICC
136,if (jas_stream_write(out, colr->iccp,
137,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen))
138,jas_stream_write(out, colr->iccp,
139,		  JAS_CAST(int, colr->iccplen)) != JAS_CAST(int, colr->iccplen)
140,<empty>
141,return -1;
142,-1
143,1
144,break;
145,return 0;
146,0
147,RET
148,jp2_box_t *box
149,jas_stream_t *out
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
static int jp2_colr_putdata(jp2_box_t *box, jas_stream_t *out) {
jp2_colr_t *colr = &box->data.colr;
switch(colr->method)
return 0;
=======================
