-----label-----
0
-----code-----
int jpc_mqenc_flush(jpc_mqenc_t *mqenc, int termmode)
{
	int_fast16_t k;

	switch (termmode) {
	case JPC_MQENC_PTERM:
		k = 11 - mqenc->ctreg + 1;
		while (k > 0) {
			mqenc->creg <<= mqenc->ctreg;
			mqenc->ctreg = 0;
			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,
			  mqenc);
			k -= mqenc->ctreg;
		}
		if (mqenc->outbuf != 0xff) {
			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
		}
		break;
	case JPC_MQENC_DEFTERM:
		jpc_mqenc_setbits(mqenc);
		mqenc->creg <<= mqenc->ctreg;
		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
		mqenc->creg <<= mqenc->ctreg;
		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
		if (mqenc->outbuf != 0xff) {
			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
		}
		break;
	default:
		abort();
		break;
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
16,17
17,18
17,19
18,19
20,21
22,23
22,24
23,24
25,26
25,27
25,28
25,29
25,30
25,31
25,32
25,33
25,34
25,35
25,36
25,37
25,38
25,39
25,40
25,41
26,27
27,28
29,30
30,31
30,32
31,32
33,34
33,35
34,35
34,36
36,37
36,38
37,38
41,42
41,43
42,43
42,44
43,44
46,47
46,48
46,49
46,50
47,48
48,49
48,50
49,50
49,51
50,51
53,54
53,55
54,55
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
65,68
65,69
65,70
66,67
68,69
68,70
69,70
72,73
72,74
73,74
76,77
76,78
77,78
80,81
82,83
83,84
83,85
84,85
86,87
86,88
87,88
90,91
90,92
91,92
91,93
92,93
92,94
93,94
97,98
98,99
99,100
99,101
99,102
99,103
99,104
100,101
102,103
102,104
103,104
106,107
106,108
107,108
110,111
110,112
111,112
114,115
117,118
118,119
120,121
121,122
121,123
122,123
124,125
126,127
127,128
127,129
128,129
128,130
129,130
132,133
132,134
133,134
136,137
137,138
137,139
137,140
137,141
137,142
138,139
140,141
140,142
141,142
144,145
144,146
145,146
148,149
148,150
149,150
152,153
154,155
155,156
155,157
156,157
156,158
157,158
160,161
160,162
161,162
164,165
165,166
165,167
165,168
165,169
165,170
166,167
168,169
168,170
169,170
172,173
172,174
173,174
176,177
176,178
177,178
180,181
182,183
182,184
183,184
183,185
184,185
184,186
185,186
189,190
190,191
191,192
191,193
191,194
191,195
191,196
192,193
194,195
194,196
195,196
198,199
198,200
199,200
202,203
202,204
203,204
206,207
210,211
211,212
212,213
215,216
-----nextToken-----
2,4,7,9,10,12,14,19,21,24,28,32,35,38,39,40,44,45,51,52,55,56,61,62,63,67,70,71,74,75,78,79,81,85,88,89,94,95,96,101,104,105,108,109,112,113,115,116,119,123,125,130,131,134,135,139,142,143,146,147,150,151,153,158,159,162,163,167,170,171,174,175,178,179,181,186,187,188,193,196,197,200,201,204,205,207,208,209,213,214,216
-----computeFrom-----
30,31
30,32
33,34
33,35
34,35
34,36
42,43
42,44
48,49
48,50
58,59
58,60
83,84
83,85
91,92
91,93
127,128
127,129
155,156
155,157
183,184
183,185
-----guardedBy-----
94,115
186,207
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;WhileStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BreakStatement;ReturnStatement;LiteralExpression;
-----ast_node-----
int jpc_mqenc_flush(jpc_mqenc_t *mqenc, int termmode){	int_fast16_t k;	switch (termmode) {	case JPC_MQENC_PTERM:		k = 11 - mqenc->ctreg + 1;		while (k > 0) {			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	case JPC_MQENC_DEFTERM:		jpc_mqenc_setbits(mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	default:		abort();		break;	}	return 0;}
int
jpc_mqenc_flush(jpc_mqenc_t *mqenc, int termmode)
jpc_mqenc_flush
jpc_mqenc_t *mqenc
jpc_mqenc_t
jpc_mqenc_t
*mqenc
*
mqenc
int termmode
int
termmode
termmode
{	int_fast16_t k;	switch (termmode) {	case JPC_MQENC_PTERM:		k = 11 - mqenc->ctreg + 1;		while (k > 0) {			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	case JPC_MQENC_DEFTERM:		jpc_mqenc_setbits(mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	default:		abort();		break;	}	return 0;}
int_fast16_t k;
int_fast16_t k;
int_fast16_t
int_fast16_t
k
k
switch (termmode) {	case JPC_MQENC_PTERM:		k = 11 - mqenc->ctreg + 1;		while (k > 0) {			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	case JPC_MQENC_DEFTERM:		jpc_mqenc_setbits(mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	default:		abort();		break;	}
termmode
termmode
{	case JPC_MQENC_PTERM:		k = 11 - mqenc->ctreg + 1;		while (k > 0) {			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	case JPC_MQENC_DEFTERM:		jpc_mqenc_setbits(mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		mqenc->creg <<= mqenc->ctreg;		jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}		break;	default:		abort();		break;	}
case JPC_MQENC_PTERM:
JPC_MQENC_PTERM
JPC_MQENC_PTERM
k = 11 - mqenc->ctreg + 1;
k = 11 - mqenc->ctreg + 1
k
k
11 - mqenc->ctreg + 1
11 - mqenc->ctreg
11
mqenc->ctreg
mqenc
mqenc
ctreg
1
while (k > 0) {			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}
k > 0
k
k
0
{			mqenc->creg <<= mqenc->ctreg;			mqenc->ctreg = 0;			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);			k -= mqenc->ctreg;		}
mqenc->creg <<= mqenc->ctreg;
mqenc->creg <<= mqenc->ctreg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc->ctreg = 0;
mqenc->ctreg = 0
mqenc->ctreg
mqenc
mqenc
ctreg
0
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc);
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,			  mqenc)
jpc_mqenc_byteout
jpc_mqenc_byteout
mqenc->areg
mqenc
mqenc
areg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc
mqenc
k -= mqenc->ctreg;
k -= mqenc->ctreg
k
k
mqenc->ctreg
mqenc
mqenc
ctreg
if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}
mqenc->outbuf != 0xff
mqenc->outbuf
mqenc
mqenc
outbuf
0xff
{			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
jpc_mqenc_byteout
jpc_mqenc_byteout
mqenc->areg
mqenc
mqenc
areg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc
mqenc
break;
case JPC_MQENC_DEFTERM:
JPC_MQENC_DEFTERM
JPC_MQENC_DEFTERM
jpc_mqenc_setbits(mqenc);
jpc_mqenc_setbits(mqenc)
jpc_mqenc_setbits
jpc_mqenc_setbits
mqenc
mqenc
mqenc->creg <<= mqenc->ctreg;
mqenc->creg <<= mqenc->ctreg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
jpc_mqenc_byteout
jpc_mqenc_byteout
mqenc->areg
mqenc
mqenc
areg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc
mqenc
mqenc->creg <<= mqenc->ctreg;
mqenc->creg <<= mqenc->ctreg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
jpc_mqenc_byteout
jpc_mqenc_byteout
mqenc->areg
mqenc
mqenc
areg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc
mqenc
if (mqenc->outbuf != 0xff) {			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}
mqenc->outbuf != 0xff
mqenc->outbuf
mqenc
mqenc
outbuf
0xff
{			jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);		}
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
jpc_mqenc_byteout
jpc_mqenc_byteout
mqenc->areg
mqenc
mqenc
areg
mqenc->creg
mqenc
mqenc
creg
mqenc->ctreg
mqenc
mqenc
ctreg
mqenc
mqenc
break;
default:
abort();
abort()
abort
abort
break;
return 0;
0
-----joern-----
(48,17,0)
(33,7,0)
(61,41,0)
(46,45,0)
(19,76,0)
(28,17,0)
(62,17,0)
(13,52,0)
(1,15,0)
(67,60,0)
(52,17,0)
(50,76,0)
(4,17,0)
(71,61,0)
(46,52,0)
(2,15,0)
(38,62,0)
(22,14,0)
(47,67,0)
(76,43,0)
(51,46,0)
(18,40,0)
(76,17,0)
(63,48,0)
(45,46,0)
(9,4,0)
(72,34,0)
(68,27,0)
(5,70,0)
(43,70,0)
(48,63,0)
(7,0,0)
(16,67,0)
(41,70,0)
(68,7,0)
(15,8,0)
(32,18,0)
(73,44,0)
(14,58,0)
(66,43,0)
(32,74,0)
(46,34,0)
(6,68,0)
(46,17,0)
(40,58,0)
(32,28,0)
(63,27,0)
(62,8,0)
(75,28,0)
(56,40,0)
(60,35,0)
(4,69,0)
(44,46,0)
(46,44,0)
(39,18,0)
(3,40,0)
(21,71,0)
(34,17,0)
(23,45,0)
(28,32,0)
(10,71,0)
(11,48,0)
(57,60,0)
(25,70,0)
(52,46,0)
(41,61,0)
(26,41,0)
(24,14,0)
(40,17,0)
(18,70,0)
(27,63,0)
(55,68,0)
(67,17,0)
(58,14,0)
(8,65,0)
(8,15,0)
(15,27,0)
(59,62,0)
(35,60,0)
(14,27,0)
(37,52,0)
(31,45,0)
(60,67,0)
(45,17,0)
(30,74,0)
(58,36,0)
(54,44,0)
(74,32,0)
(46,49,0)
(42,34,0)
(18,62,0)
(12,32,0)
(44,17,0)
(20,48,0)
(64,27,0)
(67,8,0)
(58,62,0)
(53,65,0)
(34,46,0)
(43,76,0)
(29,61,0)
(27,70,0)
(7,68,0)
(68,55,1)
(3,56,1)
(52,17,1)
(58,14,1)
(15,2,1)
(7,68,1)
(21,29,1)
(7,0,1)
(52,13,1)
(51,44,1)
(41,61,1)
(60,57,1)
(75,58,1)
(41,10,1)
(1,62,1)
(63,48,1)
(46,17,1)
(47,16,1)
(59,7,1)
(64,43,1)
(68,27,1)
(67,17,1)
(16,8,1)
(44,54,1)
(40,17,1)
(76,50,1)
(12,28,1)
(57,67,1)
(19,66,1)
(32,28,1)
(40,3,1)
(73,45,1)
(28,17,1)
(23,52,1)
(58,62,1)
(11,64,1)
(75,4,1)
(8,15,1)
(44,17,1)
(18,40,1)
(9,35,1)
(14,22,1)
(38,59,1)
(34,17,1)
(67,47,1)
(31,23,1)
(54,73,1)
(45,17,1)
(55,6,1)
(66,41,1)
(56,35,1)
(45,31,1)
(13,37,1)
(62,38,1)
(18,62,1)
(4,9,1)
(75,46,1)
(10,21,1)
(37,34,1)
(48,20,1)
(33,68,1)
(39,18,1)
(28,75,1)
(46,44,1)
(14,27,1)
(18,32,1)
(50,19,1)
(74,30,1)
(46,34,1)
(24,40,1)
(4,17,1)
(72,42,1)
(46,45,1)
(20,11,1)
(29,26,1)
(76,17,1)
(35,60,1)
(30,28,1)
(43,76,1)
(48,17,1)
(46,51,1)
(60,67,1)
(32,74,1)
(6,27,1)
(42,7,1)
(27,63,1)
(67,8,1)
(22,24,1)
(46,52,1)
(15,27,1)
(34,72,1)
(32,12,1)
(7,33,1)
(62,17,1)
(2,1,1)
(46,45,2)
(2,7,2)
(58,62,2)
(4,35,2)
(13,7,2)
(40,17,2)
(32,28,2)
(63,48,2)
(46,34,2)
(41,61,2)
(62,7,2)
(15,27,2)
(62,17,2)
(3,35,2)
(54,7,2)
(60,7,2)
(35,60,2)
(46,52,2)
(67,17,2)
(73,7,2)
(47,7,2)
(27,63,2)
(58,14,2)
(46,44,2)
(30,28,2)
(8,7,2)
(67,8,2)
(35,7,2)
(68,27,2)
(39,18,2)
(52,17,2)
(51,7,2)
(74,28,2)
(42,7,2)
(46,17,2)
(7,68,2)
(14,27,2)
(48,17,2)
(23,7,2)
(18,62,2)
(4,17,2)
(72,7,2)
(46,7,2)
(56,35,2)
(45,17,2)
(34,17,2)
(16,7,2)
(59,7,2)
(37,7,2)
(14,35,2)
(1,7,2)
(60,67,2)
(31,7,2)
(32,74,2)
(76,17,2)
(67,7,2)
(34,7,2)
(45,7,2)
(52,7,2)
(43,76,2)
(44,17,2)
(7,0,2)
(28,17,2)
(38,7,2)
(8,15,2)
(44,7,2)
(24,35,2)
(22,35,2)
(15,7,2)
(18,40,2)
(57,7,2)
(58,35,2)
(9,35,2)
(12,28,2)
(40,35,2)
-----------------------------------
(0,int bit)
(1,state)
(2,qeval)
(3,creg)
(4,jpc_mqenc_codemps2(mqenc)
(5,if (state->mps == bit)
(6,state)
(7,state->mps == bit)
(8,mqenc->areg -= state->qeval)
(9,mqenc)
(10,bit)
(11,mqenc)
(12,0)
(13,creg)
(14,state->qeval)
(15,state->qeval)
(16,mqenc)
(17,jpc_mqenc_t *mqenc)
(18,return jpc_mqenc_error(mqenc)
(19,mqenc)
(20,curctx)
(21,mqenc)
(22,qeval)
(23,mqenc)
(24,state)
(25,state)
(26,100)
(27,state = *(mqenc->curctx)
(28,jpc_mqenc_error(mqenc)
(29,"jpc_mqenc_putbit(%p, %d)
(30,1)
(31,ctreg)
(32,jpc_mqenc_error(mqenc)
(33,bit)
(34,mqenc->areg)
(35,!(mqenc->areg & 0x8000)
(36,)
(37,mqenc)
(38,areg)
(39,RET)
(40,mqenc->creg)
(41,JAS_DBGLOG(100, ("jpc_mqenc_putbit(%p, %d)
(42,mqenc)
(43,JPC_MQENC_CALL(100, jpc_mqenc_dump(mqenc, stderr)
(44,mqenc->curctx)
(45,mqenc->ctreg)
(46,jpc_mqenc_codelps2(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc->curctx, mqenc)
(47,areg)
(48,mqenc->curctx)
(49,)
(50,stderr)
(51,mqenc)
(52,mqenc->creg)
(53,if (!(mqenc->areg & 0x8000)
(54,curctx)
(55,mps)
(56,mqenc)
(57,0x8000)
(58,mqenc->creg += state->qeval)
(59,mqenc)
(60,mqenc->areg & 0x8000)
(61,)
(62,mqenc->areg)
(63,*(mqenc->curctx)
(64,state)
(65,)
(66,100)
(67,mqenc->areg)
(68,state->mps)
(69,)
(70,)
(71,)
(72,areg)
(73,mqenc)
(74,-1)
(75,mqenc)
(76,jpc_mqenc_dump(mqenc, stderr)
-----cfg-----
(128,126)
(129,134)
(131,129)
(132,125)
(134,132)
(7,24)
(7,80)
(7,138)
(138,140)
(140,142)
(17,27)
(19,17)
(20,19)
(22,20)
(24,22)
(27,34)
(27,63)
(31,41)
(32,37)
(34,32)
(35,31)
(37,35)
(38,46)
(39,38)
(41,39)
(43,58)
(44,49)
(46,44)
(47,52)
(49,47)
(50,43)
(52,50)
(54,27)
(56,54)
(58,56)
(60,69)
(60,140)
(61,60)
(63,61)
(66,140)
(67,72)
(69,67)
(70,75)
(72,70)
(73,66)
(75,73)
(80,85)
(82,92)
(83,88)
(85,83)
(86,82)
(88,86)
(89,103)
(90,95)
(92,90)
(93,98)
(95,93)
(96,89)
(98,96)
(100,110)
(101,106)
(103,101)
(104,100)
(106,104)
(107,122)
(108,113)
(110,108)
(111,116)
(113,111)
(114,107)
(116,114)
(119,128)
(119,140)
(120,119)
(122,120)
(125,140)
(126,131)
-----path-----
7,24,22,20,19,17,27,34,32,37,35,31,41,39,38,46,44,49,47,52,50,43,58,56,54,27,63,61,60,69,67,72,70,75,73,66,140,142
7,24,22,20,19,17,27,34,32,37,35,31,41,39,38,46,44,49,47,52,50,43,58,56,54,27,63,61,60,140,142
7,24,22,20,19,17,27,63,61,60,69,67,72,70,75,73,66,140,142
7,24,22,20,19,17,27,63,61,60,140,142
7,80,85,83,88,86,82,92,90,95,93,98,96,89,103,101,106,104,100,110,108,113,111,116,114,107,122,120,119,128,126,131,129,134,132,125,140,142
7,80,85,83,88,86,82,92,90,95,93,98,96,89,103,101,106,104,100,110,108,113,111,116,114,107,122,120,119,140,142
7,138,140,142
-----cfgNode-----
5,<global>
6,<empty>
7,int jpc_mqenc_flush (jpc_mqenc_t *mqenc,int termmode)
8,jpc_mqenc_t *mqenc
9,int termmode
10,<empty>
11,int_fast16_t k
12,switch(termmode)
13,termmode
14,<empty>
15,case JPC_MQENC_PTERM:
16,JPC_MQENC_PTERM
17,k = 11 - mqenc->ctreg + 1
18,k
19,11 - mqenc->ctreg + 1
20,11 - mqenc->ctreg
21,11
22,mqenc->ctreg
23,mqenc
24,ctreg
25,1
26,while (k > 0)
27,k > 0
28,k
29,0
30,<empty>
31,mqenc->creg <<= mqenc->ctreg
32,mqenc->creg
33,mqenc
34,creg
35,mqenc->ctreg
36,mqenc
37,ctreg
38,mqenc->ctreg = 0
39,mqenc->ctreg
40,mqenc
41,ctreg
42,0
43,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,
44,			  mqenc)
45,mqenc->areg
46,mqenc
47,areg
48,mqenc->creg
49,mqenc
50,creg
51,mqenc->ctreg
52,mqenc
53,ctreg
54,mqenc
55,k -= mqenc->ctreg
56,k
57,mqenc->ctreg
58,mqenc
59,ctreg
60,if (mqenc->outbuf != 0xff)
61,mqenc->outbuf != 0xff
62,mqenc->outbuf
63,mqenc
64,outbuf
65,0xff
66,<empty>
67,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
68,mqenc->areg
69,mqenc
70,areg
71,mqenc->creg
72,mqenc
73,creg
74,mqenc->ctreg
75,mqenc
76,ctreg
77,mqenc
78,break;
79,case JPC_MQENC_DEFTERM:
80,JPC_MQENC_DEFTERM
81,jpc_mqenc_setbits(mqenc)
82,mqenc
83,mqenc->creg <<= mqenc->ctreg
84,mqenc->creg
85,mqenc
86,creg
87,mqenc->ctreg
88,mqenc
89,ctreg
90,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
91,mqenc->areg
92,mqenc
93,areg
94,mqenc->creg
95,mqenc
96,creg
97,mqenc->ctreg
98,mqenc
99,ctreg
100,mqenc
101,mqenc->creg <<= mqenc->ctreg
102,mqenc->creg
103,mqenc
104,creg
105,mqenc->ctreg
106,mqenc
107,ctreg
108,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
109,mqenc->areg
110,mqenc
111,areg
112,mqenc->creg
113,mqenc
114,creg
115,mqenc->ctreg
116,mqenc
117,ctreg
118,mqenc
119,if (mqenc->outbuf != 0xff)
120,mqenc->outbuf != 0xff
121,mqenc->outbuf
122,mqenc
123,outbuf
124,0xff
125,<empty>
126,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
127,mqenc->areg
128,mqenc
129,areg
130,mqenc->creg
131,mqenc
132,creg
133,mqenc->ctreg
134,mqenc
135,ctreg
136,mqenc
137,break;
138,default:
139,abort()
140,break;
141,return 0;
142,0
143,RET
144,jpc_mqenc_t *mqenc
145,int termmode
146,RET
147,int jpc_mqenc_flush (jpc_mqenc_t *mqenc,int termmode)
148,jpc_mqenc_t *mqenc
149,int termmode
150,<empty>
151,int_fast16_t k
152,switch(termmode)
153,termmode
154,<empty>
155,case JPC_MQENC_PTERM:
156,JPC_MQENC_PTERM
157,k = 11 - mqenc->ctreg + 1
158,k
159,11 - mqenc->ctreg + 1
160,11 - mqenc->ctreg
161,11
162,mqenc->ctreg
163,mqenc
164,ctreg
165,1
166,while (k > 0)
167,k > 0
168,k
169,0
170,<empty>
171,mqenc->creg <<= mqenc->ctreg
172,mqenc->creg
173,mqenc
174,creg
175,mqenc->ctreg
176,mqenc
177,ctreg
178,mqenc->ctreg = 0
179,mqenc->ctreg
180,mqenc
181,ctreg
182,0
183,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg,
184,			  mqenc)
185,mqenc->areg
186,mqenc
187,areg
188,mqenc->creg
189,mqenc
190,creg
191,mqenc->ctreg
192,mqenc
193,ctreg
194,mqenc
195,k -= mqenc->ctreg
196,k
197,mqenc->ctreg
198,mqenc
199,ctreg
200,if (mqenc->outbuf != 0xff)
201,mqenc->outbuf != 0xff
202,mqenc->outbuf
203,mqenc
204,outbuf
205,0xff
206,<empty>
207,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
208,mqenc->areg
209,mqenc
210,areg
211,mqenc->creg
212,mqenc
213,creg
214,mqenc->ctreg
215,mqenc
216,ctreg
217,mqenc
218,break;
219,case JPC_MQENC_DEFTERM:
220,JPC_MQENC_DEFTERM
221,jpc_mqenc_setbits(mqenc)
222,mqenc
223,mqenc->creg <<= mqenc->ctreg
224,mqenc->creg
225,mqenc
226,creg
227,mqenc->ctreg
228,mqenc
229,ctreg
230,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
231,mqenc->areg
232,mqenc
233,areg
234,mqenc->creg
235,mqenc
236,creg
237,mqenc->ctreg
238,mqenc
239,ctreg
240,mqenc
241,mqenc->creg <<= mqenc->ctreg
242,mqenc->creg
243,mqenc
244,creg
245,mqenc->ctreg
246,mqenc
247,ctreg
248,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
249,mqenc->areg
250,mqenc
251,areg
252,mqenc->creg
253,mqenc
254,creg
255,mqenc->ctreg
256,mqenc
257,ctreg
258,mqenc
259,if (mqenc->outbuf != 0xff)
260,mqenc->outbuf != 0xff
261,mqenc->outbuf
262,mqenc
263,outbuf
264,0xff
265,<empty>
266,jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc)
267,mqenc->areg
268,mqenc
269,areg
270,mqenc->creg
271,mqenc
272,creg
273,mqenc->ctreg
274,mqenc
275,ctreg
276,mqenc
277,break;
278,default:
279,abort()
280,break;
281,return 0;
282,0
283,RET
284,jpc_mqenc_t *mqenc
285,int termmode
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
int jpc_mqenc_flush(jpc_mqenc_t *mqenc, int termmode) {
int_fast16_t k;
switch(termmode)
jpc_mqenc_setbits(mqenc);
mqenc->creg <<= mqenc->ctreg;
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
mqenc->creg <<= mqenc->ctreg;
jpc_mqenc_byteout(mqenc->areg, mqenc->creg, mqenc->ctreg, mqenc);
return 0;
=======================
