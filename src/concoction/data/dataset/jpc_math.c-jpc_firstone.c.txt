-----label-----
0
-----code-----
int jpc_firstone(int x)
{
	int n;

	/* The argument must be nonnegative. */
	assert(x >= 0);

	n = -1;
	while (x > 0) {
		x >>= 1;
		++n;
	}
	return n;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
10,11
11,12
11,13
13,14
15,16
16,17
16,18
17,18
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
29,30
29,31
30,31
30,32
31,32
34,35
34,36
35,36
36,37
36,38
37,38
40,41
41,42
42,43
44,45
45,46
-----nextToken-----
2,4,6,8,12,14,18,21,22,26,28,32,33,38,39,43,46
-----computeFrom-----
19,20
19,21
24,25
24,26
30,31
30,32
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int jpc_firstone(int x){	int n;	/* The argument must be nonnegative. */	assert(x >= 0);	n = -1;	while (x > 0) {		x >>= 1;		++n;	}	return n;}
int
jpc_firstone(int x)
jpc_firstone
int x
int
x
x
{	int n;	/* The argument must be nonnegative. */	assert(x >= 0);	n = -1;	while (x > 0) {		x >>= 1;		++n;	}	return n;}
int n;
int n;
int
n
n
assert(x >= 0);
assert(x >= 0)
assert
assert
x >= 0
x
x
0
n = -1;
n = -1
n
n
-1
1
while (x > 0) {		x >>= 1;		++n;	}
x > 0
x
x
0
{		x >>= 1;		++n;	}
x >>= 1;
x >>= 1
x
x
1
++n;
++n
n
n
return n;
n
n
-----joern-----
(10,14,0)
(15,14,0)
(6,18,0)
(5,11,0)
(3,3,0)
(4,22,0)
(14,15,0)
(11,3,0)
(19,11,0)
(11,16,0)
(20,18,0)
(9,22,0)
(12,9,0)
(18,22,0)
(8,3,0)
(1,12,0)
(3,17,0)
(18,9,0)
(21,3,0)
(0,9,0)
(2,22,0)
(12,17,0)
(15,22,0)
(3,16,0)
(14,16,0)
(7,9,0)
(13,14,0)
(19,5,1)
(3,3,1)
(9,7,1)
(20,18,1)
(14,10,1)
(3,21,1)
(12,1,1)
(11,3,1)
(0,15,1)
(7,0,1)
(18,9,1)
(15,14,1)
(5,9,1)
(21,8,1)
(12,9,1)
(11,16,1)
(14,16,1)
(8,11,1)
(18,6,1)
(11,19,1)
(1,3,1)
(3,16,1)
(10,13,1)
(5,12,1)
(6,11,1)
(12,11,2)
(8,11,2)
(11,3,2)
(11,11,2)
(1,11,2)
(5,11,2)
(18,9,2)
(11,16,2)
(12,9,2)
(21,11,2)
(20,18,2)
(3,3,2)
(14,16,2)
(15,14,2)
(19,11,2)
(3,11,2)
(3,16,2)
-----------------------------------
(0,y)
(1,y)
(2,y)
(3,x >>= 1)
(4,while (x > 1)
(5,x)
(6,y)
(7,0)
(8,x)
(9,y = 0)
(10,0)
(11,x > 1)
(12,++y)
(13,x)
(14,x > 0)
(15,assert(x > 0)
(16,int x)
(17,)
(18,return y;)
(19,1)
(20,RET)
(21,1)
(22,)
-----cfg-----
(17,15)
(20,24)
(20,29)
(7,12)
(24,27)
(11,17)
(27,20)
(12,11)
(29,31)
(15,20)
-----path-----
7,12,11,17,15,20,24,27,20,29,31
7,12,11,17,15,20,29,31
-----cfgNode-----
5,<global>
6,<empty>
7,int jpc_firstone (int x)
8,int x
9,<empty>
10,int n
11,assert(x >= 0)
12,x >= 0
13,x
14,0
15,n = -1
16,n
17,-1
18,1
19,while (x > 0)
20,x > 0
21,x
22,0
23,<empty>
24,x >>= 1
25,x
26,1
27,++n
28,n
29,return n;
30,n
31,RET
32,int x
33,RET
34,int jpc_firstone (int x)
35,int x
36,<empty>
37,int n
38,assert(x >= 0)
39,x >= 0
40,x
41,0
42,n = -1
43,n
44,-1
45,1
46,while (x > 0)
47,x > 0
48,x
49,0
50,<empty>
51,x >>= 1
52,x
53,1
54,++n
55,n
56,return n;
57,n
58,RET
59,int x
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
int jpc_firstone(int x) {
int n;
assert(x >= 0);
n = -1;
while(x > 0)
x >>= 1;
++n;
return n;
=======================
