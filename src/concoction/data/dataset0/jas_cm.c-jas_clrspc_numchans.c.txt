-----label-----
0
-----code-----
int jas_clrspc_numchans(int clrspc)
{
	switch (jas_clrspc_fam(clrspc)) {
	case JAS_CLRSPC_FAM_XYZ:
	case JAS_CLRSPC_FAM_LAB:
	case JAS_CLRSPC_FAM_RGB:
	case JAS_CLRSPC_FAM_YCBCR:
		return 3;
		break;
	case JAS_CLRSPC_FAM_GRAY:
		return 1;
		break;
	default:
		abort();
		break;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
11,13
12,13
14,15
16,17
16,18
16,19
16,20
16,21
16,22
16,23
16,24
16,25
16,26
16,27
16,28
17,18
18,19
20,21
21,22
23,24
24,25
26,27
27,28
29,30
32,33
33,34
35,36
39,40
40,41
41,42
-----nextToken-----
2,4,6,8,13,15,19,22,25,28,30,31,34,36,37,38,42,43
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;SwitchStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;LiteralExpression;BreakStatement;CaseStatement;IdExpression;Name;ReturnStatement;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BreakStatement;
-----ast_node-----
int jas_clrspc_numchans(int clrspc){	switch (jas_clrspc_fam(clrspc)) {	case JAS_CLRSPC_FAM_XYZ:	case JAS_CLRSPC_FAM_LAB:	case JAS_CLRSPC_FAM_RGB:	case JAS_CLRSPC_FAM_YCBCR:		return 3;		break;	case JAS_CLRSPC_FAM_GRAY:		return 1;		break;	default:		abort();		break;	}}
int
jas_clrspc_numchans(int clrspc)
jas_clrspc_numchans
int clrspc
int
clrspc
clrspc
{	switch (jas_clrspc_fam(clrspc)) {	case JAS_CLRSPC_FAM_XYZ:	case JAS_CLRSPC_FAM_LAB:	case JAS_CLRSPC_FAM_RGB:	case JAS_CLRSPC_FAM_YCBCR:		return 3;		break;	case JAS_CLRSPC_FAM_GRAY:		return 1;		break;	default:		abort();		break;	}}
switch (jas_clrspc_fam(clrspc)) {	case JAS_CLRSPC_FAM_XYZ:	case JAS_CLRSPC_FAM_LAB:	case JAS_CLRSPC_FAM_RGB:	case JAS_CLRSPC_FAM_YCBCR:		return 3;		break;	case JAS_CLRSPC_FAM_GRAY:		return 1;		break;	default:		abort();		break;	}
jas_clrspc_fam(clrspc)
jas_clrspc_fam
jas_clrspc_fam
clrspc
clrspc
{	case JAS_CLRSPC_FAM_XYZ:	case JAS_CLRSPC_FAM_LAB:	case JAS_CLRSPC_FAM_RGB:	case JAS_CLRSPC_FAM_YCBCR:		return 3;		break;	case JAS_CLRSPC_FAM_GRAY:		return 1;		break;	default:		abort();		break;	}
case JAS_CLRSPC_FAM_XYZ:
JAS_CLRSPC_FAM_XYZ
JAS_CLRSPC_FAM_XYZ
case JAS_CLRSPC_FAM_LAB:
JAS_CLRSPC_FAM_LAB
JAS_CLRSPC_FAM_LAB
case JAS_CLRSPC_FAM_RGB:
JAS_CLRSPC_FAM_RGB
JAS_CLRSPC_FAM_RGB
case JAS_CLRSPC_FAM_YCBCR:
JAS_CLRSPC_FAM_YCBCR
JAS_CLRSPC_FAM_YCBCR
return 3;
3
break;
case JAS_CLRSPC_FAM_GRAY:
JAS_CLRSPC_FAM_GRAY
JAS_CLRSPC_FAM_GRAY
return 1;
1
break;
default:
abort();
abort()
abort
abort
break;
-----joern-----
(13,1,0)
(2,1,0)
(4,15,0)
(11,0,0)
(14,2,0)
(12,3,0)
(9,16,0)
(19,13,0)
(6,15,0)
(2,12,0)
(15,16,0)
(8,0,0)
(12,2,0)
(17,8,0)
(0,3,0)
(8,1,0)
(21,6,0)
(20,13,0)
(5,6,0)
(7,8,0)
(10,2,0)
(6,1,0)
(20,19,1)
(8,7,1)
(0,11,1)
(8,1,1)
(4,6,1)
(12,2,1)
(17,12,1)
(18,15,1)
(6,1,1)
(11,8,1)
(13,1,1)
(7,17,1)
(21,5,1)
(6,21,1)
(13,20,1)
(14,13,1)
(15,4,1)
(10,14,1)
(2,1,1)
(2,10,1)
(5,0,1)
(5,13,1)
(2,13,2)
(11,13,2)
(8,1,2)
(13,1,2)
(12,2,2)
(8,13,2)
(0,13,2)
(14,13,2)
(10,13,2)
(12,13,2)
(17,13,2)
(2,1,2)
(7,13,2)
(6,1,2)
-----------------------------------
(0,lut->data = 0)
(1,jas_cmshapmatlut_t *lut)
(2,lut->data)
(3,)
(4,0)
(5,lut)
(6,lut->size)
(7,data)
(8,lut->data)
(9,if (lut->data)
(10,data)
(11,0)
(12,jas_free(lut->data)
(13,lut->data)
(14,lut)
(15,lut->size = 0)
(16,)
(17,lut)
(18,RET)
(19,lut)
(20,data)
(21,size)
-----cfg-----
(22,33)
(7,11)
(11,22)
(11,27)
(11,31)
(27,33)
(31,33)
-----path-----
7,11,22,33
7,11,27,33
7,11,31,33
-----cfgNode-----
5,<global>
6,<empty>
7,int jas_clrspc_numchans (int clrspc)
8,int clrspc
9,<empty>
10,switch(jas_clrspc_fam(clrspc))
11,jas_clrspc_fam(clrspc)
12,clrspc
13,<empty>
14,case JAS_CLRSPC_FAM_XYZ:
15,JAS_CLRSPC_FAM_XYZ
16,case JAS_CLRSPC_FAM_LAB:
17,JAS_CLRSPC_FAM_LAB
18,case JAS_CLRSPC_FAM_RGB:
19,JAS_CLRSPC_FAM_RGB
20,case JAS_CLRSPC_FAM_YCBCR:
21,JAS_CLRSPC_FAM_YCBCR
22,return 3;
23,3
24,break;
25,case JAS_CLRSPC_FAM_GRAY:
26,JAS_CLRSPC_FAM_GRAY
27,return 1;
28,1
29,break;
30,default:
31,abort()
32,break;
33,RET
34,int clrspc
35,RET
36,int jas_clrspc_numchans (int clrspc)
37,int clrspc
38,<empty>
39,switch(jas_clrspc_fam(clrspc))
40,jas_clrspc_fam(clrspc)
41,clrspc
42,<empty>
43,case JAS_CLRSPC_FAM_XYZ:
44,JAS_CLRSPC_FAM_XYZ
45,case JAS_CLRSPC_FAM_LAB:
46,JAS_CLRSPC_FAM_LAB
47,case JAS_CLRSPC_FAM_RGB:
48,JAS_CLRSPC_FAM_RGB
49,case JAS_CLRSPC_FAM_YCBCR:
50,JAS_CLRSPC_FAM_YCBCR
51,return 3;
52,3
53,break;
54,case JAS_CLRSPC_FAM_GRAY:
55,JAS_CLRSPC_FAM_GRAY
56,return 1;
57,1
58,break;
59,default:
60,abort()
61,break;
62,RET
63,int clrspc
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
int jas_clrspc_numchans(int clrspc) {
switch(jas_clrspc_fam(clrspc))
return 3;
=======================
