-----label-----
0
-----code-----
static int jas_cmshapmatlut_set(jas_cmshapmatlut_t *lut, jas_icccurv_t *curv)
{
	jas_cmreal_t gamma;
	int i;
	gamma = 0;
	jas_cmshapmatlut_cleanup(lut);
	if (curv->numents == 0) {
		lut->size = 2;
		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
			goto error;
		lut->data[0] = 0.0;
		lut->data[1] = 1.0;
	} else if (curv->numents == 1) {
		lut->size = 256;
		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
			goto error;
		gamma = curv->ents[0] / 256.0;
		for (i = 0; i < lut->size; ++i) {
			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);
		}
	} else {
		lut->size = curv->numents;
		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
			goto error;
		for (i = 0; i < lut->size; ++i) {
			lut->data[i] = curv->ents[i] / 65535.0;
		}
	}
	return 0;
error:
	return -1;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
34,35
35,36
35,37
36,37
38,39
40,41
40,42
40,43
41,42
41,43
42,43
42,44
43,44
47,48
47,49
47,50
47,51
48,49
49,50
49,51
50,51
50,52
51,52
55,56
55,57
56,57
57,58
58,59
58,60
59,60
59,61
60,61
63,64
63,65
64,65
66,67
66,68
67,68
67,69
68,69
71,72
72,73
72,74
73,74
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
87,88
88,89
88,90
89,90
89,91
90,91
90,92
91,92
96,97
96,98
96,99
97,98
97,99
98,99
98,100
99,100
103,104
103,105
103,106
103,107
104,105
105,106
105,107
106,107
106,108
107,108
111,112
111,113
112,113
113,114
114,115
114,116
115,116
115,117
116,117
119,120
119,121
120,121
122,123
122,124
123,124
123,125
124,125
127,128
128,129
128,130
129,130
132,133
134,135
135,136
135,137
136,137
138,139
138,140
139,140
139,141
140,141
140,142
141,142
146,147
146,148
146,149
146,150
147,148
148,149
148,150
149,150
152,153
152,154
153,154
155,156
155,157
156,157
159,160
160,161
162,163
163,164
164,165
164,166
165,166
165,167
166,167
166,168
167,168
170,171
172,173
172,174
172,175
173,174
175,176
175,177
176,177
178,179
178,180
179,180
179,181
182,183
183,184
183,185
184,185
184,186
185,186
189,190
191,192
191,193
191,194
192,193
193,194
193,195
194,195
194,196
195,196
198,199
198,200
199,200
202,203
202,204
203,204
204,205
205,206
205,207
206,207
206,208
207,208
210,211
210,212
211,212
213,214
213,215
214,215
214,216
215,216
218,219
219,220
219,221
220,221
223,224
225,226
225,227
225,228
225,229
226,227
227,228
227,229
228,229
231,232
231,233
232,233
234,235
234,236
235,236
238,239
239,240
241,242
242,243
243,244
243,245
244,245
244,246
245,246
245,247
246,247
249,250
251,252
251,253
252,253
252,254
253,254
253,255
254,255
257,258
260,261
262,263
262,264
264,265
265,266
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,26,28,32,33,37,39,44,45,46,52,53,54,61,62,65,69,70,74,75,77,83,84,85,86,92,93,94,95,100,101,102,108,109,110,117,118,121,125,126,130,131,133,137,142,143,144,145,150,151,154,157,158,161,168,169,171,174,177,180,181,186,187,188,190,196,197,200,201,208,209,212,216,217,221,222,224,229,230,233,236,237,240,247,248,250,255,256,258,259,261,263,266
-----computeFrom-----
30,31
30,32
41,42
41,43
49,50
49,51
58,59
58,60
66,67
66,68
79,80
79,81
88,89
88,90
97,98
97,99
105,106
105,107
114,115
114,116
122,123
122,124
135,136
135,137
138,139
138,140
148,149
148,150
152,153
152,154
164,165
164,166
175,176
175,177
183,184
183,185
193,194
193,195
205,206
205,207
213,214
213,215
227,228
227,229
231,232
231,233
243,244
243,245
251,252
251,253
-----guardedBy-----
100,142
-----guardedByNegation-----
44,255
45,201
100,255
101,201
-----lastLexicalUse-----
100,255
-----jump-----
100,255
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;GotoStatement;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;GotoStatement;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;LabelStatement;Name;ReturnStatement;UnaryExpression;LiteralExpression;
-----ast_node-----
static int jas_cmshapmatlut_set(jas_cmshapmatlut_t *lut, jas_icccurv_t *curv){	jas_cmreal_t gamma;	int i;	gamma = 0;	jas_cmshapmatlut_cleanup(lut);	if (curv->numents == 0) {		lut->size = 2;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		lut->data[0] = 0.0;		lut->data[1] = 1.0;	} else if (curv->numents == 1) {		lut->size = 256;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		gamma = curv->ents[0] / 256.0;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}	} else {		lut->size = curv->numents;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}	}	return 0;error:	return -1;}
static int
jas_cmshapmatlut_set(jas_cmshapmatlut_t *lut, jas_icccurv_t *curv)
jas_cmshapmatlut_set
jas_cmshapmatlut_t *lut
jas_cmshapmatlut_t
jas_cmshapmatlut_t
*lut
*
lut
jas_icccurv_t *curv
jas_icccurv_t
jas_icccurv_t
*curv
*
curv
{	jas_cmreal_t gamma;	int i;	gamma = 0;	jas_cmshapmatlut_cleanup(lut);	if (curv->numents == 0) {		lut->size = 2;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		lut->data[0] = 0.0;		lut->data[1] = 1.0;	} else if (curv->numents == 1) {		lut->size = 256;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		gamma = curv->ents[0] / 256.0;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}	} else {		lut->size = curv->numents;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}	}	return 0;error:	return -1;}
jas_cmreal_t gamma;
jas_cmreal_t gamma;
jas_cmreal_t
jas_cmreal_t
gamma
gamma
int i;
int i;
int
i
i
gamma = 0;
gamma = 0
gamma
gamma
0
jas_cmshapmatlut_cleanup(lut);
jas_cmshapmatlut_cleanup(lut)
jas_cmshapmatlut_cleanup
jas_cmshapmatlut_cleanup
lut
lut
if (curv->numents == 0) {		lut->size = 2;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		lut->data[0] = 0.0;		lut->data[1] = 1.0;	} else if (curv->numents == 1) {		lut->size = 256;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		gamma = curv->ents[0] / 256.0;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}	} else {		lut->size = curv->numents;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}	}
curv->numents == 0
curv->numents
curv
curv
numents
0
{		lut->size = 2;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		lut->data[0] = 0.0;		lut->data[1] = 1.0;	}
lut->size = 2;
lut->size = 2
lut->size
lut
lut
size
2
if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;
!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
lut->data
lut
lut
data
jas_malloc(lut->size * sizeof(jas_cmreal_t))
jas_malloc
jas_malloc
lut->size * sizeof(jas_cmreal_t)
lut->size
lut
lut
size
sizeof(jas_cmreal_t)
jas_cmreal_t
jas_cmreal_t
jas_cmreal_t

goto error;
error
lut->data[0] = 0.0;
lut->data[0] = 0.0
lut->data[0]
lut->data
lut
lut
data
0
0.0
lut->data[1] = 1.0;
lut->data[1] = 1.0
lut->data[1]
lut->data
lut
lut
data
1
1.0
if (curv->numents == 1) {		lut->size = 256;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		gamma = curv->ents[0] / 256.0;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}	} else {		lut->size = curv->numents;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}	}
curv->numents == 1
curv->numents
curv
curv
numents
1
{		lut->size = 256;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		gamma = curv->ents[0] / 256.0;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}	}
lut->size = 256;
lut->size = 256
lut->size
lut
lut
size
256
if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;
!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
lut->data
lut
lut
data
jas_malloc(lut->size * sizeof(jas_cmreal_t))
jas_malloc
jas_malloc
lut->size * sizeof(jas_cmreal_t)
lut->size
lut
lut
size
sizeof(jas_cmreal_t)
jas_cmreal_t
jas_cmreal_t
jas_cmreal_t

goto error;
error
gamma = curv->ents[0] / 256.0;
gamma = curv->ents[0] / 256.0
gamma
gamma
curv->ents[0] / 256.0
curv->ents[0]
curv->ents
curv
curv
ents
0
256.0
for (i = 0; i < lut->size; ++i) {			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}
i = 0;
i = 0
i
i
0
i < lut->size
i
i
lut->size
lut
lut
size
++i
i
i
{			lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);		}
lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma);
lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma)
lut->data[i]
lut->data
lut
lut
data
i
i
gammafn(i / (double) (lut->size - 1), gamma)
gammafn
gammafn
i / (double) (lut->size - 1)
i
i
(double) (lut->size - 1)
double
double

(lut->size - 1)
lut->size - 1
lut->size
lut
lut
size
1
gamma
gamma
{		lut->size = curv->numents;		if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;		for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}	}
lut->size = curv->numents;
lut->size = curv->numents
lut->size
lut
lut
size
curv->numents
curv
curv
numents
if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))			goto error;
!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
lut->data
lut
lut
data
jas_malloc(lut->size * sizeof(jas_cmreal_t))
jas_malloc
jas_malloc
lut->size * sizeof(jas_cmreal_t)
lut->size
lut
lut
size
sizeof(jas_cmreal_t)
jas_cmreal_t
jas_cmreal_t
jas_cmreal_t

goto error;
error
for (i = 0; i < lut->size; ++i) {			lut->data[i] = curv->ents[i] / 65535.0;		}
i = 0;
i = 0
i
i
0
i < lut->size
i
i
lut->size
lut
lut
size
++i
i
i
{			lut->data[i] = curv->ents[i] / 65535.0;		}
lut->data[i] = curv->ents[i] / 65535.0;
lut->data[i] = curv->ents[i] / 65535.0
lut->data[i]
lut->data
lut
lut
data
i
i
curv->ents[i] / 65535.0
curv->ents[i]
curv->ents
curv
curv
ents
i
i
65535.0
return 0;
0
error:	return -1;
error
return -1;
-1
1
-----joern-----
(13,1,0)
(2,1,0)
(4,15,0)
(11,0,0)
(14,2,0)
(12,3,0)
(9,16,0)
(19,13,0)
(6,15,0)
(2,12,0)
(15,16,0)
(8,0,0)
(12,2,0)
(17,8,0)
(0,3,0)
(8,1,0)
(21,6,0)
(20,13,0)
(5,6,0)
(7,8,0)
(10,2,0)
(6,1,0)
(20,19,1)
(8,7,1)
(0,11,1)
(8,1,1)
(4,6,1)
(12,2,1)
(17,12,1)
(18,15,1)
(6,1,1)
(11,8,1)
(13,1,1)
(7,17,1)
(21,5,1)
(6,21,1)
(13,20,1)
(14,13,1)
(15,4,1)
(10,14,1)
(2,1,1)
(2,10,1)
(5,0,1)
(5,13,1)
(2,13,2)
(11,13,2)
(8,1,2)
(13,1,2)
(12,2,2)
(8,13,2)
(0,13,2)
(14,13,2)
(10,13,2)
(12,13,2)
(17,13,2)
(2,1,2)
(7,13,2)
(6,1,2)
-----------------------------------
(0,lut->data = 0)
(1,jas_cmshapmatlut_t *lut)
(2,lut->data)
(3,)
(4,0)
(5,lut)
(6,lut->size)
(7,data)
(8,lut->data)
(9,if (lut->data)
(10,data)
(11,0)
(12,jas_free(lut->data)
(13,lut->data)
(14,lut)
(15,lut->size = 0)
(16,)
(17,lut)
(18,RET)
(19,lut)
(20,data)
(21,size)
-----cfg-----
(129,141)
(130,135)
(132,130)
(133,129)
(135,133)
(7,13)
(137,181)
(137,153)
(138,137)
(139,146)
(13,16)
(141,139)
(142,138)
(143,142)
(16,22)
(144,147)
(146,144)
(19,28)
(19,65)
(147,143)
(20,19)
(22,20)
(25,35)
(153,160)
(26,25)
(28,26)
(156,168)
(156,177)
(158,156)
(31,181)
(31,49)
(32,31)
(160,158)
(33,40)
(161,160)
(35,33)
(36,32)
(164,161)
(37,36)
(165,174)
(38,41)
(166,165)
(40,38)
(168,166)
(41,37)
(170,164)
(171,170)
(172,171)
(45,56)
(46,45)
(174,172)
(47,46)
(177,183)
(49,47)
(180,183)
(52,177)
(181,180)
(53,52)
(54,53)
(56,54)
(62,71)
(62,132)
(63,62)
(65,63)
(68,78)
(69,68)
(71,69)
(74,181)
(74,94)
(75,74)
(76,83)
(78,76)
(79,75)
(80,79)
(81,84)
(83,81)
(84,80)
(88,99)
(90,88)
(91,90)
(92,91)
(94,92)
(99,106)
(102,114)
(102,177)
(104,102)
(106,104)
(107,106)
(110,107)
(111,120)
(112,111)
(114,112)
(116,110)
(117,116)
(119,117)
(120,124)
(121,119)
(122,121)
(124,122)
-----path-----
7,13,16,22,20,19,28,26,25,35,33,40,38,41,37,36,32,31,181,180,183
7,13,16,22,20,19,28,26,25,35,33,40,38,41,37,36,32,31,49,47,46,45,56,54,53,52,177,183
7,13,16,22,20,19,65,63,62,71,69,68,78,76,83,81,84,80,79,75,74,181,180,183
7,13,16,22,20,19,65,63,62,71,69,68,78,76,83,81,84,80,79,75,74,94,92,91,90,88,99,106,104,102,177,183
7,13,16,22,20,19,65,63,62,132,130,135,133,129,141,139,146,144,147,143,142,138,137,181,180,183
7,13,16,22,20,19,65,63,62,132,130,135,133,129,141,139,146,144,147,143,142,138,137,153,160,158,156,177,183
-----cfgNode-----
5,<global>
6,<empty>
7,int jas_cmshapmatlut_set (jas_cmshapmatlut_t *lut,jas_icccurv_t *curv)
8,jas_cmshapmatlut_t *lut
9,jas_icccurv_t *curv
10,<empty>
11,jas_cmreal_t gamma
12,int i
13,gamma = 0
14,gamma
15,0
16,jas_cmshapmatlut_cleanup(lut)
17,lut
18,if (curv->numents == 0)
19,curv->numents == 0
20,curv->numents
21,curv
22,numents
23,0
24,<empty>
25,lut->size = 2
26,lut->size
27,lut
28,size
29,2
30,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
31,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
32,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
33,lut->data
34,lut
35,data
36,jas_malloc(lut->size * sizeof(jas_cmreal_t))
37,lut->size * sizeof(jas_cmreal_t)
38,lut->size
39,lut
40,size
41,sizeof(jas_cmreal_t)
42,jas_cmreal_t
43,<empty>
44,goto error;
45,lut->data[0] = 0.0
46,lut->data[0]
47,lut->data
48,lut
49,data
50,0
51,0.0
52,lut->data[1] = 1.0
53,lut->data[1]
54,lut->data
55,lut
56,data
57,1
58,1.0
59,else
60,<empty>
61,if (curv->numents == 1)
62,curv->numents == 1
63,curv->numents
64,curv
65,numents
66,1
67,<empty>
68,lut->size = 256
69,lut->size
70,lut
71,size
72,256
73,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
74,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
75,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
76,lut->data
77,lut
78,data
79,jas_malloc(lut->size * sizeof(jas_cmreal_t))
80,lut->size * sizeof(jas_cmreal_t)
81,lut->size
82,lut
83,size
84,sizeof(jas_cmreal_t)
85,jas_cmreal_t
86,<empty>
87,goto error;
88,gamma = curv->ents[0] / 256.0
89,gamma
90,curv->ents[0] / 256.0
91,curv->ents[0]
92,curv->ents
93,curv
94,ents
95,0
96,256.0
97,for (i = 0;i < lut->size;++i)
98,<empty>
99,i = 0
100,i
101,0
102,i < lut->size
103,i
104,lut->size
105,lut
106,size
107,++i
108,i
109,<empty>
110,lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma)
111,lut->data[i]
112,lut->data
113,lut
114,data
115,i
116,gammafn(i / (double) (lut->size - 1), gamma)
117,i / (double) (lut->size - 1)
118,i
119,(double) (lut->size - 1)
120,double
121,lut->size - 1
122,lut->size
123,lut
124,size
125,1
126,gamma
127,else
128,<empty>
129,lut->size = curv->numents
130,lut->size
131,lut
132,size
133,curv->numents
134,curv
135,numents
136,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
137,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
138,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
139,lut->data
140,lut
141,data
142,jas_malloc(lut->size * sizeof(jas_cmreal_t))
143,lut->size * sizeof(jas_cmreal_t)
144,lut->size
145,lut
146,size
147,sizeof(jas_cmreal_t)
148,jas_cmreal_t
149,<empty>
150,goto error;
151,for (i = 0;i < lut->size;++i)
152,<empty>
153,i = 0
154,i
155,0
156,i < lut->size
157,i
158,lut->size
159,lut
160,size
161,++i
162,i
163,<empty>
164,lut->data[i] = curv->ents[i] / 65535.0
165,lut->data[i]
166,lut->data
167,lut
168,data
169,i
170,curv->ents[i] / 65535.0
171,curv->ents[i]
172,curv->ents
173,curv
174,ents
175,i
176,65535.0
177,return 0;
178,0
179,error:
180,	return -1;
181,return -1;
182,-1
183,1
184,RET
185,jas_cmshapmatlut_t *lut
186,jas_icccurv_t *curv
187,RET
188,int jas_cmshapmatlut_set (jas_cmshapmatlut_t *lut,jas_icccurv_t *curv)
189,jas_cmshapmatlut_t *lut
190,jas_icccurv_t *curv
191,<empty>
192,jas_cmreal_t gamma
193,int i
194,gamma = 0
195,gamma
196,0
197,jas_cmshapmatlut_cleanup(lut)
198,lut
199,if (curv->numents == 0)
200,curv->numents == 0
201,curv->numents
202,curv
203,numents
204,0
205,<empty>
206,lut->size = 2
207,lut->size
208,lut
209,size
210,2
211,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
212,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
213,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
214,lut->data
215,lut
216,data
217,jas_malloc(lut->size * sizeof(jas_cmreal_t))
218,lut->size * sizeof(jas_cmreal_t)
219,lut->size
220,lut
221,size
222,sizeof(jas_cmreal_t)
223,jas_cmreal_t
224,<empty>
225,goto error;
226,lut->data[0] = 0.0
227,lut->data[0]
228,lut->data
229,lut
230,data
231,0
232,0.0
233,lut->data[1] = 1.0
234,lut->data[1]
235,lut->data
236,lut
237,data
238,1
239,1.0
240,else
241,<empty>
242,if (curv->numents == 1)
243,curv->numents == 1
244,curv->numents
245,curv
246,numents
247,1
248,<empty>
249,lut->size = 256
250,lut->size
251,lut
252,size
253,256
254,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
255,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
256,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
257,lut->data
258,lut
259,data
260,jas_malloc(lut->size * sizeof(jas_cmreal_t))
261,lut->size * sizeof(jas_cmreal_t)
262,lut->size
263,lut
264,size
265,sizeof(jas_cmreal_t)
266,jas_cmreal_t
267,<empty>
268,goto error;
269,gamma = curv->ents[0] / 256.0
270,gamma
271,curv->ents[0] / 256.0
272,curv->ents[0]
273,curv->ents
274,curv
275,ents
276,0
277,256.0
278,for (i = 0;i < lut->size;++i)
279,<empty>
280,i = 0
281,i
282,0
283,i < lut->size
284,i
285,lut->size
286,lut
287,size
288,++i
289,i
290,<empty>
291,lut->data[i] = gammafn(i / (double) (lut->size - 1), gamma)
292,lut->data[i]
293,lut->data
294,lut
295,data
296,i
297,gammafn(i / (double) (lut->size - 1), gamma)
298,i / (double) (lut->size - 1)
299,i
300,(double) (lut->size - 1)
301,double
302,lut->size - 1
303,lut->size
304,lut
305,size
306,1
307,gamma
308,else
309,<empty>
310,lut->size = curv->numents
311,lut->size
312,lut
313,size
314,curv->numents
315,curv
316,numents
317,if (!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))))
318,!(lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t)))
319,lut->data = jas_malloc(lut->size * sizeof(jas_cmreal_t))
320,lut->data
321,lut
322,data
323,jas_malloc(lut->size * sizeof(jas_cmreal_t))
324,lut->size * sizeof(jas_cmreal_t)
325,lut->size
326,lut
327,size
328,sizeof(jas_cmreal_t)
329,jas_cmreal_t
330,<empty>
331,goto error;
332,for (i = 0;i < lut->size;++i)
333,<empty>
334,i = 0
335,i
336,0
337,i < lut->size
338,i
339,lut->size
340,lut
341,size
342,++i
343,i
344,<empty>
345,lut->data[i] = curv->ents[i] / 65535.0
346,lut->data[i]
347,lut->data
348,lut
349,data
350,i
351,curv->ents[i] / 65535.0
352,curv->ents[i]
353,curv->ents
354,curv
355,ents
356,i
357,65535.0
358,return 0;
359,0
360,error:
361,	return -1;
362,return -1;
363,-1
364,1
365,RET
366,jas_cmshapmatlut_t *lut
367,jas_icccurv_t *curv
=====================================
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0xa20000000000000010101010101002100100000000000000a48100000000000000000000101010100000000000000000101010101010101000100000000000001010101010101010c5490a6500000000101010101010101099c4096500000000101010101010101099c40965000000001010101010101010101010101010101010101010101010101010101010101010
A-data:0x503337230a0930230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a230a31370c0c30303123000a0c000c23
=========trace=========
static int jas_cmshapmatlut_set(jas_cmshapmatlut_t *lut, jas_icccurv_t *curv) {
jas_cmreal_t gamma;
int i;
gamma = 0;
jas_cmshapmatlut_cleanup(lut);
lut->size = curv->numents;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
for(i = 0;i < lut->size;++i)
lut->data[i] = curv->ents[i] / 65535.0;
return 0;
=======================
