-----label-----
1
-----code-----
void *jas_malloc(size_t size)
{
#if defined(MEMALLOC_ALIGN2)
	void *ptr;
abort();
	if (posix_memalign(&ptr, MEMALLOC_ALIGNMENT, size)) {
		return 0;
	}
	return ptr;
#endif
	return malloc(size);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
7,8
9,10
11,12
12,13
13,14
13,15
14,15
16,17
-----nextToken-----
2,4,5,8,10,15,17
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void *jas_malloc(size_t size){#if defined(MEMALLOC_ALIGN2)	void *ptr;abort();	if (posix_memalign(&ptr, MEMALLOC_ALIGNMENT, size)) {		return 0;	}	return ptr;#endif	return malloc(size);}
void
*jas_malloc(size_t size)
*
jas_malloc
size_t size
size_t
size_t
size
size
{#if defined(MEMALLOC_ALIGN2)	void *ptr;abort();	if (posix_memalign(&ptr, MEMALLOC_ALIGNMENT, size)) {		return 0;	}	return ptr;#endif	return malloc(size);}
return malloc(size);
malloc(size)
malloc
malloc
size
size
-----joern-----
(7,13,0)
(14,7,0)
(6,16,0)
(7,18,0)
(0,15,0)
(12,17,0)
(9,0,0)
(4,5,0)
(2,17,0)
(4,16,0)
(8,7,0)
(15,17,0)
(10,18,0)
(18,7,0)
(4,15,0)
(5,3,0)
(11,17,0)
(16,17,0)
(1,5,0)
(0,13,0)
(15,0,1)
(6,7,1)
(7,13,1)
(7,18,1)
(4,15,1)
(0,9,1)
(7,8,1)
(5,1,1)
(18,10,1)
(4,5,1)
(10,12,1)
(16,6,1)
(1,7,1)
(4,16,1)
(14,18,1)
(0,13,1)
(8,14,1)
(4,5,2)
(7,13,2)
(4,16,2)
(4,15,2)
(5,7,2)
(6,7,2)
(16,7,2)
(7,18,2)
(1,7,2)
(0,13,2)
-----------------------------------
(0,malloc(size)
(1,0)
(2,if (posix_memalign(&ptr, MEMALLOC_ALIGNMENT, size)
(3,)
(4,RET)
(5,return 0;)
(6,ptr)
(7,posix_memalign(&ptr, MEMALLOC_ALIGNMENT, size)
(8,size)
(9,size)
(10,ptr)
(11,ptr)
(12,abort()
(13,size_t size)
(14,MEMALLOC_ALIGNMENT)
(15,return malloc(size)
(16,return ptr;)
(17,)
(18,&ptr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000000040000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffff32faa66300000000ffffffffffffffff32faa66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5f00090100ffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
void *jas_malloc(size_t size) {
return malloc(size);
=======================
