-----label-----
1
-----code-----
void*
_TIFFCheckRealloc(TIFF* tif, void* buffer,
		  tmsize_t nmemb, tmsize_t elem_size, const char* what)
{
	void* cp = NULL;
	tmsize_t bytes = nmemb * elem_size;

	/*
	 * XXX: Check for integer overflow.
	 */
	if (nmemb && elem_size && bytes / elem_size == nmemb)
		cp = _TIFFrealloc(buffer, bytes);

	if (cp == NULL) {
		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
			     "Failed to allocate memory for %s "
			     "(%ld elements of %ld bytes each)",
			     what,(long) nmemb, (long) elem_size);
	}

	return cp;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
6,7
6,8
7,8
9,10
9,11
12,13
12,14
14,15
14,16
17,18
17,19
18,19
20,21
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
32,33
32,34
32,35
32,36
32,37
33,34
34,35
34,36
36,37
36,38
36,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
48,49
49,50
49,51
50,51
52,53
54,55
54,56
55,56
55,57
56,57
56,58
57,58
59,60
61,62
61,63
62,63
62,64
63,64
65,66
67,68
69,70
70,71
70,72
71,72
73,74
73,75
73,76
74,75
76,77
78,79
80,81
80,82
81,82
81,83
82,83
84,85
86,87
87,88
88,89
88,90
88,91
88,92
88,93
88,94
88,95
89,90
91,92
91,93
92,93
95,96
95,97
96,97
100,101
102,103
102,104
103,104
103,105
106,107
108,109
108,110
109,110
109,111
112,113
114,115
115,116
-----nextToken-----
2,4,5,8,10,11,13,15,16,19,21,24,26,28,30,31,35,37,38,41,45,47,51,53,58,60,64,66,68,72,75,77,79,83,85,90,93,94,97,98,99,101,104,105,107,110,111,113,116
-----computeFrom-----
49,50
49,51
55,56
55,57
56,57
56,58
61,62
61,63
62,63
62,64
70,71
70,72
81,82
81,83
-----guardedBy-----
64,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
void*_TIFFCheckRealloc(TIFF* tif, void* buffer,		  tmsize_t nmemb, tmsize_t elem_size, const char* what){	void* cp = NULL;	tmsize_t bytes = nmemb * elem_size;	/*	 * XXX: Check for integer overflow.	 */	if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);	if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}	return cp;}
void
*_TIFFCheckRealloc(TIFF* tif, void* buffer,		  tmsize_t nmemb, tmsize_t elem_size, const char* what)
*
_TIFFCheckRealloc
TIFF* tif
TIFF
TIFF
* tif
*
tif
void* buffer
void
* buffer
*
buffer
tmsize_t nmemb
tmsize_t
tmsize_t
nmemb
nmemb
tmsize_t elem_size
tmsize_t
tmsize_t
elem_size
elem_size
const char* what
const char
* what
*
what
{	void* cp = NULL;	tmsize_t bytes = nmemb * elem_size;	/*	 * XXX: Check for integer overflow.	 */	if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);	if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}	return cp;}
void* cp = NULL;
void* cp = NULL;
void
* cp = NULL
*
cp
= NULL
NULL
NULL
tmsize_t bytes = nmemb * elem_size;
tmsize_t bytes = nmemb * elem_size;
tmsize_t
tmsize_t
bytes = nmemb * elem_size
bytes
= nmemb * elem_size
nmemb * elem_size
nmemb
nmemb
elem_size
elem_size
if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);
nmemb && elem_size && bytes / elem_size == nmemb
nmemb && elem_size
nmemb
nmemb
elem_size
elem_size
bytes / elem_size == nmemb
bytes / elem_size
bytes
bytes
elem_size
elem_size
nmemb
nmemb
cp = _TIFFrealloc(buffer, bytes);
cp = _TIFFrealloc(buffer, bytes)
cp
cp
_TIFFrealloc(buffer, bytes)
_TIFFrealloc
_TIFFrealloc
buffer
buffer
bytes
bytes
if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}
cp == NULL
cp
cp
NULL
NULL
{		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}
TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);
TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size)
TIFFErrorExt
TIFFErrorExt
tif->tif_clientdata
tif
tif
tif_clientdata
tif->tif_name
tif
tif
tif_name
"Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)"
what
what
(long) nmemb
long
long

nmemb
nmemb
(long) elem_size
long
long

elem_size
elem_size
return cp;
cp
cp
-----joern-----
(22,26,0)
(24,21,0)
(17,8,0)
(37,31,0)
(14,8,0)
(15,3,0)
(38,8,0)
(2,37,0)
(14,28,0)
(30,22,0)
(14,23,0)
(18,21,0)
(26,22,0)
(13,14,0)
(32,39,0)
(7,16,0)
(28,3,0)
(4,26,0)
(20,32,0)
(34,32,0)
(5,39,0)
(25,24,0)
(34,2,0)
(3,32,0)
(11,18,0)
(9,24,0)
(10,34,0)
(12,39,0)
(19,16,0)
(23,14,0)
(29,37,0)
(27,34,0)
(22,19,0)
(36,3,0)
(19,22,0)
(37,3,0)
(28,16,0)
(0,21,0)
(29,28,0)
(22,30,0)
(32,35,0)
(26,32,0)
(21,18,0)
(2,34,0)
(1,26,0)
(6,19,0)
(21,24,0)
(33,2,0)
(8,19,0)
(8,16,0)
(2,33,0)
(26,32,1)
(18,21,1)
(8,19,1)
(11,21,1)
(32,20,1)
(4,1,1)
(21,24,1)
(29,28,1)
(26,4,1)
(0,24,1)
(17,38,1)
(14,23,1)
(29,37,1)
(20,3,1)
(3,36,1)
(28,14,1)
(18,11,1)
(2,34,1)
(25,9,1)
(22,26,1)
(34,32,1)
(2,33,1)
(36,15,1)
(22,30,1)
(13,8,1)
(10,27,1)
(8,17,1)
(14,8,1)
(1,6,1)
(32,35,1)
(9,32,1)
(24,25,1)
(28,3,1)
(19,22,1)
(21,0,1)
(38,19,1)
(34,10,1)
(37,3,1)
(6,18,1)
(27,18,1)
(14,13,1)
(37,2,1)
(6,18,2)
(21,24,2)
(14,8,2)
(13,18,2)
(22,26,2)
(26,18,2)
(14,18,2)
(34,18,2)
(37,18,2)
(2,18,2)
(28,3,2)
(2,34,2)
(18,21,2)
(29,28,2)
(10,18,2)
(37,3,2)
(32,35,2)
(14,23,2)
(1,18,2)
(27,18,2)
(17,18,2)
(26,32,2)
(4,18,2)
(19,22,2)
(8,19,2)
(38,18,2)
(29,37,2)
(28,18,2)
(2,33,2)
(22,18,2)
(19,18,2)
(8,18,2)
(34,32,2)
(22,30,2)
-----------------------------------
(0,high)
(1,i)
(2,(double)
(3,i.value)
(4,value)
(5,if (i.part.high >= 0)
(6,df)
(7,df)
(8,df += 18446744073709551616.0)
(9,i)
(10,value)
(11,0)
(12,i)
(13,df)
(14,(double)
(15,i)
(16,)
(17,18446744073709551616.0)
(18,i.part.high >= 0)
(19,df = (long double)
(20,ui64)
(21,i.part.high)
(22,(long double)
(23,double)
(24,i.part)
(25,part)
(26,i.value)
(27,i)
(28,return (double)
(29,RET)
(30,long double)
(31,)
(32,i.value = ui64)
(33,double)
(34,i.value)
(35,uint64 ui64)
(36,value)
(37,return (double)
(38,df)
(39,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000000020000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffffc7a1b56300000000ffffffffffffffff56a2b56300000000ffffffffffffffff56a2b56300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x49492b00080000001e00000000000000ffffffffffffffffffffffffffff0000000100000000ffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
void* _TIFFCheckRealloc(TIFF* tif, void* buffer, 		  tmsize_t nmemb, tmsize_t elem_size, const char* what) {
void* cp = NULL;
tmsize_t bytes = nmemb * elem_size;
if(nmemb && elem_size && bytes / elem_size == nmemb)
cp = _TIFFrealloc(buffer, bytes);
return cp;
=======================
