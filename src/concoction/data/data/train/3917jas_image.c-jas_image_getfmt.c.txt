-----label-----
0
-----code-----
int jas_image_getfmt(jas_stream_t *in)
{
	jas_image_fmtinfo_t *fmtinfo;
	int found;
	int i;

	/* Check for data in each of the supported formats. */
	found = 0;
	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,
	  ++fmtinfo) {
		if (fmtinfo->ops.validate) {
			/* Is the input data valid for this format? */
			if (!(*fmtinfo->ops.validate)(in)) {
				found = 1;
				break;
			}
		}
	}
	return found ? fmtinfo->id : (-1);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
22,23
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
37,39
38,39
41,42
41,43
42,43
44,45
46,47
46,48
47,48
49,50
51,52
51,53
52,53
53,54
55,56
56,57
58,59
59,60
59,61
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
69,70
69,71
70,71
71,72
72,73
72,74
73,74
73,75
74,75
78,79
80,81
80,82
81,82
82,83
82,84
83,84
87,88
88,89
88,90
88,91
89,90
91,92
91,93
92,93
95,96
96,97
-----nextToken-----
2,4,7,9,10,15,17,18,21,23,26,28,32,33,39,40,43,45,48,50,54,57,63,64,65,75,76,77,79,84,85,86,90,93,94,97
-----computeFrom-----
30,31
30,32
37,38
37,39
41,42
41,43
46,47
46,48
82,83
82,84
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;ExpressionList;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionList;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;IfStatement;UnaryExpression;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;ReturnStatement;ConditionalExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;UnaryExpression;LiteralExpression;
-----ast_node-----
int jas_image_getfmt(jas_stream_t *in){	jas_image_fmtinfo_t *fmtinfo;	int found;	int i;	/* Check for data in each of the supported formats. */	found = 0;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}	return found ? fmtinfo->id : (-1);}
int
jas_image_getfmt(jas_stream_t *in)
jas_image_getfmt
jas_stream_t *in
jas_stream_t
jas_stream_t
*in
*
in
{	jas_image_fmtinfo_t *fmtinfo;	int found;	int i;	/* Check for data in each of the supported formats. */	found = 0;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}	return found ? fmtinfo->id : (-1);}
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t
jas_image_fmtinfo_t
*fmtinfo
*
fmtinfo
int found;
int found;
int
found
found
int i;
int i;
int
i
i
found = 0;
found = 0
found
found
0
for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}
i = 0, fmtinfo = jas_image_fmtinfos;
i = 0, fmtinfo = jas_image_fmtinfos
i = 0
i
i
0
fmtinfo = jas_image_fmtinfos
fmtinfo
fmtinfo
jas_image_fmtinfos
jas_image_fmtinfos
i < jas_image_numfmts
i
i
jas_image_numfmts
jas_image_numfmts
++i,	  ++fmtinfo
++i
i
i
++fmtinfo
fmtinfo
fmtinfo
{		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}
if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}
fmtinfo->ops.validate
fmtinfo->ops
fmtinfo
fmtinfo
ops
validate
{			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}
if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}
!(*fmtinfo->ops.validate)(in)
(*fmtinfo->ops.validate)(in)
(*fmtinfo->ops.validate)
*fmtinfo->ops.validate
fmtinfo->ops.validate
fmtinfo->ops
fmtinfo
fmtinfo
ops
validate
in
in
{				found = 1;				break;			}
found = 1;
found = 1
found
found
1
break;
return found ? fmtinfo->id : (-1);
found ? fmtinfo->id : (-1)
found
found
fmtinfo->id
fmtinfo
fmtinfo
id
(-1)
-1
1
-----joern-----
(3,8,0)
(17,6,0)
(4,21,0)
(18,30,0)
(30,6,0)
(8,16,0)
(27,33,0)
(27,32,0)
(33,10,0)
(24,11,0)
(32,21,0)
(16,20,0)
(11,15,0)
(31,16,0)
(12,21,0)
(14,30,0)
(5,8,0)
(25,33,0)
(16,8,0)
(33,20,0)
(19,21,0)
(17,15,0)
(2,6,0)
(11,20,0)
(7,28,0)
(1,20,0)
(20,22,0)
(6,22,0)
(29,32,0)
(9,17,0)
(26,16,0)
(8,13,0)
(23,20,0)
(8,3,0)
(0,6,0)
(16,20,1)
(3,8,1)
(11,24,1)
(24,17,1)
(30,18,1)
(14,20,1)
(27,32,1)
(33,25,1)
(2,0,1)
(16,31,1)
(8,5,1)
(31,26,1)
(1,23,1)
(14,11,1)
(17,6,1)
(5,16,1)
(9,3,1)
(25,3,1)
(20,1,1)
(17,9,1)
(27,33,1)
(8,13,1)
(18,14,1)
(8,16,1)
(6,2,1)
(33,20,1)
(26,30,1)
(11,20,1)
(32,29,1)
(23,6,1)
(29,30,1)
(30,6,1)
(29,30,2)
(9,3,2)
(11,3,2)
(8,16,2)
(18,3,2)
(8,13,2)
(3,30,2)
(33,3,2)
(33,20,2)
(3,8,2)
(17,6,2)
(16,30,2)
(32,30,2)
(31,30,2)
(14,3,2)
(8,30,2)
(26,30,2)
(16,20,2)
(24,3,2)
(5,30,2)
(17,3,2)
(30,3,2)
(27,32,2)
(27,33,2)
(11,20,2)
(30,6,2)
(25,3,2)
-----------------------------------
(0,i)
(1,jas_image_fmtinfos)
(2,0)
(3,!strcmp(fmtinfo->name, name)
(4,i)
(5,name)
(6,i = 0)
(7,if (!strcmp(fmtinfo->name, name)
(8,strcmp(fmtinfo->name, name)
(9,i)
(10,)
(11,++fmtinfo)
(12,for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo)
(13,const char *name)
(14,i)
(15,)
(16,fmtinfo->name)
(17,++i)
(18,jas_image_numfmts)
(19,fmtinfo)
(20,fmtinfo = jas_image_fmtinfos)
(21,)
(22,)
(23,fmtinfo)
(24,fmtinfo)
(25,fmtinfo)
(26,fmtinfo)
(27,RET)
(28,)
(29,0)
(30,i < jas_image_numfmts)
(31,name)
(32,return 0;)
(33,return fmtinfo;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff1a34ad6300000000ffffffffffffffff4534ad6300000000ffffffffffffffff4534ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff6100030000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
int jas_image_getfmt(jas_stream_t *in) {
jas_image_fmtinfo_t *fmtinfo;
int found;
int i;
found = 0;
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
if(!(*fmtinfo->ops.validate)(in))
found = 1;
return found ? fmtinfo->id : (-1);
=======================
