-----label-----
0
-----code-----
static int ras_getint(jas_stream_t *in, int_fast32_t *val)
{
	int x;
	int c;
	int i;

	x = 0;
	for (i = 0; i < 4; i++) {
		if ((c = jas_stream_getc(in)) == EOF) {
			return -1;
		}
		x = (x << 8) | (c & 0xff);
	}

	*val = x;
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
18,19
19,20
19,21
21,22
23,24
24,25
24,26
26,27
28,29
29,30
29,31
31,32
33,34
34,35
34,36
35,36
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
44,45
44,46
45,46
48,49
49,50
51,52
51,53
52,53
52,54
53,54
53,55
54,55
55,56
55,57
56,57
58,59
58,60
59,60
61,62
63,64
65,66
66,67
67,68
69,70
70,71
70,72
71,72
73,74
73,75
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
87,88
89,90
91,92
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,25,27,30,32,36,37,42,43,46,47,50,57,60,62,64,68,72,77,78,82,83,88,90,92
-----computeFrom-----
34,35
34,36
40,41
40,42
44,45
44,46
53,54
53,55
55,56
55,57
70,71
70,72
73,74
73,75
75,76
75,77
80,81
80,82
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int ras_getint(jas_stream_t *in, int_fast32_t *val){	int x;	int c;	int i;	x = 0;	for (i = 0; i < 4; i++) {		if ((c = jas_stream_getc(in)) == EOF) {			return -1;		}		x = (x << 8) | (c & 0xff);	}	*val = x;	return 0;}
static int
ras_getint(jas_stream_t *in, int_fast32_t *val)
ras_getint
jas_stream_t *in
jas_stream_t
jas_stream_t
*in
*
in
int_fast32_t *val
int_fast32_t
int_fast32_t
*val
*
val
{	int x;	int c;	int i;	x = 0;	for (i = 0; i < 4; i++) {		if ((c = jas_stream_getc(in)) == EOF) {			return -1;		}		x = (x << 8) | (c & 0xff);	}	*val = x;	return 0;}
int x;
int x;
int
x
x
int c;
int c;
int
c
c
int i;
int i;
int
i
i
x = 0;
x = 0
x
x
0
for (i = 0; i < 4; i++) {		if ((c = jas_stream_getc(in)) == EOF) {			return -1;		}		x = (x << 8) | (c & 0xff);	}
i = 0;
i = 0
i
i
0
i < 4
i
i
4
i++
i
i
{		if ((c = jas_stream_getc(in)) == EOF) {			return -1;		}		x = (x << 8) | (c & 0xff);	}
if ((c = jas_stream_getc(in)) == EOF) {			return -1;		}
(c = jas_stream_getc(in)) == EOF
(c = jas_stream_getc(in))
c = jas_stream_getc(in)
c
c
jas_stream_getc(in)
jas_stream_getc
jas_stream_getc
in
in
EOF
EOF
{			return -1;		}
return -1;
-1
1
x = (x << 8) | (c & 0xff);
x = (x << 8) | (c & 0xff)
x
x
(x << 8) | (c & 0xff)
(x << 8)
x << 8
x
x
8
(c & 0xff)
c & 0xff
c
c
0xff
*val = x;
*val = x
*val
val
val
x
x
return 0;
0
-----joern-----
(88,12,0)
(30,25,0)
(14,28,0)
(45,1,0)
(86,39,0)
(55,72,0)
(85,54,0)
(32,4,0)
(25,88,0)
(4,6,0)
(6,82,0)
(0,72,0)
(3,15,0)
(37,25,0)
(23,12,0)
(4,32,0)
(39,36,0)
(51,14,0)
(65,17,0)
(32,88,0)
(9,28,0)
(36,1,0)
(15,84,0)
(21,23,0)
(33,4,0)
(83,33,0)
(54,85,0)
(35,36,0)
(43,80,0)
(4,33,0)
(24,54,0)
(85,28,0)
(25,37,0)
(13,71,0)
(68,34,0)
(22,66,0)
(36,80,0)
(29,28,0)
(88,25,0)
(67,39,0)
(59,53,0)
(72,39,0)
(81,79,0)
(50,81,0)
(88,32,0)
(60,15,0)
(66,22,0)
(46,63,0)
(78,28,0)
(12,28,0)
(81,56,0)
(82,6,0)
(81,63,0)
(38,63,0)
(31,61,0)
(62,59,0)
(16,23,0)
(39,72,0)
(60,31,0)
(17,18,0)
(77,22,0)
(27,47,0)
(7,55,0)
(60,14,0)
(63,72,0)
(1,36,0)
(58,12,0)
(47,31,0)
(2,82,0)
(6,4,0)
(44,33,0)
(12,88,0)
(74,28,0)
(34,36,0)
(11,54,0)
(19,82,0)
(70,79,0)
(8,0,0)
(63,81,0)
(48,62,0)
(57,37,0)
(5,66,0)
(49,28,0)
(26,3,0)
(64,28,0)
(87,65,0)
(79,81,0)
(10,34,0)
(75,72,0)
(32,22,0)
(69,28,0)
(76,28,0)
(60,17,0)
(52,6,0)
(80,56,0)
(73,37,0)
(22,32,0)
(20,55,0)
(42,66,0)
(60,59,0)
(41,80,0)
(40,80,0)
(80,36,0)
(48,1,1)
(85,54,1)
(73,57,1)
(10,55,1)
(39,36,1)
(7,0,1)
(45,36,1)
(4,33,1)
(6,82,1)
(79,81,1)
(30,37,1)
(32,4,1)
(23,21,1)
(40,35,1)
(33,44,1)
(60,14,1)
(57,58,1)
(60,15,1)
(63,72,1)
(22,77,1)
(63,38,1)
(15,3,1)
(83,6,1)
(11,24,1)
(8,79,1)
(1,45,1)
(34,36,1)
(72,39,1)
(17,65,1)
(34,68,1)
(39,86,1)
(77,66,1)
(31,47,1)
(62,48,1)
(60,31,1)
(81,63,1)
(75,1,1)
(70,81,1)
(5,42,1)
(50,55,1)
(32,22,1)
(46,50,1)
(60,59,1)
(88,25,1)
(47,27,1)
(21,16,1)
(81,56,1)
(87,34,1)
(3,26,1)
(2,19,1)
(41,43,1)
(22,66,1)
(66,5,1)
(35,85,1)
(37,73,1)
(44,83,1)
(36,80,1)
(65,87,1)
(54,11,1)
(25,30,1)
(4,6,1)
(79,70,1)
(59,62,1)
(6,52,1)
(58,34,1)
(19,22,1)
(14,51,1)
(20,7,1)
(7,72,1)
(55,72,1)
(67,75,1)
(1,36,1)
(25,37,1)
(52,82,1)
(55,20,1)
(12,88,1)
(68,10,1)
(80,41,1)
(60,17,1)
(27,79,1)
(0,8,1)
(26,23,1)
(42,25,1)
(23,12,1)
(43,40,1)
(16,12,1)
(82,2,1)
(88,32,1)
(38,46,1)
(51,23,1)
(0,72,1)
(86,67,1)
(80,56,1)
(67,1,2)
(3,23,2)
(39,36,2)
(60,15,2)
(0,79,2)
(6,82,2)
(21,34,2)
(39,1,2)
(15,23,2)
(51,23,2)
(57,34,2)
(88,25,2)
(5,34,2)
(81,63,2)
(20,1,2)
(22,34,2)
(7,79,2)
(6,34,2)
(27,79,2)
(85,54,2)
(55,1,2)
(77,34,2)
(7,1,2)
(79,81,2)
(55,72,2)
(32,4,2)
(23,12,2)
(4,33,2)
(72,39,2)
(83,34,2)
(25,37,2)
(55,79,2)
(2,34,2)
(44,34,2)
(63,72,2)
(34,55,2)
(63,55,2)
(46,55,2)
(87,34,2)
(50,55,2)
(60,59,2)
(20,79,2)
(4,34,2)
(34,36,2)
(12,34,2)
(12,88,2)
(0,72,2)
(32,22,2)
(25,34,2)
(52,34,2)
(60,14,2)
(32,34,2)
(81,56,2)
(81,55,2)
(48,1,2)
(42,34,2)
(23,34,2)
(30,34,2)
(88,34,2)
(17,34,2)
(31,79,2)
(33,34,2)
(36,80,2)
(86,1,2)
(58,34,2)
(59,1,2)
(62,1,2)
(38,55,2)
(47,79,2)
(8,79,2)
(73,34,2)
(60,31,2)
(70,55,2)
(14,23,2)
(60,17,2)
(79,55,2)
(10,55,2)
(88,32,2)
(16,34,2)
(22,66,2)
(75,1,2)
(72,1,2)
(66,34,2)
(26,23,2)
(19,34,2)
(1,36,2)
(65,34,2)
(82,34,2)
(80,56,2)
(4,6,2)
(68,55,2)
(37,34,2)
-----------------------------------
(0,--i)
(1,(n = jas_stream_read(in, buf, RAS_MAGICLEN)
(2,2)
(3,-1)
(4,(buf[2] << 8)
(5,1)
(6,buf[2] << 8)
(7,i)
(8,i)
(9,if ((n = jas_stream_read(in, buf, RAS_MAGICLEN)
(10,n)
(11,RAS_MAGICLEN)
(12,magic = (buf[0] << 24)
(13,if (jas_stream_ungetc(in, buf[i])
(14,return 0;)
(15,return -1;)
(16,magic)
(17,return -1;)
(18,)
(19,buf)
(20,0)
(21,RAS_MAGIC)
(22,buf[1] << 16)
(23,magic != RAS_MAGIC)
(24,JAS_STREAM_MAXPUTBACK)
(25,buf[0] << 24)
(26,1)
(27,1)
(28,)
(29,n)
(30,24)
(31,return -1;)
(32,(buf[1] << 16)
(33,buf[3])
(34,n < RAS_MAGICLEN)
(35,n)
(36,n = jas_stream_read(in, buf, RAS_MAGICLEN)
(37,buf[0])
(38,i)
(39,n - 1)
(40,in)
(41,RAS_MAGICLEN)
(42,buf)
(43,buf)
(44,3)
(45,0)
(46,buf)
(47,-1)
(48,1)
(49,for (i = n - 1; i >= 0; --i)
(50,in)
(51,0)
(52,8)
(53,)
(54,JAS_STREAM_MAXPUTBACK >= RAS_MAGICLEN)
(55,i >= 0)
(56,jas_stream_t *in)
(57,buf)
(58,magic)
(59,return -1;)
(60,RET)
(61,)
(62,-1)
(63,buf[i])
(64,i)
(65,-1)
(66,buf[1])
(67,n)
(68,RAS_MAGICLEN)
(69,magic)
(70,EOF)
(71,)
(72,i = n - 1)
(73,0)
(74,if (n < RAS_MAGICLEN)
(75,i)
(76,buf)
(77,16)
(78,if (magic != RAS_MAGIC)
(79,jas_stream_ungetc(in, buf[i])
(80,jas_stream_read(in, buf, RAS_MAGICLEN)
(81,jas_stream_ungetc(in, buf[i])
(82,buf[2])
(83,buf)
(84,)
(85,assert(JAS_STREAM_MAXPUTBACK >= RAS_MAGICLEN)
(86,1)
(87,1)
(88,(buf[0] << 24)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000000020000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x59a66a95ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
static int ras_getint(jas_stream_t *in, int_fast32_t *val) {
int x;
int c;
int i;
x = 0;
for(i = 0;i < 4;i++)
x = (x << 8) | (c & 0xff);
for(i = 0;i < 4;i++)
x = (x << 8) | (c & 0xff);
for(i = 0;i < 4;i++)
x = (x << 8) | (c & 0xff);
for(i = 0;i < 4;i++)
x = (x << 8) | (c & 0xff);
*val = x;
return 0;
=======================
