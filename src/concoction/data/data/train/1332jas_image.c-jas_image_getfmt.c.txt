-----label-----
0
-----code-----
int jas_image_getfmt(jas_stream_t *in)
{
	jas_image_fmtinfo_t *fmtinfo;
	int found;
	int i;

	/* Check for data in each of the supported formats. */
	found = 0;
	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,
	  ++fmtinfo) {
		if (fmtinfo->ops.validate) {
			/* Is the input data valid for this format? */
			if (!(*fmtinfo->ops.validate)(in)) {
				found = 1;
				break;
			}
		}
	}
	return found ? fmtinfo->id : (-1);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
22,23
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
37,39
38,39
41,42
41,43
42,43
44,45
46,47
46,48
47,48
49,50
51,52
51,53
52,53
53,54
55,56
56,57
58,59
59,60
59,61
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
69,70
69,71
70,71
71,72
72,73
72,74
73,74
73,75
74,75
78,79
80,81
80,82
81,82
82,83
82,84
83,84
87,88
88,89
88,90
88,91
89,90
91,92
91,93
92,93
95,96
96,97
-----nextToken-----
2,4,7,9,10,15,17,18,21,23,26,28,32,33,39,40,43,45,48,50,54,57,63,64,65,75,76,77,79,84,85,86,90,93,94,97
-----computeFrom-----
30,31
30,32
37,38
37,39
41,42
41,43
46,47
46,48
82,83
82,84
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;ExpressionList;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionList;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;IfStatement;UnaryExpression;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;ReturnStatement;ConditionalExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;UnaryExpression;LiteralExpression;
-----ast_node-----
int jas_image_getfmt(jas_stream_t *in){	jas_image_fmtinfo_t *fmtinfo;	int found;	int i;	/* Check for data in each of the supported formats. */	found = 0;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}	return found ? fmtinfo->id : (-1);}
int
jas_image_getfmt(jas_stream_t *in)
jas_image_getfmt
jas_stream_t *in
jas_stream_t
jas_stream_t
*in
*
in
{	jas_image_fmtinfo_t *fmtinfo;	int found;	int i;	/* Check for data in each of the supported formats. */	found = 0;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}	return found ? fmtinfo->id : (-1);}
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t
jas_image_fmtinfo_t
*fmtinfo
*
fmtinfo
int found;
int found;
int
found
found
int i;
int i;
int
i
i
found = 0;
found = 0
found
found
0
for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i,	  ++fmtinfo) {		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}
i = 0, fmtinfo = jas_image_fmtinfos;
i = 0, fmtinfo = jas_image_fmtinfos
i = 0
i
i
0
fmtinfo = jas_image_fmtinfos
fmtinfo
fmtinfo
jas_image_fmtinfos
jas_image_fmtinfos
i < jas_image_numfmts
i
i
jas_image_numfmts
jas_image_numfmts
++i,	  ++fmtinfo
++i
i
i
++fmtinfo
fmtinfo
fmtinfo
{		if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}	}
if (fmtinfo->ops.validate) {			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}
fmtinfo->ops.validate
fmtinfo->ops
fmtinfo
fmtinfo
ops
validate
{			/* Is the input data valid for this format? */			if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}		}
if (!(*fmtinfo->ops.validate)(in)) {				found = 1;				break;			}
!(*fmtinfo->ops.validate)(in)
(*fmtinfo->ops.validate)(in)
(*fmtinfo->ops.validate)
*fmtinfo->ops.validate
fmtinfo->ops.validate
fmtinfo->ops
fmtinfo
fmtinfo
ops
validate
in
in
{				found = 1;				break;			}
found = 1;
found = 1
found
found
1
break;
return found ? fmtinfo->id : (-1);
found ? fmtinfo->id : (-1)
found
found
fmtinfo->id
fmtinfo
fmtinfo
id
(-1)
-1
1
-----joern-----
(4,5,0)
(24,4,0)
(26,0,0)
(14,5,0)
(26,15,0)
(5,2,0)
(21,26,0)
(1,27,0)
(32,24,0)
(9,8,0)
(17,24,0)
(4,24,0)
(18,8,0)
(30,5,0)
(28,16,0)
(8,0,0)
(25,27,0)
(0,2,0)
(10,29,0)
(11,33,0)
(16,5,0)
(13,33,0)
(27,33,0)
(29,15,0)
(31,0,0)
(29,5,0)
(12,4,0)
(3,0,0)
(1,16,0)
(24,17,0)
(6,33,0)
(19,4,0)
(22,20,0)
(24,7,0)
(16,23,0)
(1,16,1)
(24,4,1)
(27,25,1)
(32,4,1)
(12,19,1)
(5,30,1)
(10,26,1)
(9,18,1)
(25,8,1)
(16,5,1)
(18,29,1)
(26,0,1)
(8,0,1)
(19,8,1)
(16,28,1)
(24,7,1)
(24,32,1)
(4,5,1)
(0,3,1)
(30,14,1)
(29,10,1)
(4,12,1)
(17,24,1)
(28,17,1)
(21,17,1)
(29,5,1)
(3,31,1)
(14,0,1)
(1,27,1)
(18,5,1)
(26,21,1)
(8,9,1)
(26,17,2)
(18,17,2)
(24,4,2)
(8,17,2)
(4,8,2)
(28,17,2)
(17,24,2)
(17,8,2)
(10,17,2)
(29,5,2)
(16,17,2)
(19,8,2)
(4,5,2)
(24,8,2)
(32,8,2)
(21,17,2)
(9,17,2)
(16,5,2)
(1,16,2)
(27,8,2)
(26,0,2)
(12,8,2)
(29,17,2)
(1,27,2)
(24,7,2)
(25,8,2)
(8,0,2)
-----------------------------------
(0,i = 0)
(1,RET)
(2,)
(3,0)
(4,fmtinfo->name)
(5,fmtinfo = jas_image_fmtinfos)
(6,fmtinfo)
(7,const char *name)
(8,i < jas_image_numfmts)
(9,jas_image_numfmts)
(10,fmtinfo)
(11,for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo)
(12,name)
(13,i)
(14,fmtinfo)
(15,)
(16,return fmtinfo;)
(17,!strcmp(fmtinfo->name, name)
(18,i)
(19,fmtinfo)
(20,)
(21,i)
(22,if (!strcmp(fmtinfo->name, name)
(23,)
(24,strcmp(fmtinfo->name, name)
(25,0)
(26,++i)
(27,return 0;)
(28,fmtinfo)
(29,++fmtinfo)
(30,jas_image_fmtinfos)
(31,i)
(32,name)
(33,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000080000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5d00050000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
int jas_image_getfmt(jas_stream_t *in) {
jas_image_fmtinfo_t *fmtinfo;
int found;
int i;
found = 0;
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, 	  ++fmtinfo)
if(fmtinfo->ops.validate)
if(!(*fmtinfo->ops.validate)(in))
found = 1;
return found ? fmtinfo->id : (-1);
=======================
