-----label-----
0
-----code-----
jas_image_fmtinfo_t *jas_image_lookupfmtbyname(const char *name)
{
	int i;
	jas_image_fmtinfo_t *fmtinfo;

	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo) {
		if (!strcmp(fmtinfo->name, name)) {
			return fmtinfo;
		}
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
9,10
9,11
12,13
12,14
12,15
12,16
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
22,23
22,24
25,26
25,27
25,28
25,29
26,27
27,28
27,29
28,29
28,30
29,30
32,33
32,34
33,34
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
46,47
47,48
49,50
50,51
50,52
51,52
52,53
52,54
52,55
53,54
55,56
55,57
56,57
59,60
61,62
62,63
63,64
65,66
-----nextToken-----
3,5,6,8,10,11,15,17,21,23,24,30,31,34,36,39,41,45,48,54,57,58,60,64,66
-----computeFrom-----
28,29
28,30
32,33
32,34
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ForStatement;ExpressionStatement;ExpressionList;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionList;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ReturnStatement;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
jas_image_fmtinfo_t *jas_image_lookupfmtbyname(const char *name){	int i;	jas_image_fmtinfo_t *fmtinfo;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo) {		if (!strcmp(fmtinfo->name, name)) {			return fmtinfo;		}	}	return 0;}
jas_image_fmtinfo_t
jas_image_fmtinfo_t
*jas_image_lookupfmtbyname(const char *name)
*
jas_image_lookupfmtbyname
const char *name
const char
*name
*
name
{	int i;	jas_image_fmtinfo_t *fmtinfo;	for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo) {		if (!strcmp(fmtinfo->name, name)) {			return fmtinfo;		}	}	return 0;}
int i;
int i;
int
i
i
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t
jas_image_fmtinfo_t
*fmtinfo
*
fmtinfo
for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo) {		if (!strcmp(fmtinfo->name, name)) {			return fmtinfo;		}	}
i = 0, fmtinfo = jas_image_fmtinfos;
i = 0, fmtinfo = jas_image_fmtinfos
i = 0
i
i
0
fmtinfo = jas_image_fmtinfos
fmtinfo
fmtinfo
jas_image_fmtinfos
jas_image_fmtinfos
i < jas_image_numfmts
i
i
jas_image_numfmts
jas_image_numfmts
++i, ++fmtinfo
++i
i
i
++fmtinfo
fmtinfo
fmtinfo
{		if (!strcmp(fmtinfo->name, name)) {			return fmtinfo;		}	}
if (!strcmp(fmtinfo->name, name)) {			return fmtinfo;		}
!strcmp(fmtinfo->name, name)
strcmp(fmtinfo->name, name)
strcmp
strcmp
fmtinfo->name
fmtinfo
fmtinfo
name
name
name
{			return fmtinfo;		}
return fmtinfo;
fmtinfo
fmtinfo
return 0;
0
-----joern-----
(4,5,0)
(24,4,0)
(26,0,0)
(14,5,0)
(26,15,0)
(5,2,0)
(21,26,0)
(1,27,0)
(32,24,0)
(9,8,0)
(17,24,0)
(4,24,0)
(18,8,0)
(30,5,0)
(28,16,0)
(8,0,0)
(25,27,0)
(0,2,0)
(10,29,0)
(11,33,0)
(16,5,0)
(13,33,0)
(27,33,0)
(29,15,0)
(31,0,0)
(29,5,0)
(12,4,0)
(3,0,0)
(1,16,0)
(24,17,0)
(6,33,0)
(19,4,0)
(22,20,0)
(24,7,0)
(16,23,0)
(1,16,1)
(24,4,1)
(27,25,1)
(32,4,1)
(12,19,1)
(5,30,1)
(10,26,1)
(9,18,1)
(25,8,1)
(16,5,1)
(18,29,1)
(26,0,1)
(8,0,1)
(19,8,1)
(16,28,1)
(24,7,1)
(24,32,1)
(4,5,1)
(0,3,1)
(30,14,1)
(29,10,1)
(4,12,1)
(17,24,1)
(28,17,1)
(21,17,1)
(29,5,1)
(3,31,1)
(14,0,1)
(1,27,1)
(18,5,1)
(26,21,1)
(8,9,1)
(26,17,2)
(18,17,2)
(24,4,2)
(8,17,2)
(4,8,2)
(28,17,2)
(17,24,2)
(17,8,2)
(10,17,2)
(29,5,2)
(16,17,2)
(19,8,2)
(4,5,2)
(24,8,2)
(32,8,2)
(21,17,2)
(9,17,2)
(16,5,2)
(1,16,2)
(27,8,2)
(26,0,2)
(12,8,2)
(29,17,2)
(1,27,2)
(24,7,2)
(25,8,2)
(8,0,2)
-----------------------------------
(0,i = 0)
(1,RET)
(2,)
(3,0)
(4,fmtinfo->name)
(5,fmtinfo = jas_image_fmtinfos)
(6,fmtinfo)
(7,const char *name)
(8,i < jas_image_numfmts)
(9,jas_image_numfmts)
(10,fmtinfo)
(11,for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo)
(12,name)
(13,i)
(14,fmtinfo)
(15,)
(16,return fmtinfo;)
(17,!strcmp(fmtinfo->name, name)
(18,i)
(19,fmtinfo)
(20,)
(21,i)
(22,if (!strcmp(fmtinfo->name, name)
(23,)
(24,strcmp(fmtinfo->name, name)
(25,0)
(26,++i)
(27,return 0;)
(28,fmtinfo)
(29,++fmtinfo)
(30,jas_image_fmtinfos)
(31,i)
(32,name)
(33,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000002125000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5f006e0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
jas_image_fmtinfo_t *jas_image_lookupfmtbyname(const char *name) {
int i;
jas_image_fmtinfo_t *fmtinfo;
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
for(i = 0, fmtinfo = jas_image_fmtinfos;i < jas_image_numfmts;++i, ++fmtinfo)
if(!strcmp(fmtinfo->name, name))
return fmtinfo;
=======================
