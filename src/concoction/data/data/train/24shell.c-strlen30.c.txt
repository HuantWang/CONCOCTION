-----label-----
0
-----code-----
static int strlen30(const char *z){
printf("\nfile_name:%s\n",__FILE__);
printf("function_name:%s\n",__func__);
printf("------function start!------\n");
printf("static int strlen30(const char *z){\n");
  printf("const char *z2 = z;\n");
  const char *z2 = z;
  while( *z2 ){printf("while(*z2)\n");
   printf("z2++;\n");
z2++; }
  printf("return 0x3fffffff & (int)(z2 - z);\n");
  printf("------function end!------\n");
  return 0x3fffffff & (int)(z2 - z);
printf("------function end!------\n");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
10,19
10,20
10,21
11,12
12,13
12,14
12,15
13,14
17,18
18,19
18,20
18,21
19,20
22,23
24,25
25,26
25,27
26,27
29,30
30,31
30,32
31,32
34,35
35,36
35,37
36,37
39,40
40,41
40,42
42,43
42,44
42,45
45,46
46,47
48,49
48,50
49,50
50,51
52,53
52,54
52,55
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
63,64
64,65
65,66
67,68
68,69
68,70
69,70
72,73
73,74
73,75
74,75
77,78
78,79
78,80
80,81
80,82
81,82
81,83
84,85
85,86
85,87
86,87
88,89
90,91
91,92
91,93
92,93
-----nextToken-----
2,4,6,8,9,14,15,16,20,21,23,27,28,32,33,37,38,41,43,44,47,51,56,57,61,62,66,70,71,75,76,79,82,83,87,89,93,94
-----computeFrom-----
78,79
78,80
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;WhileStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ReturnStatement;BinaryExpression;LiteralExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static int strlen30(const char *z){printf("\nfile_name:%s\n",__FILE__);printf("function_name:%s\n",__func__);printf("------function start!------\n");printf("static int strlen30(const char *z){\n");  printf("const char *z2 = z;\n");  const char *z2 = z;  while( *z2 ){printf("while(*z2)\n");   printf("z2++;\n");z2++; }  printf("return 0x3fffffff & (int)(z2 - z);\n");  printf("------function end!------\n");  return 0x3fffffff & (int)(z2 - z);printf("------function end!------\n");}
static int
strlen30(const char *z)
strlen30
const char *z
const char
*z
*
z
{printf("\nfile_name:%s\n",__FILE__);printf("function_name:%s\n",__func__);printf("------function start!------\n");printf("static int strlen30(const char *z){\n");  printf("const char *z2 = z;\n");  const char *z2 = z;  while( *z2 ){printf("while(*z2)\n");   printf("z2++;\n");z2++; }  printf("return 0x3fffffff & (int)(z2 - z);\n");  printf("------function end!------\n");  return 0x3fffffff & (int)(z2 - z);printf("------function end!------\n");}
printf("\nfile_name:%s\n",__FILE__);
printf("\nfile_name:%s\n",__FILE__)
printf
printf
"\nfile_name:%s\n"
__FILE__
printf("function_name:%s\n",__func__);
printf("function_name:%s\n",__func__)
printf
printf
"function_name:%s\n"
__func__
__func__
printf("------function start!------\n");
printf("------function start!------\n")
printf
printf
"------function start!------\n"
printf("static int strlen30(const char *z){\n");
printf("static int strlen30(const char *z){\n")
printf
printf
"static int strlen30(const char *z){\n"
printf("const char *z2 = z;\n");
printf("const char *z2 = z;\n")
printf
printf
"const char *z2 = z;\n"
const char *z2 = z;
const char *z2 = z;
const char
*z2 = z
*
z2
= z
z
z
while( *z2 ){printf("while(*z2)\n");   printf("z2++;\n");z2++; }
*z2
z2
z2
{printf("while(*z2)\n");   printf("z2++;\n");z2++; }
printf("while(*z2)\n");
printf("while(*z2)\n")
printf
printf
"while(*z2)\n"
printf("z2++;\n");
printf("z2++;\n")
printf
printf
"z2++;\n"
z2++;
z2++
z2
z2
printf("return 0x3fffffff & (int)(z2 - z);\n");
printf("return 0x3fffffff & (int)(z2 - z);\n")
printf
printf
"return 0x3fffffff & (int)(z2 - z);\n"
printf("------function end!------\n");
printf("------function end!------\n")
printf
printf
"------function end!------\n"
return 0x3fffffff & (int)(z2 - z);
0x3fffffff & (int)(z2 - z)
0x3fffffff
(int)(z2 - z)
int
int

(z2 - z)
z2 - z
z2
z2
z
z
printf("------function end!------\n");
printf("------function end!------\n")
printf
printf
"------function end!------\n"
-----joern-----
(30,46,0)
(33,18,0)
(27,24,0)
(22,28,0)
(41,37,0)
(36,46,0)
(5,42,0)
(53,24,0)
(36,29,0)
(28,43,0)
(48,24,0)
(15,18,0)
(40,18,0)
(37,41,0)
(46,36,0)
(30,45,0)
(52,29,0)
(4,1,0)
(54,37,0)
(34,25,0)
(28,45,0)
(17,40,0)
(49,55,0)
(42,18,0)
(23,15,0)
(8,50,0)
(3,45,0)
(16,25,0)
(54,35,0)
(20,28,0)
(19,13,0)
(6,24,0)
(21,31,0)
(50,55,0)
(45,28,0)
(51,53,0)
(11,31,0)
(30,24,0)
(38,24,0)
(45,30,0)
(50,24,0)
(7,6,0)
(31,18,0)
(13,18,0)
(1,41,0)
(43,24,0)
(30,37,0)
(26,15,0)
(37,54,0)
(46,44,0)
(46,30,0)
(9,35,0)
(29,36,0)
(35,54,0)
(44,25,0)
(44,46,0)
(10,27,0)
(14,30,0)
(43,39,0)
(56,43,0)
(25,44,0)
(37,30,0)
(32,29,0)
(12,35,0)
(39,43,0)
(55,50,0)
(2,1,0)
(41,1,0)
(54,35,1)
(45,28,1)
(20,14,1)
(43,39,1)
(32,37,1)
(23,26,1)
(34,16,1)
(1,2,1)
(30,37,1)
(53,51,1)
(55,49,1)
(51,43,1)
(15,23,1)
(35,12,1)
(16,36,1)
(27,10,1)
(45,3,1)
(41,1,1)
(26,31,1)
(46,36,1)
(37,54,1)
(22,20,1)
(9,45,1)
(44,25,1)
(13,19,1)
(40,17,1)
(28,43,1)
(3,28,1)
(29,52,1)
(6,7,1)
(39,56,1)
(46,44,1)
(10,6,1)
(28,22,1)
(47,13,1)
(4,54,1)
(52,32,1)
(31,21,1)
(30,46,1)
(19,42,1)
(12,9,1)
(8,53,1)
(14,50,1)
(17,47,1)
(56,27,1)
(36,29,1)
(30,45,1)
(0,40,1)
(37,41,1)
(2,4,1)
(17,30,1)
(42,5,1)
(25,34,1)
(7,47,1)
(50,55,1)
(49,8,1)
(21,11,1)
(5,15,1)
(35,47,2)
(41,1,2)
(45,28,2)
(41,47,2)
(30,45,2)
(46,44,2)
(28,43,2)
(46,36,2)
(32,47,2)
(30,47,2)
(43,47,2)
(50,55,2)
(9,47,2)
(54,47,2)
(36,47,2)
(55,47,2)
(10,47,2)
(50,47,2)
(16,47,2)
(44,47,2)
(28,47,2)
(54,35,2)
(39,47,2)
(30,37,2)
(36,29,2)
(3,47,2)
(29,47,2)
(27,47,2)
(51,47,2)
(52,47,2)
(2,47,2)
(4,47,2)
(1,47,2)
(37,54,2)
(7,47,2)
(56,47,2)
(49,47,2)
(53,47,2)
(30,46,2)
(6,47,2)
(12,47,2)
(22,47,2)
(37,41,2)
(14,47,2)
(20,47,2)
(44,25,2)
(37,47,2)
(8,47,2)
(43,39,2)
(46,47,2)
(45,47,2)
(25,47,2)
(34,47,2)
-----------------------------------
(0,RET)
(1,sEnd.ru_utime)
(2,ru_utime)
(3,0.001)
(4,sEnd)
(5,"------function start!------\\n")
(6,printf("if(enableTimer)
(7,"if(enableTimer)
(8,RUSAGE_SELF)
(9,sBegin)
(10,"struct rusage sEnd;\\n")
(11,"\\nfile_name:%s\\n")
(12,ru_utime)
(13,printf("static void endTimer(void)
(14,"Run Time: real %.3f user %f sys %f\\n")
(15,printf("function_name:%s\\n",__func__)
(16,sEnd)
(17,"------function end!------\\n")
(18,)
(19,"static void endTimer(void)
(20,iEnd)
(21,__FILE__)
(22,iBegin)
(23,__func__)
(24,)
(25,sEnd.ru_stime)
(26,"function_name:%s\\n")
(27,printf("struct rusage sEnd;\\n")
(28,iEnd - iBegin)
(29,sBegin.ru_stime)
(30,printf("Run Time: real %.3f user %f sys %f\\n",\\n       (iEnd - iBegin)
(31,printf("\\nfile_name:%s\\n",__FILE__)
(32,sBegin)
(33,if( enableTimer )
(34,ru_stime)
(35,sBegin.ru_utime)
(36,&sBegin.ru_stime)
(37,timeDiff(&sBegin.ru_utime, &sEnd.ru_utime)
(38,sEnd)
(39,timeOfDay()
(40,printf("------function end!------\\n")
(41,&sEnd.ru_utime)
(42,printf("------function start!------\\n")
(43,iEnd = timeOfDay()
(44,&sEnd.ru_stime)
(45,(iEnd - iBegin)
(46,timeDiff(&sBegin.ru_stime, &sEnd.ru_stime)
(47,enableTimer)
(48,iEnd)
(49,sEnd)
(50,getrusage(RUSAGE_SELF, &sEnd)
(51,"getrusage(RUSAGE_SELF, &sEnd)
(52,ru_stime)
(53,printf("getrusage(RUSAGE_SELF, &sEnd)
(54,&sBegin.ru_utime)
(55,&sEnd)
(56,iEnd)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
stdin-stat:0x000800000000000001000000ffffffff0100000000000000a4810000e8030000e8030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff2ff9366400000000ffffffffffffffff9ff8366400000000ffffffffffffffff9ff8366400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
stdin:0x2e68000000000000000000000000000000000000
=========trace=========
static int strlen30(const char *z){
const char *z2 = z;
while(*z2)
z2++;
return 0x3fffffff & (int)(z2 - z);
=======================
