-----label-----
0
-----code-----
static int mem_read(jas_stream_obj_t *obj, char *buf, int cnt)
{
	ssize_t n;
	assert(cnt >= 0);
	assert(buf);

	JAS_DBGLOG(100, ("mem_read(%p, %p, %d)\n", obj, buf, cnt));
	jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;
	n = m->len_ - m->pos_;
	cnt = JAS_MIN(n, cnt);
	memcpy(buf, &m->buf_[m->pos_], cnt);
	m->pos_ += cnt;
	return cnt;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
18,19
20,21
20,22
20,23
20,24
20,25
20,26
20,27
20,28
20,29
20,30
21,22
22,23
22,24
23,24
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
42,45
43,44
46,47
47,48
47,49
47,50
47,51
49,50
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
59,62
62,63
63,64
63,65
64,65
64,66
65,66
67,68
69,70
71,72
72,73
72,74
73,74
75,76
75,77
76,77
76,78
77,78
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
88,90
88,91
89,90
91,92
93,94
95,96
96,97
96,98
96,99
96,100
97,98
99,100
101,102
102,103
102,104
103,104
103,105
104,105
107,108
107,109
108,109
111,112
113,114
114,115
114,116
115,116
115,117
116,117
119,120
121,122
122,123
-----nextToken-----
2,4,7,9,10,12,14,15,17,19,24,26,30,33,34,38,40,44,45,48,50,52,54,58,60,61,66,68,70,74,78,79,82,83,87,90,92,94,98,100,105,106,109,110,112,117,118,120,123
-----computeFrom-----
31,32
31,33
72,73
72,74
75,76
75,77
85,86
85,87
114,115
114,116
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;ExpressionList;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int mem_read(jas_stream_obj_t *obj, char *buf, int cnt){	ssize_t n;	assert(cnt >= 0);	assert(buf);	JAS_DBGLOG(100, ("mem_read(%p, %p, %d)\n", obj, buf, cnt));	jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;	n = m->len_ - m->pos_;	cnt = JAS_MIN(n, cnt);	memcpy(buf, &m->buf_[m->pos_], cnt);	m->pos_ += cnt;	return cnt;}
static int
mem_read(jas_stream_obj_t *obj, char *buf, int cnt)
mem_read
jas_stream_obj_t *obj
jas_stream_obj_t
jas_stream_obj_t
*obj
*
obj
char *buf
char
*buf
*
buf
int cnt
int
cnt
cnt
{	ssize_t n;	assert(cnt >= 0);	assert(buf);	JAS_DBGLOG(100, ("mem_read(%p, %p, %d)\n", obj, buf, cnt));	jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;	n = m->len_ - m->pos_;	cnt = JAS_MIN(n, cnt);	memcpy(buf, &m->buf_[m->pos_], cnt);	m->pos_ += cnt;	return cnt;}
ssize_t n;
ssize_t n;
ssize_t
ssize_t
n
n
assert(cnt >= 0);
assert(cnt >= 0)
assert
assert
cnt >= 0
cnt
cnt
0
assert(buf);
assert(buf)
assert
assert
buf
buf
JAS_DBGLOG(100, ("mem_read(%p, %p, %d)\n", obj, buf, cnt));
JAS_DBGLOG(100, ("mem_read(%p, %p, %d)\n", obj, buf, cnt))
JAS_DBGLOG
JAS_DBGLOG
100
("mem_read(%p, %p, %d)\n", obj, buf, cnt)
"mem_read(%p, %p, %d)\n", obj, buf, cnt
"mem_read(%p, %p, %d)\n"
obj
obj
buf
buf
cnt
cnt
jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;
jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;
jas_stream_memobj_t
jas_stream_memobj_t
*m = (jas_stream_memobj_t *)obj
*
m
= (jas_stream_memobj_t *)obj
(jas_stream_memobj_t *)obj
jas_stream_memobj_t *
jas_stream_memobj_t
jas_stream_memobj_t
*
*
obj
obj
n = m->len_ - m->pos_;
n = m->len_ - m->pos_
n
n
m->len_ - m->pos_
m->len_
m
m
len_
m->pos_
m
m
pos_
cnt = JAS_MIN(n, cnt);
cnt = JAS_MIN(n, cnt)
cnt
cnt
JAS_MIN(n, cnt)
JAS_MIN
JAS_MIN
n
n
cnt
cnt
memcpy(buf, &m->buf_[m->pos_], cnt);
memcpy(buf, &m->buf_[m->pos_], cnt)
memcpy
memcpy
buf
buf
&m->buf_[m->pos_]
m->buf_[m->pos_]
m->buf_
m
m
buf_
m->pos_
m
m
pos_
cnt
cnt
m->pos_ += cnt;
m->pos_ += cnt
m->pos_
m
m
pos_
cnt
cnt
return cnt;
cnt
cnt
-----joern-----
(8,33,0)
(13,49,0)
(30,45,0)
(26,45,0)
(2,24,0)
(41,45,0)
(10,14,0)
(31,43,0)
(19,29,0)
(11,50,0)
(32,49,0)
(36,7,0)
(15,49,0)
(7,21,0)
(12,49,0)
(18,6,0)
(45,2,0)
(2,48,0)
(42,40,0)
(45,6,0)
(50,45,0)
(14,18,0)
(39,43,0)
(14,10,0)
(16,29,0)
(1,18,0)
(9,48,0)
(17,8,0)
(34,24,0)
(38,39,0)
(48,6,0)
(43,0,0)
(45,50,0)
(31,3,0)
(20,10,0)
(27,29,0)
(23,29,0)
(5,47,0)
(4,36,0)
(3,37,0)
(31,47,0)
(29,6,0)
(40,3,0)
(46,17,0)
(31,8,0)
(24,2,0)
(25,2,0)
(47,49,0)
(28,19,0)
(18,14,0)
(29,19,0)
(47,14,0)
(35,14,0)
(31,7,0)
(22,49,0)
(48,2,0)
(44,49,0)
(19,28,1)
(2,48,1)
(40,42,1)
(38,24,1)
(43,39,1)
(35,19,1)
(46,50,1)
(18,1,1)
(5,50,1)
(14,18,1)
(45,6,1)
(26,41,1)
(11,45,1)
(31,3,1)
(31,8,1)
(23,16,1)
(29,6,1)
(31,47,1)
(17,46,1)
(18,6,1)
(41,10,1)
(31,7,1)
(4,19,1)
(24,34,1)
(7,36,1)
(29,27,1)
(8,17,1)
(24,2,1)
(47,14,1)
(48,6,1)
(19,29,1)
(20,14,1)
(34,2,1)
(50,45,1)
(45,30,1)
(47,5,1)
(3,40,1)
(28,29,1)
(10,20,1)
(42,10,1)
(31,43,1)
(36,4,1)
(50,11,1)
(10,14,1)
(9,25,1)
(16,24,1)
(45,2,1)
(27,23,1)
(48,9,1)
(39,38,1)
(30,26,1)
(1,35,1)
(40,10,2)
(17,50,2)
(30,10,2)
(28,24,2)
(5,50,2)
(42,10,2)
(8,50,2)
(38,24,2)
(35,19,2)
(45,10,2)
(29,24,2)
(7,19,2)
(29,6,2)
(19,29,2)
(27,24,2)
(41,10,2)
(16,24,2)
(23,24,2)
(46,50,2)
(50,45,2)
(36,19,2)
(50,10,2)
(39,24,2)
(2,48,2)
(31,7,2)
(45,2,2)
(18,6,2)
(47,50,2)
(31,3,2)
(26,10,2)
(31,47,2)
(47,14,2)
(31,43,2)
(14,19,2)
(10,14,2)
(24,2,2)
(31,8,2)
(20,19,2)
(3,10,2)
(18,19,2)
(48,6,2)
(10,19,2)
(4,19,2)
(1,19,2)
(11,10,2)
(45,6,2)
(14,18,2)
(43,24,2)
(19,24,2)
-----------------------------------
(0,)
(1,stream)
(2,oldpos = jas_stream_tell(stream)
(3,return -1;)
(4,1)
(5,pos)
(6,jas_stream_t *stream)
(7,return -1;)
(8,return -1;)
(9,stream)
(10,(pos = jas_stream_tell(stream)
(11,0)
(12,if ((pos = jas_stream_tell(stream)
(13,pos)
(14,pos = jas_stream_tell(stream)
(15,if (jas_stream_seek(stream, oldpos, SEEK_SET)
(16,stream)
(17,-1)
(18,jas_stream_tell(stream)
(19,jas_stream_seek(stream, 0, SEEK_END)
(20,0)
(21,)
(22,if (jas_stream_seek(stream, 0, SEEK_END)
(23,0)
(24,(oldpos = jas_stream_tell(stream)
(25,oldpos)
(26,oldpos)
(27,SEEK_END)
(28,0)
(29,jas_stream_seek(stream, 0, SEEK_END)
(30,SEEK_SET)
(31,RET)
(32,oldpos)
(33,)
(34,0)
(35,pos)
(36,-1)
(37,)
(38,1)
(39,-1)
(40,-1)
(41,stream)
(42,1)
(43,return -1;)
(44,if ((oldpos = jas_stream_tell(stream)
(45,jas_stream_seek(stream, oldpos, SEEK_SET)
(46,1)
(47,return pos;)
(48,jas_stream_tell(stream)
(49,)
(50,jas_stream_seek(stream, oldpos, SEEK_SET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000080000000000100000000000000a4810000e8030000e8030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffffe694ad6300000000ffffffffffffffff4095ad6300000000ffffffffffffffff4095ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5d00050000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
static int mem_read(jas_stream_obj_t *obj, char *buf, int cnt) {
ssize_t n;
assert(cnt >= 0);
assert(buf);
JAS_DBGLOG(100, ('mem_read(_p, _p, _d) ', obj, buf, cnt));
jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;
n = m->len_ - m->pos_;
cnt = JAS_MIN(n, cnt);
memcpy(buf, &m->buf_[m->pos_], cnt);
m->pos_ += cnt;
return cnt;
=======================
