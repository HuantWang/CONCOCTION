-----label-----
0
-----code-----
void cmdinfo()
{
	fprintf(stderr, "Image Comparison Utility (Version %s).\n",
	  JAS_VERSION);
	fprintf(stderr,
	  "Copyright (c) 2001 Michael David Adams.\n"
	  "All rights reserved.\n"
	  );
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
7,10
7,11
8,9
10,11
13,14
15,16
16,17
16,18
16,19
17,18
19,20
-----nextToken-----
2,4,9,11,12,14,18,20,21
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
void cmdinfo(){	fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);	fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );}
void
cmdinfo()
cmdinfo
{	fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);	fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );}
fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);
fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION)
fprintf
fprintf
stderr
stderr
"Image Comparison Utility (Version %s).\n"
JAS_VERSION
JAS_VERSION
fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );
fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  )
fprintf
fprintf
stderr
stderr
"Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"
-----joern-----
(56,30,0)
(13,36,0)
(44,30,0)
(64,30,0)
(32,15,0)
(51,4,0)
(52,34,0)
(13,19,0)
(69,36,0)
(62,24,0)
(45,41,0)
(72,3,0)
(72,36,0)
(25,12,0)
(61,17,0)
(59,30,0)
(3,4,0)
(13,29,0)
(4,32,0)
(50,27,0)
(14,15,0)
(72,13,0)
(73,12,0)
(29,32,0)
(63,57,0)
(26,38,0)
(48,47,0)
(73,55,0)
(0,17,0)
(15,32,0)
(28,55,0)
(32,34,0)
(20,47,0)
(53,14,0)
(4,3,0)
(14,47,0)
(31,48,0)
(14,12,0)
(23,14,0)
(57,47,0)
(62,35,0)
(35,62,0)
(25,24,0)
(36,30,0)
(54,73,0)
(22,72,0)
(6,63,0)
(67,10,0)
(39,50,0)
(15,46,0)
(24,72,0)
(46,17,0)
(21,46,0)
(46,66,0)
(13,3,0)
(37,47,0)
(41,27,0)
(38,62,0)
(70,30,0)
(40,17,0)
(14,17,0)
(7,9,0)
(72,56,0)
(58,25,0)
(65,14,0)
(38,12,0)
(71,13,0)
(24,25,0)
(15,14,0)
(46,15,0)
(49,0,0)
(3,2,0)
(3,36,0)
(16,46,0)
(57,63,0)
(46,47,0)
(43,46,0)
(8,32,0)
(5,30,0)
(68,36,0)
(3,3,0)
(1,4,0)
(74,3,0)
(11,57,0)
(42,29,0)
(72,24,0)
(63,12,0)
(3,13,0)
(18,50,0)
(55,17,0)
(62,38,0)
(13,13,0)
(24,62,0)
(60,56,0)
(29,13,0)
(55,73,0)
(33,41,0)
(48,47,1)
(23,65,1)
(55,73,1)
(43,16,1)
(72,3,1)
(40,57,1)
(73,12,1)
(57,63,1)
(17,61,1)
(21,8,1)
(22,57,1)
(42,71,1)
(31,55,1)
(11,47,1)
(29,32,1)
(71,50,1)
(39,32,1)
(54,28,1)
(28,17,1)
(13,36,1)
(13,13,1)
(55,17,1)
(29,42,1)
(3,13,1)
(61,40,1)
(62,38,1)
(13,3,1)
(24,25,1)
(50,27,1)
(8,55,1)
(1,51,1)
(16,21,1)
(41,45,1)
(51,74,1)
(18,39,1)
(49,3,1)
(14,12,1)
(72,36,1)
(46,66,1)
(3,36,1)
(4,32,1)
(15,14,1)
(38,12,1)
(48,31,1)
(46,17,1)
(20,36,1)
(73,54,1)
(38,26,1)
(26,22,1)
(49,7,1)
(65,46,1)
(49,13,1)
(53,23,1)
(56,72,1)
(11,48,1)
(37,20,1)
(68,69,1)
(45,33,1)
(72,13,1)
(36,68,1)
(15,46,1)
(0,17,1)
(24,62,1)
(6,11,1)
(62,35,1)
(32,15,1)
(63,6,1)
(41,27,1)
(13,29,1)
(47,37,1)
(46,43,1)
(60,56,1)
(14,17,1)
(58,62,1)
(28,0,1)
(72,24,1)
(0,49,1)
(3,4,1)
(33,50,1)
(25,58,1)
(3,3,1)
(4,1,1)
(50,18,1)
(63,12,1)
(74,41,1)
(46,47,1)
(25,12,1)
(57,47,1)
(14,47,1)
(14,53,1)
(7,41,1)
(55,55,2)
(4,41,2)
(65,55,2)
(62,38,2)
(3,3,2)
(55,73,2)
(14,17,2)
(31,57,2)
(72,24,2)
(54,55,2)
(7,41,2)
(0,17,2)
(71,50,2)
(13,13,2)
(3,41,2)
(72,36,2)
(3,36,2)
(73,55,2)
(13,29,2)
(60,56,2)
(48,47,2)
(73,12,2)
(17,57,2)
(25,12,2)
(74,41,2)
(46,66,2)
(57,63,2)
(55,57,2)
(14,12,2)
(50,55,2)
(63,57,2)
(53,55,2)
(16,55,2)
(3,4,2)
(29,50,2)
(61,57,2)
(14,55,2)
(0,55,2)
(13,3,2)
(1,41,2)
(41,50,2)
(14,47,2)
(39,55,2)
(11,57,2)
(72,13,2)
(48,57,2)
(63,12,2)
(15,46,2)
(32,55,2)
(62,35,2)
(54,57,2)
(46,55,2)
(33,50,2)
(73,57,2)
(3,13,2)
(57,47,2)
(43,55,2)
(18,55,2)
(49,55,2)
(41,27,2)
(28,55,2)
(57,57,2)
(15,55,2)
(42,50,2)
(23,55,2)
(72,3,2)
(21,55,2)
(45,50,2)
(51,41,2)
(6,57,2)
(46,47,2)
(55,17,2)
(15,14,2)
(24,25,2)
(40,57,2)
(8,55,2)
(38,12,2)
(4,32,2)
(24,62,2)
(13,50,2)
(46,17,2)
(28,57,2)
(50,27,2)
(13,36,2)
(29,32,2)
(32,15,2)
-----------------------------------
(0,j++)
(1,d)
(2,)
(3,s += d * d)
(4,d * d)
(5,i)
(6,x)
(7,abort()
(8,d)
(9,)
(10,)
(11,i)
(12,jas_matrix_t *x)
(13,s += fabs(d)
(14,jas_matrix_get(x, i, j)
(15,jas_matrix_get(y, i, j)
(16,i)
(17,j = 0)
(18,1)
(19,)
(20,i)
(21,y)
(22,s)
(23,i)
(24,(double)
(25,jas_matrix_numcols(x)
(26,x)
(27,int n)
(28,j)
(29,fabs(d)
(30,)
(31,i)
(32,d = jas_matrix_get(y, i, j)
(33,n)
(34,)
(35,double)
(36,s = 0.0)
(37,0)
(38,jas_matrix_numrows(x)
(39,n)
(40,j)
(41,n == 2)
(42,d)
(43,j)
(44,for (i = 0; i < jas_matrix_numrows(x)
(45,2)
(46,jas_matrix_get(y, i, j)
(47,i = 0)
(48,i++)
(49,j)
(50,n == 1)
(51,d)
(52,if (n == 1)
(53,j)
(54,x)
(55,j < jas_matrix_numcols(x)
(56,return s / ((double)
(57,i < jas_matrix_numrows(x)
(58,x)
(59,s)
(60,RET)
(61,0)
(62,(double)
(63,jas_matrix_numrows(x)
(64,d)
(65,x)
(66,jas_matrix_t *y)
(67,for (j = 0; j < jas_matrix_numcols(x)
(68,0.0)
(69,s)
(70,j)
(71,s)
(72,s / ((double)
(73,jas_matrix_numcols(x)
(74,s)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000ffffffff0100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffff21faa66300000000ffffffffffffffff21faa66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
arg03:0x0000000000
arg02:0x000000
arg01:0x000000
arg00:0x2d76ff
=========trace=========
void cmdinfo() {
fprintf(stderr, 'Image Comparison Utility (Version _s). ', 	  JAS_VERSION);
fprintf(stderr, 	  'Copyright (c) 2001 Michael David Adams. ' 	  'All rights reserved. ' 	  );
=======================
