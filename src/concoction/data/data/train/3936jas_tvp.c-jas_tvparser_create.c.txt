-----label-----
0
-----code-----
jas_tvparser_t *jas_tvparser_create(const char *s)
{
	jas_tvparser_t *tvp;
	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {
		return 0;
	}
	if (!(tvp->buf = jas_strdup(s))) {
		jas_tvparser_destroy(tvp);
		return 0;
	}
	tvp->pos = tvp->buf;
	tvp->tag = 0;
	tvp->val = 0;
	return tvp;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
9,10
9,11
12,13
12,14
12,15
12,16
12,17
12,18
12,19
13,14
14,15
14,16
15,16
17,18
17,19
20,21
20,22
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
34,35
35,36
37,38
37,39
38,39
39,40
40,41
40,42
41,42
41,43
42,43
45,46
45,47
46,47
48,49
50,51
50,52
51,52
52,53
52,54
53,54
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
65,66
65,67
66,67
69,70
70,71
70,72
71,72
71,73
72,73
76,77
77,78
77,79
78,79
78,80
79,80
83,84
84,85
-----nextToken-----
3,5,6,8,10,11,16,18,19,25,28,32,33,36,43,44,47,49,54,56,58,63,64,67,68,73,74,75,80,81,82,85
-----computeFrom-----
23,24
23,25
40,41
40,42
60,61
60,62
70,71
70,72
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;CompoundStatement;ReturnStatement;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
jas_tvparser_t *jas_tvparser_create(const char *s){	jas_tvparser_t *tvp;	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}	if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}	tvp->pos = tvp->buf;	tvp->tag = 0;	tvp->val = 0;	return tvp;}
jas_tvparser_t
jas_tvparser_t
*jas_tvparser_create(const char *s)
*
jas_tvparser_create
const char *s
const char
*s
*
s
{	jas_tvparser_t *tvp;	if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}	if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}	tvp->pos = tvp->buf;	tvp->tag = 0;	tvp->val = 0;	return tvp;}
jas_tvparser_t *tvp;
jas_tvparser_t *tvp;
jas_tvparser_t
jas_tvparser_t
*tvp
*
tvp
if (!(tvp = jas_malloc(sizeof(jas_tvparser_t)))) {		return 0;	}
!(tvp = jas_malloc(sizeof(jas_tvparser_t)))
(tvp = jas_malloc(sizeof(jas_tvparser_t)))
tvp = jas_malloc(sizeof(jas_tvparser_t))
tvp
tvp
jas_malloc(sizeof(jas_tvparser_t))
jas_malloc
jas_malloc
sizeof(jas_tvparser_t)
jas_tvparser_t
jas_tvparser_t
jas_tvparser_t

{		return 0;	}
return 0;
0
if (!(tvp->buf = jas_strdup(s))) {		jas_tvparser_destroy(tvp);		return 0;	}
!(tvp->buf = jas_strdup(s))
(tvp->buf = jas_strdup(s))
tvp->buf = jas_strdup(s)
tvp->buf
tvp
tvp
buf
jas_strdup(s)
jas_strdup
jas_strdup
s
s
{		jas_tvparser_destroy(tvp);		return 0;	}
jas_tvparser_destroy(tvp);
jas_tvparser_destroy(tvp)
jas_tvparser_destroy
jas_tvparser_destroy
tvp
tvp
return 0;
0
tvp->pos = tvp->buf;
tvp->pos = tvp->buf
tvp->pos
tvp
tvp
pos
tvp->buf
tvp
tvp
buf
tvp->tag = 0;
tvp->tag = 0
tvp->tag
tvp
tvp
tag
0
tvp->val = 0;
tvp->val = 0
tvp->val
tvp
tvp
val
0
return tvp;
tvp
tvp
-----joern-----
(8,9,0)
(9,10,0)
(12,10,0)
(11,3,0)
(9,3,0)
(4,11,0)
(4,6,0)
(1,11,0)
(7,3,0)
(5,7,0)
(0,7,0)
(11,4,0)
(13,11,0)
(8,7,1)
(2,9,1)
(5,0,1)
(9,8,1)
(11,3,1)
(9,3,1)
(1,13,1)
(11,1,1)
(13,7,1)
(7,3,1)
(7,5,1)
(4,11,1)
(8,4,1)
(7,3,2)
(13,7,2)
(11,3,2)
(11,7,2)
(1,7,2)
(4,11,2)
(9,3,2)
(4,7,2)
-----------------------------------
(0,tvp)
(1,buf)
(2,RET)
(3,jas_tvparser_t *tvp)
(4,jas_free(tvp->buf)
(5,buf)
(6,)
(7,tvp->buf)
(8,tvp)
(9,jas_free(tvp)
(10,)
(11,tvp->buf)
(12,if (tvp->buf)
(13,tvp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff1a34ad6300000000ffffffffffffffff4534ad6300000000ffffffffffffffff4534ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5c00030000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
jas_tvparser_t *jas_tvparser_create(const char *s) {
jas_tvparser_t *tvp;
tvp->pos = tvp->buf;
tvp->tag = 0;
tvp->val = 0;
return tvp;
=======================
