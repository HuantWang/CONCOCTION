-----label-----
0
-----code-----
void cmdinfo()
{
	fprintf(stderr, "Image Comparison Utility (Version %s).\n",
	  JAS_VERSION);
	fprintf(stderr,
	  "Copyright (c) 2001 Michael David Adams.\n"
	  "All rights reserved.\n"
	  );
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
7,10
7,11
8,9
10,11
13,14
15,16
16,17
16,18
16,19
17,18
19,20
-----nextToken-----
2,4,9,11,12,14,18,20,21
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
void cmdinfo(){	fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);	fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );}
void
cmdinfo()
cmdinfo
{	fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);	fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );}
fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION);
fprintf(stderr, "Image Comparison Utility (Version %s).\n",	  JAS_VERSION)
fprintf
fprintf
stderr
stderr
"Image Comparison Utility (Version %s).\n"
JAS_VERSION
JAS_VERSION
fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  );
fprintf(stderr,	  "Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"	  )
fprintf
fprintf
stderr
stderr
"Copyright (c) 2001 Michael David Adams.\n"	  "All rights reserved.\n"
-----joern-----
(13,37,0)
(21,68,0)
(45,31,0)
(4,19,0)
(5,33,0)
(33,62,0)
(11,56,0)
(62,33,0)
(72,20,0)
(28,61,0)
(53,13,0)
(31,45,0)
(22,5,0)
(65,51,0)
(48,62,0)
(29,51,0)
(39,57,0)
(39,20,0)
(42,74,0)
(44,52,0)
(35,18,0)
(27,39,0)
(64,5,0)
(0,56,0)
(62,37,0)
(62,70,0)
(46,47,0)
(29,40,0)
(14,18,0)
(25,37,0)
(51,15,0)
(16,62,0)
(63,39,0)
(17,37,0)
(58,64,0)
(62,20,0)
(38,20,0)
(30,72,0)
(60,14,0)
(55,49,0)
(50,26,0)
(45,29,0)
(64,52,0)
(33,5,0)
(41,23,0)
(39,33,0)
(43,56,0)
(51,51,0)
(39,37,0)
(51,10,0)
(69,40,0)
(67,39,0)
(5,68,0)
(74,71,0)
(26,56,0)
(66,10,0)
(49,57,0)
(52,40,0)
(8,20,0)
(19,45,0)
(52,64,0)
(10,51,0)
(49,54,0)
(29,52,0)
(52,7,0)
(29,26,0)
(2,74,0)
(19,57,0)
(52,52,0)
(29,45,0)
(33,39,0)
(54,20,0)
(40,56,0)
(32,56,0)
(59,57,0)
(45,19,0)
(12,62,0)
(18,37,0)
(14,57,0)
(54,49,0)
(36,29,0)
(18,14,0)
(10,5,0)
(31,3,0)
(9,10,0)
(1,59,0)
(23,71,0)
(34,54,0)
(31,59,0)
(6,23,0)
(3,31,0)
(51,52,0)
(73,40,0)
(59,31,0)
(52,51,0)
(24,56,0)
(51,40,0)
(65,74,1)
(36,54,1)
(52,40,1)
(13,53,1)
(33,62,1)
(35,37,1)
(9,66,1)
(18,37,1)
(52,64,1)
(29,40,1)
(18,14,1)
(55,34,1)
(64,5,1)
(29,51,1)
(69,73,1)
(30,18,1)
(59,1,1)
(63,67,1)
(72,30,1)
(12,48,1)
(5,33,1)
(67,62,1)
(52,52,1)
(29,52,1)
(74,71,1)
(10,5,1)
(53,51,1)
(14,57,1)
(8,40,1)
(66,65,1)
(14,60,1)
(2,23,1)
(33,39,1)
(45,31,1)
(41,6,1)
(62,20,1)
(60,35,1)
(45,19,1)
(31,3,1)
(46,74,1)
(74,42,1)
(49,57,1)
(39,20,1)
(4,31,1)
(48,22,1)
(62,16,1)
(58,44,1)
(23,41,1)
(39,27,1)
(27,63,1)
(40,69,1)
(52,51,1)
(54,49,1)
(6,5,1)
(53,46,1)
(59,57,1)
(44,23,1)
(19,57,1)
(19,4,1)
(34,72,1)
(17,25,1)
(37,17,1)
(16,12,1)
(31,59,1)
(64,58,1)
(39,37,1)
(42,2,1)
(62,37,1)
(72,20,1)
(51,10,1)
(38,8,1)
(13,37,1)
(35,13,1)
(51,51,1)
(51,52,1)
(53,52,1)
(25,54,1)
(49,55,1)
(51,40,1)
(29,45,1)
(22,18,1)
(39,57,1)
(26,29,1)
(10,9,1)
(34,20,1)
(20,38,1)
(1,36,1)
(54,20,1)
(62,70,1)
(50,26,1)
(23,71,1)
(16,18,2)
(18,54,2)
(45,19,2)
(29,40,2)
(49,57,2)
(14,18,2)
(10,5,2)
(25,54,2)
(10,74,2)
(29,51,2)
(14,57,2)
(13,37,2)
(42,23,2)
(2,23,2)
(18,18,2)
(27,18,2)
(29,45,2)
(41,18,2)
(52,40,2)
(18,37,2)
(50,26,2)
(45,31,2)
(30,54,2)
(72,20,2)
(22,18,2)
(54,20,2)
(39,18,2)
(39,57,2)
(39,37,2)
(64,5,2)
(65,74,2)
(62,20,2)
(52,52,2)
(9,74,2)
(62,18,2)
(62,37,2)
(5,33,2)
(34,54,2)
(74,71,2)
(14,54,2)
(19,57,2)
(74,23,2)
(23,18,2)
(51,40,2)
(66,74,2)
(48,18,2)
(35,54,2)
(44,23,2)
(52,64,2)
(33,62,2)
(72,54,2)
(64,23,2)
(12,18,2)
(29,52,2)
(51,52,2)
(17,54,2)
(54,49,2)
(58,23,2)
(46,74,2)
(53,18,2)
(51,74,2)
(33,39,2)
(52,23,2)
(63,18,2)
(62,70,2)
(18,14,2)
(13,18,2)
(35,18,2)
(51,51,2)
(5,18,2)
(39,20,2)
(49,54,2)
(55,54,2)
(23,71,2)
(60,54,2)
(6,18,2)
(33,18,2)
(67,18,2)
(51,10,2)
(59,57,2)
(60,18,2)
(54,54,2)
(31,3,2)
(37,54,2)
(52,51,2)
(31,59,2)
-----------------------------------
(0,d)
(1,x)
(2,n)
(3,double)
(4,x)
(5,d = jas_matrix_get(y, i, j)
(6,n)
(7,)
(8,i)
(9,d)
(10,d * d)
(11,j)
(12,i)
(13,j++)
(14,jas_matrix_numcols(x)
(15,)
(16,j)
(17,0)
(18,j < jas_matrix_numcols(x)
(19,jas_matrix_numcols(x)
(20,i = 0)
(21,if (n == 1)
(22,d)
(23,n == 1)
(24,i)
(25,j)
(26,return s / ((double)
(27,j)
(28,for (j = 0; j < jas_matrix_numcols(x)
(29,s / ((double)
(30,i)
(31,(double)
(32,s)
(33,jas_matrix_get(y, i, j)
(34,i)
(35,j)
(36,s)
(37,j = 0)
(38,0)
(39,jas_matrix_get(x, i, j)
(40,s = 0.0)
(41,1)
(42,2)
(43,for (i = 0; i < jas_matrix_numrows(x)
(44,s)
(45,(double)
(46,abort()
(47,)
(48,y)
(49,jas_matrix_numrows(x)
(50,RET)
(51,s += d * d)
(52,s += fabs(d)
(53,j)
(54,i < jas_matrix_numrows(x)
(55,x)
(56,)
(57,jas_matrix_t *x)
(58,d)
(59,jas_matrix_numrows(x)
(60,x)
(61,)
(62,jas_matrix_get(y, i, j)
(63,i)
(64,fabs(d)
(65,s)
(66,d)
(67,x)
(68,)
(69,0.0)
(70,jas_matrix_t *y)
(71,int n)
(72,i++)
(73,s)
(74,n == 2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000ffffffff0100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff1a34ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
arg03:0x0000000000
arg02:0x000000
arg01:0x000000
arg00:0x000000
=========trace=========
void cmdinfo() {
fprintf(stderr, 'Image Comparison Utility (Version _s). ', 	  JAS_VERSION);
fprintf(stderr, 	  'Copyright (c) 2001 Michael David Adams. ' 	  'All rights reserved. ' 	  );
=======================
