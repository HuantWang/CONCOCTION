-----label-----
0
-----code-----
void jas_image_clearfmts()
{
	int i;
	jas_image_fmtinfo_t *fmtinfo;
	for (i = 0; i < jas_image_numfmts; ++i) {
		fmtinfo = &jas_image_fmtinfos[i];
		if (fmtinfo->name) {
			jas_free(fmtinfo->name);
			fmtinfo->name = 0;
		}
		if (fmtinfo->ext) {
			jas_free(fmtinfo->ext);
			fmtinfo->ext = 0;
		}
		if (fmtinfo->desc) {
			jas_free(fmtinfo->desc);
			fmtinfo->desc = 0;
		}
	}
	jas_image_numfmts = 0;
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
15,17
18,19
18,20
18,21
18,22
19,20
20,21
20,22
21,22
24,25
24,26
25,26
27,28
29,30
30,31
32,33
32,34
32,35
32,36
33,34
34,35
34,36
35,36
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
51,52
53,54
53,55
54,55
57,58
58,59
58,60
59,60
59,61
60,61
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
75,76
78,79
79,80
79,81
80,81
80,82
81,82
85,86
85,87
86,87
86,88
87,88
90,91
90,92
91,92
92,93
92,94
93,94
95,96
95,97
96,97
99,100
100,101
100,102
101,102
101,103
102,103
106,107
107,108
107,109
108,109
-----nextToken-----
2,4,8,10,14,16,17,22,23,26,28,31,36,40,42,46,47,52,55,56,61,62,63,67,68,73,76,77,82,83,84,88,89,94,97,98,103,104,105,109,110
-----computeFrom-----
20,21
20,22
24,25
24,26
34,35
34,36
58,59
58,60
79,80
79,81
100,101
100,102
107,108
107,109
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void jas_image_clearfmts(){	int i;	jas_image_fmtinfo_t *fmtinfo;	for (i = 0; i < jas_image_numfmts; ++i) {		fmtinfo = &jas_image_fmtinfos[i];		if (fmtinfo->name) {			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}		if (fmtinfo->ext) {			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}		if (fmtinfo->desc) {			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}	}	jas_image_numfmts = 0;}
void
jas_image_clearfmts()
jas_image_clearfmts
{	int i;	jas_image_fmtinfo_t *fmtinfo;	for (i = 0; i < jas_image_numfmts; ++i) {		fmtinfo = &jas_image_fmtinfos[i];		if (fmtinfo->name) {			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}		if (fmtinfo->ext) {			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}		if (fmtinfo->desc) {			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}	}	jas_image_numfmts = 0;}
int i;
int i;
int
i
i
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t *fmtinfo;
jas_image_fmtinfo_t
jas_image_fmtinfo_t
*fmtinfo
*
fmtinfo
for (i = 0; i < jas_image_numfmts; ++i) {		fmtinfo = &jas_image_fmtinfos[i];		if (fmtinfo->name) {			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}		if (fmtinfo->ext) {			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}		if (fmtinfo->desc) {			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}	}
i = 0;
i = 0
i
i
0
i < jas_image_numfmts
i
i
jas_image_numfmts
jas_image_numfmts
++i
i
i
{		fmtinfo = &jas_image_fmtinfos[i];		if (fmtinfo->name) {			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}		if (fmtinfo->ext) {			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}		if (fmtinfo->desc) {			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}	}
fmtinfo = &jas_image_fmtinfos[i];
fmtinfo = &jas_image_fmtinfos[i]
fmtinfo
fmtinfo
&jas_image_fmtinfos[i]
jas_image_fmtinfos[i]
jas_image_fmtinfos
jas_image_fmtinfos
i
i
if (fmtinfo->name) {			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}
fmtinfo->name
fmtinfo
fmtinfo
name
{			jas_free(fmtinfo->name);			fmtinfo->name = 0;		}
jas_free(fmtinfo->name);
jas_free(fmtinfo->name)
jas_free
jas_free
fmtinfo->name
fmtinfo
fmtinfo
name
fmtinfo->name = 0;
fmtinfo->name = 0
fmtinfo->name
fmtinfo
fmtinfo
name
0
if (fmtinfo->ext) {			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}
fmtinfo->ext
fmtinfo
fmtinfo
ext
{			jas_free(fmtinfo->ext);			fmtinfo->ext = 0;		}
jas_free(fmtinfo->ext);
jas_free(fmtinfo->ext)
jas_free
jas_free
fmtinfo->ext
fmtinfo
fmtinfo
ext
fmtinfo->ext = 0;
fmtinfo->ext = 0
fmtinfo->ext
fmtinfo
fmtinfo
ext
0
if (fmtinfo->desc) {			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}
fmtinfo->desc
fmtinfo
fmtinfo
desc
{			jas_free(fmtinfo->desc);			fmtinfo->desc = 0;		}
jas_free(fmtinfo->desc);
jas_free(fmtinfo->desc)
jas_free
jas_free
fmtinfo->desc
fmtinfo
fmtinfo
desc
fmtinfo->desc = 0;
fmtinfo->desc = 0
fmtinfo->desc
fmtinfo
fmtinfo
desc
0
jas_image_numfmts = 0;
jas_image_numfmts = 0
jas_image_numfmts
jas_image_numfmts
0
-----joern-----
(4,5,0)
(24,4,0)
(26,0,0)
(14,5,0)
(26,15,0)
(5,2,0)
(21,26,0)
(1,27,0)
(32,24,0)
(9,8,0)
(17,24,0)
(4,24,0)
(18,8,0)
(30,5,0)
(28,16,0)
(8,0,0)
(25,27,0)
(0,2,0)
(10,29,0)
(11,33,0)
(16,5,0)
(13,33,0)
(27,33,0)
(29,15,0)
(31,0,0)
(29,5,0)
(12,4,0)
(3,0,0)
(1,16,0)
(24,17,0)
(6,33,0)
(19,4,0)
(22,20,0)
(24,7,0)
(16,23,0)
(1,16,1)
(24,4,1)
(27,25,1)
(32,4,1)
(12,19,1)
(5,30,1)
(10,26,1)
(9,18,1)
(25,8,1)
(16,5,1)
(18,29,1)
(26,0,1)
(8,0,1)
(19,8,1)
(16,28,1)
(24,7,1)
(24,32,1)
(4,5,1)
(0,3,1)
(30,14,1)
(29,10,1)
(4,12,1)
(17,24,1)
(28,17,1)
(21,17,1)
(29,5,1)
(3,31,1)
(14,0,1)
(1,27,1)
(18,5,1)
(26,21,1)
(8,9,1)
(26,17,2)
(18,17,2)
(24,4,2)
(8,17,2)
(4,8,2)
(28,17,2)
(17,24,2)
(17,8,2)
(10,17,2)
(29,5,2)
(16,17,2)
(19,8,2)
(4,5,2)
(24,8,2)
(32,8,2)
(21,17,2)
(9,17,2)
(16,5,2)
(1,16,2)
(27,8,2)
(26,0,2)
(12,8,2)
(29,17,2)
(1,27,2)
(24,7,2)
(25,8,2)
(8,0,2)
-----------------------------------
(0,i = 0)
(1,RET)
(2,)
(3,0)
(4,fmtinfo->name)
(5,fmtinfo = jas_image_fmtinfos)
(6,fmtinfo)
(7,const char *name)
(8,i < jas_image_numfmts)
(9,jas_image_numfmts)
(10,fmtinfo)
(11,for (i = 0, fmtinfo = jas_image_fmtinfos; i < jas_image_numfmts; ++i, ++fmtinfo)
(12,name)
(13,i)
(14,fmtinfo)
(15,)
(16,return fmtinfo;)
(17,!strcmp(fmtinfo->name, name)
(18,i)
(19,fmtinfo)
(20,)
(21,i)
(22,if (!strcmp(fmtinfo->name, name)
(23,)
(24,strcmp(fmtinfo->name, name)
(25,0)
(26,++i)
(27,return 0;)
(28,fmtinfo)
(29,++fmtinfo)
(30,jas_image_fmtinfos)
(31,i)
(32,name)
(33,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff6000040000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
void jas_image_clearfmts() {
int i;
jas_image_fmtinfo_t *fmtinfo;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
for(i = 0;i < jas_image_numfmts;++i)
fmtinfo = &jas_image_fmtinfos[i];
if(fmtinfo->name)
jas_free(fmtinfo->name);
fmtinfo->name = 0;
if(fmtinfo->ext)
jas_free(fmtinfo->ext);
fmtinfo->ext = 0;
if(fmtinfo->desc)
jas_free(fmtinfo->desc);
fmtinfo->desc = 0;
jas_image_numfmts = 0;
=======================
