-----label-----
1
-----code-----
void*
_TIFFCheckRealloc(TIFF* tif, void* buffer,
		  tmsize_t nmemb, tmsize_t elem_size, const char* what)
{
	void* cp = NULL;
	tmsize_t bytes = nmemb * elem_size;

	/*
	 * XXX: Check for integer overflow.
	 */
	if (nmemb && elem_size && bytes / elem_size == nmemb)
		cp = _TIFFrealloc(buffer, bytes);

	if (cp == NULL) {
		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
			     "Failed to allocate memory for %s "
			     "(%ld elements of %ld bytes each)",
			     what,(long) nmemb, (long) elem_size);
	}

	return cp;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
6,7
6,8
7,8
9,10
9,11
12,13
12,14
14,15
14,16
17,18
17,19
18,19
20,21
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
32,33
32,34
32,35
32,36
32,37
33,34
34,35
34,36
36,37
36,38
36,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
48,49
49,50
49,51
50,51
52,53
54,55
54,56
55,56
55,57
56,57
56,58
57,58
59,60
61,62
61,63
62,63
62,64
63,64
65,66
67,68
69,70
70,71
70,72
71,72
73,74
73,75
73,76
74,75
76,77
78,79
80,81
80,82
81,82
81,83
82,83
84,85
86,87
87,88
88,89
88,90
88,91
88,92
88,93
88,94
88,95
89,90
91,92
91,93
92,93
95,96
95,97
96,97
100,101
102,103
102,104
103,104
103,105
106,107
108,109
108,110
109,110
109,111
112,113
114,115
115,116
-----nextToken-----
2,4,5,8,10,11,13,15,16,19,21,24,26,28,30,31,35,37,38,41,45,47,51,53,58,60,64,66,68,72,75,77,79,83,85,90,93,94,97,98,99,101,104,105,107,110,111,113,116
-----computeFrom-----
49,50
49,51
55,56
55,57
56,57
56,58
61,62
61,63
62,63
62,64
70,71
70,72
81,82
81,83
-----guardedBy-----
64,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
void*_TIFFCheckRealloc(TIFF* tif, void* buffer,		  tmsize_t nmemb, tmsize_t elem_size, const char* what){	void* cp = NULL;	tmsize_t bytes = nmemb * elem_size;	/*	 * XXX: Check for integer overflow.	 */	if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);	if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}	return cp;}
void
*_TIFFCheckRealloc(TIFF* tif, void* buffer,		  tmsize_t nmemb, tmsize_t elem_size, const char* what)
*
_TIFFCheckRealloc
TIFF* tif
TIFF
TIFF
* tif
*
tif
void* buffer
void
* buffer
*
buffer
tmsize_t nmemb
tmsize_t
tmsize_t
nmemb
nmemb
tmsize_t elem_size
tmsize_t
tmsize_t
elem_size
elem_size
const char* what
const char
* what
*
what
{	void* cp = NULL;	tmsize_t bytes = nmemb * elem_size;	/*	 * XXX: Check for integer overflow.	 */	if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);	if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}	return cp;}
void* cp = NULL;
void* cp = NULL;
void
* cp = NULL
*
cp
= NULL
NULL
NULL
tmsize_t bytes = nmemb * elem_size;
tmsize_t bytes = nmemb * elem_size;
tmsize_t
tmsize_t
bytes = nmemb * elem_size
bytes
= nmemb * elem_size
nmemb * elem_size
nmemb
nmemb
elem_size
elem_size
if (nmemb && elem_size && bytes / elem_size == nmemb)		cp = _TIFFrealloc(buffer, bytes);
nmemb && elem_size && bytes / elem_size == nmemb
nmemb && elem_size
nmemb
nmemb
elem_size
elem_size
bytes / elem_size == nmemb
bytes / elem_size
bytes
bytes
elem_size
elem_size
nmemb
nmemb
cp = _TIFFrealloc(buffer, bytes);
cp = _TIFFrealloc(buffer, bytes)
cp
cp
_TIFFrealloc(buffer, bytes)
_TIFFrealloc
_TIFFrealloc
buffer
buffer
bytes
bytes
if (cp == NULL) {		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}
cp == NULL
cp
cp
NULL
NULL
{		TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);	}
TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size);
TIFFErrorExt(tif->tif_clientdata, tif->tif_name,			     "Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)",			     what,(long) nmemb, (long) elem_size)
TIFFErrorExt
TIFFErrorExt
tif->tif_clientdata
tif
tif
tif_clientdata
tif->tif_name
tif
tif
tif_name
"Failed to allocate memory for %s "			     "(%ld elements of %ld bytes each)"
what
what
(long) nmemb
long
long

nmemb
nmemb
(long) elem_size
long
long

elem_size
elem_size
return cp;
cp
cp
-----joern-----
(31,4,0)
(33,9,0)
(29,4,0)
(20,32,0)
(10,36,0)
(7,25,0)
(2,22,0)
(5,12,0)
(16,0,0)
(32,20,0)
(11,16,0)
(21,6,0)
(24,19,0)
(15,12,0)
(13,16,0)
(35,19,0)
(23,16,0)
(27,9,0)
(20,0,0)
(20,39,0)
(0,4,0)
(8,36,0)
(38,5,0)
(26,32,0)
(3,19,0)
(17,35,0)
(31,19,0)
(21,9,0)
(7,36,0)
(19,7,0)
(12,22,0)
(0,20,0)
(17,31,0)
(21,35,0)
(34,13,0)
(12,5,0)
(32,7,0)
(30,0,0)
(1,32,0)
(39,20,0)
(37,7,0)
(13,31,0)
(16,4,0)
(9,7,0)
(28,22,0)
(6,21,0)
(18,13,0)
(13,34,0)
(9,21,0)
(35,14,0)
(22,12,0)
(17,31,1)
(17,35,1)
(31,13,1)
(33,27,1)
(27,5,1)
(31,19,1)
(23,11,1)
(18,16,1)
(22,2,1)
(9,33,1)
(1,30,1)
(12,22,1)
(28,7,1)
(13,18,1)
(20,39,1)
(32,26,1)
(0,20,1)
(20,32,1)
(7,25,1)
(16,0,1)
(24,3,1)
(35,21,1)
(21,6,1)
(19,24,1)
(32,7,1)
(37,19,1)
(9,7,1)
(7,37,1)
(26,1,1)
(13,34,1)
(12,15,1)
(5,12,1)
(11,0,1)
(15,22,1)
(16,23,1)
(30,5,1)
(13,16,1)
(21,9,1)
(5,38,1)
(35,19,1)
(2,28,1)
(38,12,1)
(20,32,2)
(7,25,2)
(16,5,2)
(9,5,2)
(0,20,2)
(30,5,2)
(26,5,2)
(31,5,2)
(33,5,2)
(17,31,2)
(32,5,2)
(5,12,2)
(20,5,2)
(1,5,2)
(18,5,2)
(11,5,2)
(32,7,2)
(12,22,2)
(35,5,2)
(0,5,2)
(20,39,2)
(13,34,2)
(21,5,2)
(13,5,2)
(35,19,2)
(23,5,2)
(27,5,2)
(21,9,2)
(21,6,2)
(31,19,2)
(9,7,2)
(17,35,2)
(13,16,2)
(16,0,2)
-----------------------------------
(0,df = (long double)
(1,i)
(2,part)
(3,i)
(4,)
(5,i.part.high >= 0)
(6,double)
(7,i.value = ui64)
(8,i)
(9,i.value)
(10,if (i.part.high >= 0)
(11,df)
(12,i.part.high)
(13,(double)
(14,)
(15,high)
(16,df += 18446744073709551616.0)
(17,RET)
(18,df)
(19,i.value)
(20,(long double)
(21,(double)
(22,i.part)
(23,18446744073709551616.0)
(24,value)
(25,uint64 ui64)
(26,value)
(27,i)
(28,i)
(29,df)
(30,df)
(31,return (double)
(32,i.value)
(33,value)
(34,double)
(35,return (double)
(36,)
(37,ui64)
(38,0)
(39,long double)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff85f6b26300000000ffffffffffffffff7ff6b26300000000ffffffffffffffff7ff6b26300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x45502b00080000000a000000000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
void* _TIFFCheckRealloc(TIFF* tif, void* buffer, 		  tmsize_t nmemb, tmsize_t elem_size, const char* what) {
void* cp = NULL;
tmsize_t bytes = nmemb * elem_size;
if(nmemb && elem_size && bytes / elem_size == nmemb)
cp = _TIFFrealloc(buffer, bytes);
return cp;
=======================
