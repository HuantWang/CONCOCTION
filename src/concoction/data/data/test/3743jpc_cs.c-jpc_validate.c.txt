-----label-----
0
-----code-----
int jpc_validate(jas_stream_t *in)
{
	int n;
	int i;
	unsigned char buf[2];

	assert(JAS_STREAM_MAXPUTBACK >= 2);

	if ((n = jas_stream_read(in, (char *) buf, 2)) < 0) {
		return -1;
	}
	for (i = n - 1; i >= 0; --i) {
		if (jas_stream_ungetc(in, buf[i]) == EOF) {
			return -1;
		}
	}
	if (n < 2) {
		return -1;
	}
	if (buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff)) {
		return 0;
	}
	return -1;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
12,13
13,14
13,15
15,16
17,18
18,19
18,20
20,21
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
33,34
33,35
34,35
37,38
37,39
38,39
38,40
39,40
40,41
40,42
41,42
43,44
43,45
43,46
43,47
44,45
46,47
48,49
48,50
49,50
49,51
51,52
53,54
57,58
58,59
59,60
61,62
61,63
61,64
61,65
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
70,72
71,72
74,75
75,76
77,78
78,79
78,80
79,80
79,81
80,81
80,82
80,83
81,82
83,84
85,86
85,87
86,87
88,89
90,91
92,93
93,94
94,95
96,97
96,98
97,98
97,99
98,99
101,102
102,103
103,104
105,106
105,107
106,107
106,108
107,108
107,109
108,109
108,110
109,110
112,113
113,114
113,115
114,115
117,118
117,119
118,119
118,120
119,120
122,123
123,124
123,125
124,125
127,128
128,129
130,131
131,132
-----nextToken-----
2,4,7,9,10,14,16,19,21,24,26,28,32,35,36,42,45,47,50,52,54,55,56,60,65,68,69,72,73,76,82,84,87,89,91,95,99,100,104,110,111,115,116,120,121,125,126,129,132
-----computeFrom-----
33,34
33,35
38,39
38,40
40,41
40,42
63,64
63,65
66,67
66,68
70,71
70,72
79,80
79,81
97,98
97,99
106,107
106,108
107,108
107,109
113,114
113,115
117,118
117,119
123,124
123,125
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;LiteralExpression;ReturnStatement;UnaryExpression;LiteralExpression;
-----ast_node-----
int jpc_validate(jas_stream_t *in){	int n;	int i;	unsigned char buf[2];	assert(JAS_STREAM_MAXPUTBACK >= 2);	if ((n = jas_stream_read(in, (char *) buf, 2)) < 0) {		return -1;	}	for (i = n - 1; i >= 0; --i) {		if (jas_stream_ungetc(in, buf[i]) == EOF) {			return -1;		}	}	if (n < 2) {		return -1;	}	if (buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff)) {		return 0;	}	return -1;}
int
jpc_validate(jas_stream_t *in)
jpc_validate
jas_stream_t *in
jas_stream_t
jas_stream_t
*in
*
in
{	int n;	int i;	unsigned char buf[2];	assert(JAS_STREAM_MAXPUTBACK >= 2);	if ((n = jas_stream_read(in, (char *) buf, 2)) < 0) {		return -1;	}	for (i = n - 1; i >= 0; --i) {		if (jas_stream_ungetc(in, buf[i]) == EOF) {			return -1;		}	}	if (n < 2) {		return -1;	}	if (buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff)) {		return 0;	}	return -1;}
int n;
int n;
int
n
n
int i;
int i;
int
i
i
unsigned char buf[2];
unsigned char buf[2];
unsigned char
buf[2]
buf
[2]
2
assert(JAS_STREAM_MAXPUTBACK >= 2);
assert(JAS_STREAM_MAXPUTBACK >= 2)
assert
assert
JAS_STREAM_MAXPUTBACK >= 2
JAS_STREAM_MAXPUTBACK
JAS_STREAM_MAXPUTBACK
2
if ((n = jas_stream_read(in, (char *) buf, 2)) < 0) {		return -1;	}
(n = jas_stream_read(in, (char *) buf, 2)) < 0
(n = jas_stream_read(in, (char *) buf, 2))
n = jas_stream_read(in, (char *) buf, 2)
n
n
jas_stream_read(in, (char *) buf, 2)
jas_stream_read
jas_stream_read
in
in
(char *) buf
char *
char
*
*
buf
buf
2
0
{		return -1;	}
return -1;
-1
1
for (i = n - 1; i >= 0; --i) {		if (jas_stream_ungetc(in, buf[i]) == EOF) {			return -1;		}	}
i = n - 1;
i = n - 1
i
i
n - 1
n
n
1
i >= 0
i
i
0
--i
i
i
{		if (jas_stream_ungetc(in, buf[i]) == EOF) {			return -1;		}	}
if (jas_stream_ungetc(in, buf[i]) == EOF) {			return -1;		}
jas_stream_ungetc(in, buf[i]) == EOF
jas_stream_ungetc(in, buf[i])
jas_stream_ungetc
jas_stream_ungetc
in
in
buf[i]
buf
buf
i
i
EOF
EOF
{			return -1;		}
return -1;
-1
1
if (n < 2) {		return -1;	}
n < 2
n
n
2
{		return -1;	}
return -1;
-1
1
if (buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff)) {		return 0;	}
buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff)
buf[0] == (JPC_MS_SOC >> 8)
buf[0]
buf
buf
0
(JPC_MS_SOC >> 8)
JPC_MS_SOC >> 8
JPC_MS_SOC
JPC_MS_SOC
8
buf[1] == (JPC_MS_SOC & 0xff)
buf[1]
buf
buf
1
(JPC_MS_SOC & 0xff)
JPC_MS_SOC & 0xff
JPC_MS_SOC
JPC_MS_SOC
0xff
{		return 0;	}
return 0;
0
return -1;
-1
1
-----joern-----
(11,2,0)
(77,4,0)
(77,3,0)
(12,23,0)
(30,14,0)
(13,16,0)
(34,0,0)
(40,55,0)
(11,14,0)
(80,14,0)
(47,10,0)
(69,79,0)
(20,58,0)
(42,0,0)
(42,57,0)
(0,37,0)
(48,37,0)
(38,0,0)
(21,17,0)
(36,12,0)
(53,39,0)
(45,18,0)
(76,40,0)
(17,14,0)
(19,32,0)
(44,37,0)
(9,57,0)
(1,42,0)
(68,37,0)
(46,34,0)
(15,11,0)
(66,37,0)
(28,47,0)
(57,32,0)
(26,72,0)
(75,43,0)
(31,55,0)
(60,16,0)
(57,0,0)
(26,50,0)
(22,4,0)
(70,39,0)
(72,26,0)
(62,37,0)
(41,50,0)
(39,70,0)
(30,25,0)
(56,42,0)
(23,12,0)
(14,69,0)
(72,69,0)
(58,71,0)
(50,10,0)
(29,8,0)
(51,70,0)
(52,14,0)
(0,43,0)
(77,11,0)
(40,7,0)
(18,67,0)
(5,42,0)
(18,2,0)
(42,5,0)
(33,12,0)
(6,35,0)
(42,10,0)
(4,61,0)
(73,72,0)
(24,57,0)
(3,59,0)
(43,0,0)
(14,58,0)
(78,71,0)
(8,3,0)
(27,40,0)
(77,30,0)
(77,17,0)
(5,16,0)
(12,67,0)
(65,22,0)
(35,30,0)
(79,69,0)
(69,37,0)
(55,40,0)
(16,5,0)
(64,15,0)
(16,69,0)
(74,69,0)
(63,43,0)
(49,42,0)
(82,23,0)
(54,72,0)
(42,7,0)
(79,23,0)
(23,79,0)
(43,67,0)
(70,10,0)
(34,71,0)
(81,37,0)
(17,37,0)
(50,26,0)
(22,65,1)
(18,67,1)
(46,58,1)
(77,3,1)
(11,15,1)
(39,53,1)
(28,42,1)
(3,8,1)
(77,11,1)
(64,18,1)
(11,14,1)
(70,39,1)
(30,35,1)
(79,23,1)
(40,7,1)
(43,67,1)
(21,47,1)
(70,10,1)
(55,40,1)
(18,45,1)
(30,14,1)
(80,52,1)
(42,56,1)
(54,73,1)
(14,69,1)
(42,5,1)
(55,31,1)
(40,76,1)
(6,42,1)
(82,12,1)
(35,6,1)
(50,26,1)
(47,10,1)
(47,28,1)
(29,70,1)
(60,34,1)
(12,67,1)
(42,10,1)
(23,82,1)
(0,43,1)
(23,12,1)
(49,1,1)
(8,29,1)
(38,69,1)
(77,17,1)
(72,54,1)
(13,60,1)
(58,20,1)
(27,0,1)
(20,14,1)
(75,38,1)
(14,80,1)
(1,5,1)
(77,4,1)
(50,10,1)
(17,14,1)
(31,40,1)
(57,24,1)
(42,57,1)
(65,50,1)
(77,30,1)
(42,0,1)
(5,16,1)
(53,51,1)
(57,0,1)
(34,46,1)
(76,27,1)
(26,72,1)
(4,22,1)
(43,63,1)
(42,7,1)
(51,55,1)
(41,55,1)
(24,9,1)
(17,21,1)
(63,75,1)
(16,69,1)
(69,79,1)
(72,69,1)
(73,41,1)
(36,33,1)
(16,13,1)
(33,74,1)
(9,50,1)
(12,36,1)
(45,47,1)
(52,70,1)
(15,64,1)
(56,49,1)
(60,57,1)
(34,0,1)
(18,67,2)
(70,39,2)
(79,23,2)
(11,47,2)
(49,50,2)
(11,14,2)
(40,7,2)
(4,50,2)
(55,40,2)
(14,70,2)
(24,50,2)
(54,55,2)
(14,69,2)
(3,70,2)
(57,50,2)
(16,69,2)
(80,70,2)
(26,72,2)
(34,70,2)
(22,50,2)
(26,55,2)
(57,0,2)
(72,69,2)
(39,55,2)
(51,55,2)
(77,17,2)
(50,55,2)
(77,11,2)
(30,14,2)
(6,42,2)
(77,3,2)
(1,70,2)
(34,0,2)
(21,47,2)
(8,70,2)
(28,42,2)
(0,43,2)
(53,55,2)
(17,47,2)
(72,55,2)
(42,50,2)
(35,42,2)
(60,50,2)
(70,10,2)
(42,70,2)
(70,55,2)
(15,47,2)
(42,7,2)
(42,57,2)
(58,70,2)
(41,55,2)
(29,70,2)
(13,70,2)
(56,70,2)
(43,67,2)
(56,50,2)
(60,70,2)
(42,0,2)
(17,14,2)
(50,10,2)
(77,4,2)
(13,50,2)
(1,50,2)
(65,50,2)
(18,47,2)
(23,12,2)
(5,50,2)
(73,55,2)
(46,70,2)
(5,16,2)
(20,70,2)
(69,79,2)
(42,10,2)
(49,70,2)
(42,5,2)
(47,10,2)
(64,47,2)
(16,50,2)
(16,70,2)
(5,70,2)
(77,30,2)
(30,42,2)
(45,47,2)
(12,67,2)
(47,42,2)
(50,26,2)
(52,70,2)
(9,50,2)
-----------------------------------
(0,len = ms->len)
(1,cstate)
(2,)
(3,return -1;)
(4,return -1;)
(5,&qcc->compparms)
(6,1)
(7,jpc_cstate_t *cstate)
(8,-1)
(9,len)
(10,jas_stream_t *in)
(11,return -1;)
(12,ms->parms)
(13,compparms)
(14,qcc->compno)
(15,-1)
(16,qcc->compparms)
(17,return 0;)
(18,jpc_qcc_destroyparms(ms)
(19,if (jpc_getuint16(in, &qcc->compno)
(20,tmp)
(21,0)
(22,-1)
(23,ms->parms.qcc)
(24,2)
(25,)
(26,&qcc->compno)
(27,cstate)
(28,in)
(29,1)
(30,return -1;)
(31,256)
(32,)
(33,ms)
(34,--len)
(35,-1)
(36,parms)
(37,)
(38,len)
(39,&tmp)
(40,cstate->numcomps)
(41,in)
(42,jpc_qcx_getcompparms(&qcc->compparms, cstate, in, len)
(43,ms->len)
(44,tmp)
(45,ms)
(46,len)
(47,jas_stream_eof(in)
(48,qcc)
(49,in)
(50,jpc_getuint16(in, &qcc->compno)
(51,in)
(52,qcc)
(53,tmp)
(54,compno)
(55,cstate->numcomps <= 256)
(56,len)
(57,len -= 2)
(58,qcc->compno = tmp)
(59,)
(60,qcc)
(61,)
(62,if (jpc_qcx_getcompparms(&qcc->compparms, cstate, in, len)
(63,len)
(64,1)
(65,1)
(66,if (cstate->numcomps <= 256)
(67,jpc_ms_t *ms)
(68,len)
(69,*qcc = &ms->parms.qcc)
(70,jpc_getuint8(in, &tmp)
(71,)
(72,qcc->compno)
(73,qcc)
(74,qcc)
(75,ms)
(76,numcomps)
(77,RET)
(78,if (jpc_getuint8(in, &tmp)
(79,&ms->parms.qcc)
(80,compno)
(81,if (jas_stream_eof(in)
(82,qcc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000000040000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff1a34ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5f00090000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
arg03:0x4100000000
arg02:0x2d66ff
arg01:0x2d64ff
arg00:0x2d46ff
=========trace=========
int jpc_validate(jas_stream_t *in) {
int n;
int i;
unsigned char buf[2];
assert(JAS_STREAM_MAXPUTBACK >= 2);
for(i = n - 1;i >= 0;--i)
for(i = n - 1;i >= 0;--i)
if(buf[0] == (JPC_MS_SOC >> 8) && buf[1] == (JPC_MS_SOC & 0xff))
return 0;
=======================
