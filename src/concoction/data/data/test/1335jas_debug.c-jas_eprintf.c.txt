-----label-----
0
-----code-----
int jas_eprintf(const char *fmt, ...)
{
	int ret;
	va_list ap;

	va_start(ap, fmt);
	ret = vfprintf(stderr, fmt, ap);
	va_end(ap);
	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
23,26
24,25
26,27
28,29
30,31
31,32
31,33
32,33
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
44,45
44,46
45,46
47,48
49,50
50,51
-----nextToken-----
2,4,6,8,9,13,15,19,21,25,27,29,33,36,38,40,42,46,48,51
-----computeFrom-----
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int jas_eprintf(const char *fmt, ...){	int ret;	va_list ap;	va_start(ap, fmt);	ret = vfprintf(stderr, fmt, ap);	va_end(ap);	return ret;}
int
jas_eprintf(const char *fmt, ...)
jas_eprintf
const char *fmt
const char
*fmt
*
fmt
{	int ret;	va_list ap;	va_start(ap, fmt);	ret = vfprintf(stderr, fmt, ap);	va_end(ap);	return ret;}
int ret;
int ret;
int
ret
ret
va_list ap;
va_list ap;
va_list
va_list
ap
ap
va_start(ap, fmt);
va_start(ap, fmt)
va_start
va_start
ap
ap
fmt
fmt
ret = vfprintf(stderr, fmt, ap);
ret = vfprintf(stderr, fmt, ap)
ret
ret
vfprintf(stderr, fmt, ap)
vfprintf
vfprintf
stderr
stderr
fmt
fmt
ap
ap
va_end(ap);
va_end(ap)
va_end
va_end
ap
ap
return ret;
ret
ret
-----joern-----
(46,16,0)
(11,14,0)
(6,40,0)
(35,0,0)
(20,40,0)
(42,17,0)
(30,53,0)
(17,44,0)
(23,16,0)
(23,44,0)
(23,40,0)
(7,0,0)
(4,40,0)
(49,22,0)
(9,4,0)
(13,26,0)
(25,53,0)
(28,14,0)
(48,7,0)
(6,47,0)
(34,26,0)
(28,16,0)
(6,14,0)
(2,28,0)
(4,3,0)
(28,40,0)
(5,46,0)
(33,0,0)
(38,47,0)
(6,36,0)
(27,14,0)
(26,36,0)
(17,36,0)
(2,3,0)
(39,6,0)
(44,17,0)
(44,7,0)
(54,17,0)
(24,0,0)
(44,23,0)
(45,40,0)
(31,28,0)
(55,16,0)
(50,7,0)
(37,46,0)
(7,8,0)
(29,28,0)
(18,6,0)
(21,23,0)
(26,47,0)
(15,32,0)
(43,23,0)
(10,16,0)
(17,1,0)
(22,16,0)
(53,0,0)
(19,0,0)
(41,4,0)
(14,14,0)
(12,6,0)
(52,2,0)
(23,14,0)
(4,14,0)
(28,2,0)
(51,44,0)
(14,40,0)
(14,40,1)
(41,9,1)
(54,2,1)
(37,16,1)
(28,16,1)
(23,43,1)
(4,41,1)
(26,36,1)
(28,14,1)
(49,2,1)
(21,51,1)
(29,46,1)
(28,40,1)
(13,34,1)
(18,39,1)
(51,42,1)
(17,36,1)
(2,3,1)
(22,49,1)
(12,18,1)
(14,14,1)
(2,52,1)
(53,25,1)
(34,46,1)
(26,13,1)
(6,36,1)
(44,7,1)
(37,22,1)
(16,10,1)
(9,40,1)
(49,17,1)
(40,20,1)
(46,5,1)
(17,44,1)
(25,4,1)
(6,40,1)
(4,14,1)
(28,31,1)
(14,11,1)
(23,14,1)
(10,55,1)
(7,8,1)
(6,14,1)
(7,48,1)
(39,4,1)
(2,28,1)
(27,26,1)
(4,40,1)
(43,21,1)
(30,53,1)
(5,37,1)
(9,14,1)
(4,3,1)
(55,6,1)
(22,16,1)
(42,54,1)
(20,45,1)
(46,16,1)
(23,40,1)
(45,7,1)
(52,28,1)
(44,23,1)
(6,12,1)
(31,29,1)
(11,27,1)
(48,50,1)
(23,16,1)
(9,4,2)
(51,2,2)
(49,46,2)
(2,46,2)
(29,46,2)
(26,36,2)
(26,4,2)
(7,8,2)
(13,4,2)
(4,3,2)
(22,46,2)
(43,2,2)
(17,2,2)
(27,4,2)
(18,4,2)
(11,4,2)
(54,2,2)
(23,40,2)
(12,4,2)
(41,4,2)
(17,44,2)
(6,4,2)
(6,36,2)
(2,3,2)
(46,4,2)
(14,4,2)
(5,4,2)
(31,46,2)
(23,2,2)
(21,2,2)
(16,4,2)
(28,16,2)
(30,53,2)
(14,40,2)
(44,7,2)
(55,4,2)
(28,40,2)
(37,46,2)
(10,4,2)
(4,40,2)
(23,14,2)
(28,46,2)
(17,36,2)
(4,4,2)
(52,46,2)
(28,14,2)
(5,46,2)
(39,4,2)
(44,23,2)
(46,46,2)
(22,16,2)
(23,16,2)
(34,4,2)
(2,28,2)
(6,14,2)
(42,2,2)
(46,16,2)
(6,40,2)
(4,14,2)
(37,4,2)
(44,2,2)
(14,14,2)
-----------------------------------
(0,)
(1,)
(2,i + j < len)
(3,size_t len)
(4,i < len)
(5,16)
(6,fprintf(out, "%04x:", i)
(7,dp = data)
(8,void *data)
(9,i)
(10,0)
(11,16)
(12,i)
(13,"\\n")
(14,i += 16)
(15,if (i + j < len)
(16,j = 0)
(17,fprintf(out, " %02x", dp[i + j])
(18,"%04x:")
(19,dp)
(20,0)
(21,i)
(22,++j)
(23,i + j)
(24,for (i = 0; i < len; i += 16)
(25,0)
(26,fprintf(out, "\\n")
(27,i)
(28,i + j)
(29,i)
(30,RET)
(31,j)
(32,)
(33,i)
(34,out)
(35,j)
(36,FILE *out)
(37,j)
(38,for (j = 0; j < 16; ++j)
(39,out)
(40,i = 0)
(41,len)
(42," %02x")
(43,j)
(44,dp[i + j])
(45,i)
(46,j < 16)
(47,)
(48,data)
(49,j)
(50,dp)
(51,dp)
(52,len)
(53,return 0;)
(54,out)
(55,j)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff9cf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffcaf9a66300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0xff4fff5c00030000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
int jas_eprintf(const char *fmt, ...) {
int ret;
va_list ap;
ret = vfprintf(stderr, fmt, ap);
return ret;
=======================
