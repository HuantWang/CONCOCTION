-----label-----
0
-----code-----
void jas_free(void *ptr)
{
	free(ptr);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
12,13
12,14
13,14
15,16
-----nextToken-----
2,4,6,8,9,14,16
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void jas_free(void *ptr){	free(ptr);}
void
jas_free(void *ptr)
jas_free
void *ptr
void
*ptr
*
ptr
{	free(ptr);}
free(ptr);
free(ptr)
free
free
ptr
ptr
-----joern-----
(5,1,0)
(1,2,0)
(3,5,0)
(5,4,0)
(0,1,0)
(5,3,1)
(5,4,1)
(0,1,1)
(1,5,1)
(0,1,2)
(5,4,2)
-----------------------------------
(0,RET)
(1,return malloc(size)
(2,)
(3,size)
(4,size_t size)
(5,malloc(size)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000001000000ffffffff0100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff1a34ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffff5834ad6300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
arg03:0x01012f00ff
arg02:0x2d66ff
arg01:0x2d46ff
arg00:0x2d64ff
=========trace=========
void jas_free(void *ptr) {
free(ptr);
=======================
