-----label-----
0
-----code-----
static void
unixErrorHandler(const char* module, const char* fmt, va_list ap)
{
	if (module != NULL)
		fprintf(stderr, "%s: ", module);
	vfprintf(stderr, fmt, ap);
	fprintf(stderr, ".\n");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
7,8
7,9
10,11
10,12
12,13
12,14
15,16
15,17
16,17
18,19
20,21
20,22
20,23
21,22
21,23
22,23
22,24
23,24
25,26
27,28
28,29
28,30
28,31
28,32
29,30
31,32
34,35
36,37
37,38
37,39
37,40
37,41
38,39
40,41
42,43
44,45
46,47
47,48
47,49
47,50
48,49
50,51
-----nextToken-----
2,4,6,8,9,11,13,14,17,19,24,26,30,32,33,35,39,41,43,45,49,51,52
-----computeFrom-----
22,23
22,24
-----guardedBy-----
24,35
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
static voidunixErrorHandler(const char* module, const char* fmt, va_list ap){	if (module != NULL)		fprintf(stderr, "%s: ", module);	vfprintf(stderr, fmt, ap);	fprintf(stderr, ".\n");}
static void
unixErrorHandler(const char* module, const char* fmt, va_list ap)
unixErrorHandler
const char* module
const char
* module
*
module
const char* fmt
const char
* fmt
*
fmt
va_list ap
va_list
va_list
ap
ap
{	if (module != NULL)		fprintf(stderr, "%s: ", module);	vfprintf(stderr, fmt, ap);	fprintf(stderr, ".\n");}
if (module != NULL)		fprintf(stderr, "%s: ", module);
module != NULL
module
module
NULL
NULL
fprintf(stderr, "%s: ", module);
fprintf(stderr, "%s: ", module)
fprintf
fprintf
stderr
stderr
"%s: "
module
module
vfprintf(stderr, fmt, ap);
vfprintf(stderr, fmt, ap)
vfprintf
vfprintf
stderr
stderr
fmt
fmt
ap
ap
fprintf(stderr, ".\n");
fprintf(stderr, ".\n")
fprintf
fprintf
stderr
stderr
".\n"
-----joern-----
(10,11,0)
(11,9,0)
(11,4,0)
(2,4,0)
(6,8,0)
(4,11,0)
(4,2,0)
(11,8,0)
(4,1,0)
(11,7,0)
(5,11,0)
(3,4,0)
(8,0,0)
(5,10,1)
(11,9,1)
(3,5,1)
(4,2,1)
(11,4,1)
(11,7,1)
(6,8,1)
(8,11,1)
(4,3,1)
(4,1,1)
(4,2,2)
(4,1,2)
(11,4,2)
(11,9,2)
(6,8,2)
(11,7,2)
-----------------------------------
(0,)
(1,tmsize_t c)
(2,size_t)
(3,c)
(4,(size_t)
(5,p2)
(6,RET)
(7,const void* p1)
(8,return (memcmp(p1, p2, (size_t)
(9,const void* p2)
(10,p1)
(11,memcmp(p1, p2, (size_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------dynamic----------------
=======testcase========
model_version:0x01000000
A-data-stat:0x000800000000000000000020000000000100000000000000a4810000e8030000e9030000ffffffff0000000000000000ffffffffffffffff0010000000000000ffffffffffffffff54edb46300000000ffffffffffffffff95eeb46300000000ffffffffffffffff95eeb46300000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
A-data:0x4d4d002b000800000000000000000015ffffffffff0100000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
=========trace=========
static void unixErrorHandler(const char* module, const char* fmt, va_list ap) {
if(module != NULL)
fprintf(stderr, '_s: ', module);
vfprintf(stderr, fmt, ap);
fprintf(stderr, '. ');
=======================
