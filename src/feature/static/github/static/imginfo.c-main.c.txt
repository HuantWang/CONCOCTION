-----label-----
0
-----code-----
int main(int argc, char **argv)
{
	int fmtid;
	int id;
	char *infile;
	jas_stream_t *instream;
	jas_image_t *image;
	int width;
	int height;
	int depth;
	int numcmpts;
	int verbose;
	char *fmtname;

	if (jas_init()) {
		abort();
	}

	cmdname = argv[0];

	infile = 0;
	verbose = 0;

	/* Parse the command line options. */
	while ((id = jas_getopt(argc, argv, opts)) >= 0) {
		switch (id) {
		case OPT_VERBOSE:
			verbose = 1;
			break;
		case OPT_VERSION:
			printf("%s\n", JAS_VERSION);
			exit(EXIT_SUCCESS);
			break;
		case OPT_INFILE:
			infile = jas_optarg;
			break;
		case OPT_HELP:
		default:
			usage();
			break;
		}
	}

	/* Open the image file. */
	if (infile) {
		/* The image is to be read from a file. */
		if (!(instream = jas_stream_fopen(infile, "rb"))) {
			fprintf(stderr, "cannot open input image file %s\n", infile);
			exit(EXIT_FAILURE);
		}
	} else {
		/* The image is to be read from standard input. */
		if (!(instream = jas_stream_fdopen(0, "rb"))) {
			fprintf(stderr, "cannot open standard input\n");
			exit(EXIT_FAILURE);
		}
	}

	if ((fmtid = jas_image_getfmt(instream)) < 0) {
		fprintf(stderr, "unknown image format\n");
	}

	/* Decode the image. */
	if (!(image = jas_image_decode(instream, fmtid, 0))) {
		fprintf(stderr, "cannot load image\n");
		return EXIT_FAILURE;
	}

	/* Close the image file. */
	jas_stream_close(instream);

	numcmpts = jas_image_numcmpts(image);
	width = jas_image_cmptwidth(image, 0);
	height = jas_image_cmptheight(image, 0);
	depth = jas_image_cmptprec(image, 0);
	if (!(fmtname = jas_image_fmttostr(fmtid))) {
		abort();
	}
	printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image));

	jas_image_destroy(image);
	jas_image_clearfmts();

	return EXIT_SUCCESS;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
7,8
9,10
9,11
11,12
11,13
11,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
15,23
15,24
15,25
15,26
15,27
15,28
15,29
15,30
15,31
15,32
15,33
15,34
15,35
15,36
15,37
15,38
15,39
15,40
15,41
15,42
15,43
15,44
16,17
17,18
17,19
19,20
21,22
22,23
22,24
24,25
26,27
27,28
27,29
29,30
29,31
32,33
33,34
33,35
34,35
36,37
36,38
39,40
40,41
40,42
41,42
43,44
43,45
46,47
47,48
47,49
49,50
51,52
52,53
52,54
54,55
56,57
57,58
57,59
59,60
61,62
62,63
62,64
64,65
66,67
67,68
67,69
69,70
71,72
72,73
72,74
74,75
74,76
77,78
77,79
78,79
79,80
81,82
82,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
90,92
91,92
94,95
95,96
95,97
96,97
99,100
100,101
100,102
101,102
104,105
104,106
105,106
105,107
106,107
107,108
107,109
108,109
110,111
110,112
110,113
110,114
111,112
113,114
115,116
117,118
120,121
121,122
121,123
122,123
124,125
124,126
124,127
124,128
124,129
124,130
124,131
124,132
124,133
124,134
124,135
124,136
124,137
124,138
125,126
126,127
128,129
129,130
129,131
130,131
134,135
135,136
137,138
138,139
138,140
138,141
139,140
142,143
144,145
145,146
145,147
146,147
148,149
149,150
152,153
153,154
155,156
156,157
156,158
157,158
159,160
162,163
163,164
166,167
167,168
168,169
171,172
171,173
171,174
172,173
174,175
175,176
175,177
176,177
177,178
178,179
178,180
179,180
181,182
181,183
181,184
182,183
184,185
187,188
187,189
188,189
189,190
189,191
189,192
189,193
190,191
192,193
195,196
197,198
198,199
198,200
199,200
201,202
202,203
204,205
205,206
205,207
206,207
207,208
208,209
208,210
209,210
211,212
211,213
211,214
212,213
216,217
216,218
217,218
218,219
218,220
218,221
219,220
221,222
224,225
225,226
225,227
226,227
228,229
229,230
231,232
231,233
232,233
232,234
233,234
234,235
234,236
235,236
237,238
237,239
238,239
240,241
243,244
244,245
245,246
245,247
245,248
246,247
248,249
251,252
251,253
252,253
253,254
254,255
254,256
255,256
257,258
257,259
257,260
257,261
258,259
260,261
262,263
265,266
265,267
266,267
267,268
267,269
267,270
268,269
270,271
273,274
274,275
276,277
277,278
277,279
278,279
280,281
282,283
283,284
283,285
284,285
286,287
286,288
287,288
289,290
291,292
292,293
292,294
293,294
295,296
295,297
295,298
296,297
298,299
301,302
302,303
302,304
303,304
305,306
305,307
305,308
306,307
308,309
311,312
312,313
312,314
313,314
315,316
315,317
315,318
316,317
318,319
321,322
321,323
322,323
323,324
324,325
324,326
325,326
327,328
327,329
328,329
330,331
332,333
333,334
334,335
335,336
337,338
338,339
338,340
338,341
338,342
338,343
338,344
338,345
338,346
339,340
342,343
344,345
346,347
348,349
350,351
352,353
352,354
353,354
353,355
356,357
356,358
357,358
359,360
361,362
362,363
362,364
363,364
365,366
367,368
368,369
369,370
371,372
372,373
-----nextToken-----
2,4,6,8,10,12,13,14,18,20,23,25,28,30,31,35,37,38,42,44,45,48,50,53,55,58,60,63,65,68,70,73,75,76,80,85,89,92,93,97,98,102,103,109,112,114,116,118,119,123,127,131,132,133,136,140,141,143,147,150,151,154,158,160,161,164,165,169,170,173,180,183,185,186,191,193,194,196,200,203,210,213,214,215,220,222,223,227,230,236,239,241,242,247,249,250,256,259,261,263,264,269,271,272,275,279,281,285,288,290,294,297,299,300,304,307,309,310,314,317,319,320,326,329,331,336,340,341,343,345,347,349,351,354,355,358,360,364,366,370,373
-----computeFrom-----
87,88
87,89
95,96
95,97
100,101
100,102
105,106
105,107
107,108
107,109
129,130
129,131
156,157
156,158
178,179
178,180
208,209
208,210
232,233
232,234
234,235
234,236
254,255
254,256
283,284
283,285
292,293
292,294
302,303
302,304
312,313
312,314
324,325
324,326
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BreakStatement;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;CompoundStatement;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int main(int argc, char **argv){	int fmtid;	int id;	char *infile;	jas_stream_t *instream;	jas_image_t *image;	int width;	int height;	int depth;	int numcmpts;	int verbose;	char *fmtname;	if (jas_init()) {		abort();	}	cmdname = argv[0];	infile = 0;	verbose = 0;	/* Parse the command line options. */	while ((id = jas_getopt(argc, argv, opts)) >= 0) {		switch (id) {		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}	}	/* Open the image file. */	if (infile) {		/* The image is to be read from a file. */		if (!(instream = jas_stream_fopen(infile, "rb"))) {			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}	} else {		/* The image is to be read from standard input. */		if (!(instream = jas_stream_fdopen(0, "rb"))) {			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}	}	if ((fmtid = jas_image_getfmt(instream)) < 0) {		fprintf(stderr, "unknown image format\n");	}	/* Decode the image. */	if (!(image = jas_image_decode(instream, fmtid, 0))) {		fprintf(stderr, "cannot load image\n");		return EXIT_FAILURE;	}	/* Close the image file. */	jas_stream_close(instream);	numcmpts = jas_image_numcmpts(image);	width = jas_image_cmptwidth(image, 0);	height = jas_image_cmptheight(image, 0);	depth = jas_image_cmptprec(image, 0);	if (!(fmtname = jas_image_fmttostr(fmtid))) {		abort();	}	printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image));	jas_image_destroy(image);	jas_image_clearfmts();	return EXIT_SUCCESS;}
int
main(int argc, char **argv)
main
int argc
int
argc
argc
char **argv
char
**argv
*
*
argv
{	int fmtid;	int id;	char *infile;	jas_stream_t *instream;	jas_image_t *image;	int width;	int height;	int depth;	int numcmpts;	int verbose;	char *fmtname;	if (jas_init()) {		abort();	}	cmdname = argv[0];	infile = 0;	verbose = 0;	/* Parse the command line options. */	while ((id = jas_getopt(argc, argv, opts)) >= 0) {		switch (id) {		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}	}	/* Open the image file. */	if (infile) {		/* The image is to be read from a file. */		if (!(instream = jas_stream_fopen(infile, "rb"))) {			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}	} else {		/* The image is to be read from standard input. */		if (!(instream = jas_stream_fdopen(0, "rb"))) {			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}	}	if ((fmtid = jas_image_getfmt(instream)) < 0) {		fprintf(stderr, "unknown image format\n");	}	/* Decode the image. */	if (!(image = jas_image_decode(instream, fmtid, 0))) {		fprintf(stderr, "cannot load image\n");		return EXIT_FAILURE;	}	/* Close the image file. */	jas_stream_close(instream);	numcmpts = jas_image_numcmpts(image);	width = jas_image_cmptwidth(image, 0);	height = jas_image_cmptheight(image, 0);	depth = jas_image_cmptprec(image, 0);	if (!(fmtname = jas_image_fmttostr(fmtid))) {		abort();	}	printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image));	jas_image_destroy(image);	jas_image_clearfmts();	return EXIT_SUCCESS;}
int fmtid;
int fmtid;
int
fmtid
fmtid
int id;
int id;
int
id
id
char *infile;
char *infile;
char
*infile
*
infile
jas_stream_t *instream;
jas_stream_t *instream;
jas_stream_t
jas_stream_t
*instream
*
instream
jas_image_t *image;
jas_image_t *image;
jas_image_t
jas_image_t
*image
*
image
int width;
int width;
int
width
width
int height;
int height;
int
height
height
int depth;
int depth;
int
depth
depth
int numcmpts;
int numcmpts;
int
numcmpts
numcmpts
int verbose;
int verbose;
int
verbose
verbose
char *fmtname;
char *fmtname;
char
*fmtname
*
fmtname
if (jas_init()) {		abort();	}
jas_init()
jas_init
jas_init
{		abort();	}
abort();
abort()
abort
abort
cmdname = argv[0];
cmdname = argv[0]
cmdname
cmdname
argv[0]
argv
argv
0
infile = 0;
infile = 0
infile
infile
0
verbose = 0;
verbose = 0
verbose
verbose
0
while ((id = jas_getopt(argc, argv, opts)) >= 0) {		switch (id) {		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}	}
(id = jas_getopt(argc, argv, opts)) >= 0
(id = jas_getopt(argc, argv, opts))
id = jas_getopt(argc, argv, opts)
id
id
jas_getopt(argc, argv, opts)
jas_getopt
jas_getopt
argc
argc
argv
argv
opts
opts
0
{		switch (id) {		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}	}
switch (id) {		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}
id
id
{		case OPT_VERBOSE:			verbose = 1;			break;		case OPT_VERSION:			printf("%s\n", JAS_VERSION);			exit(EXIT_SUCCESS);			break;		case OPT_INFILE:			infile = jas_optarg;			break;		case OPT_HELP:		default:			usage();			break;		}
case OPT_VERBOSE:
OPT_VERBOSE
OPT_VERBOSE
verbose = 1;
verbose = 1
verbose
verbose
1
break;
case OPT_VERSION:
OPT_VERSION
OPT_VERSION
printf("%s\n", JAS_VERSION);
printf("%s\n", JAS_VERSION)
printf
printf
"%s\n"
JAS_VERSION
JAS_VERSION
exit(EXIT_SUCCESS);
exit(EXIT_SUCCESS);
exit
exit
(EXIT_SUCCESS)
EXIT_SUCCESS
EXIT_SUCCESS
break;
case OPT_INFILE:
OPT_INFILE
OPT_INFILE
infile = jas_optarg;
infile = jas_optarg
infile
infile
jas_optarg
jas_optarg
break;
case OPT_HELP:
OPT_HELP
OPT_HELP
default:
usage();
usage()
usage
usage
break;
if (infile) {		/* The image is to be read from a file. */		if (!(instream = jas_stream_fopen(infile, "rb"))) {			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}	} else {		/* The image is to be read from standard input. */		if (!(instream = jas_stream_fdopen(0, "rb"))) {			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}	}
infile
infile
{		/* The image is to be read from a file. */		if (!(instream = jas_stream_fopen(infile, "rb"))) {			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}	}
if (!(instream = jas_stream_fopen(infile, "rb"))) {			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}
!(instream = jas_stream_fopen(infile, "rb"))
(instream = jas_stream_fopen(infile, "rb"))
instream = jas_stream_fopen(infile, "rb")
instream
instream
jas_stream_fopen(infile, "rb")
jas_stream_fopen
jas_stream_fopen
infile
infile
"rb"
{			fprintf(stderr, "cannot open input image file %s\n", infile);			exit(EXIT_FAILURE);		}
fprintf(stderr, "cannot open input image file %s\n", infile);
fprintf(stderr, "cannot open input image file %s\n", infile)
fprintf
fprintf
stderr
stderr
"cannot open input image file %s\n"
infile
infile
exit(EXIT_FAILURE);
exit(EXIT_FAILURE);
exit
exit
(EXIT_FAILURE)
EXIT_FAILURE
EXIT_FAILURE
{		/* The image is to be read from standard input. */		if (!(instream = jas_stream_fdopen(0, "rb"))) {			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}	}
if (!(instream = jas_stream_fdopen(0, "rb"))) {			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}
!(instream = jas_stream_fdopen(0, "rb"))
(instream = jas_stream_fdopen(0, "rb"))
instream = jas_stream_fdopen(0, "rb")
instream
instream
jas_stream_fdopen(0, "rb")
jas_stream_fdopen
jas_stream_fdopen
0
"rb"
{			fprintf(stderr, "cannot open standard input\n");			exit(EXIT_FAILURE);		}
fprintf(stderr, "cannot open standard input\n");
fprintf(stderr, "cannot open standard input\n")
fprintf
fprintf
stderr
stderr
"cannot open standard input\n"
exit(EXIT_FAILURE);
exit(EXIT_FAILURE);
exit
exit
(EXIT_FAILURE)
EXIT_FAILURE
EXIT_FAILURE
if ((fmtid = jas_image_getfmt(instream)) < 0) {		fprintf(stderr, "unknown image format\n");	}
(fmtid = jas_image_getfmt(instream)) < 0
(fmtid = jas_image_getfmt(instream))
fmtid = jas_image_getfmt(instream)
fmtid
fmtid
jas_image_getfmt(instream)
jas_image_getfmt
jas_image_getfmt
instream
instream
0
{		fprintf(stderr, "unknown image format\n");	}
fprintf(stderr, "unknown image format\n");
fprintf(stderr, "unknown image format\n")
fprintf
fprintf
stderr
stderr
"unknown image format\n"
if (!(image = jas_image_decode(instream, fmtid, 0))) {		fprintf(stderr, "cannot load image\n");		return EXIT_FAILURE;	}
!(image = jas_image_decode(instream, fmtid, 0))
(image = jas_image_decode(instream, fmtid, 0))
image = jas_image_decode(instream, fmtid, 0)
image
image
jas_image_decode(instream, fmtid, 0)
jas_image_decode
jas_image_decode
instream
instream
fmtid
fmtid
0
{		fprintf(stderr, "cannot load image\n");		return EXIT_FAILURE;	}
fprintf(stderr, "cannot load image\n");
fprintf(stderr, "cannot load image\n")
fprintf
fprintf
stderr
stderr
"cannot load image\n"
return EXIT_FAILURE;
EXIT_FAILURE
EXIT_FAILURE
jas_stream_close(instream);
jas_stream_close(instream)
jas_stream_close
jas_stream_close
instream
instream
numcmpts = jas_image_numcmpts(image);
numcmpts = jas_image_numcmpts(image)
numcmpts
numcmpts
jas_image_numcmpts(image)
jas_image_numcmpts
jas_image_numcmpts
image
image
width = jas_image_cmptwidth(image, 0);
width = jas_image_cmptwidth(image, 0)
width
width
jas_image_cmptwidth(image, 0)
jas_image_cmptwidth
jas_image_cmptwidth
image
image
0
height = jas_image_cmptheight(image, 0);
height = jas_image_cmptheight(image, 0)
height
height
jas_image_cmptheight(image, 0)
jas_image_cmptheight
jas_image_cmptheight
image
image
0
depth = jas_image_cmptprec(image, 0);
depth = jas_image_cmptprec(image, 0)
depth
depth
jas_image_cmptprec(image, 0)
jas_image_cmptprec
jas_image_cmptprec
image
image
0
if (!(fmtname = jas_image_fmttostr(fmtid))) {		abort();	}
!(fmtname = jas_image_fmttostr(fmtid))
(fmtname = jas_image_fmttostr(fmtid))
fmtname = jas_image_fmttostr(fmtid)
fmtname
fmtname
jas_image_fmttostr(fmtid)
jas_image_fmttostr
jas_image_fmttostr
fmtid
fmtid
{		abort();	}
abort();
abort()
abort
abort
printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image));
printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image))
printf
printf
"%s %d %d %d %d %ld\n"
fmtname
fmtname
numcmpts
numcmpts
width
width
height
height
depth
depth
(long) jas_image_rawsize(image)
long
long

jas_image_rawsize(image)
jas_image_rawsize
jas_image_rawsize
image
image
jas_image_destroy(image);
jas_image_destroy(image)
jas_image_destroy
jas_image_destroy
image
image
jas_image_clearfmts();
jas_image_clearfmts()
jas_image_clearfmts
jas_image_clearfmts
return EXIT_SUCCESS;
EXIT_SUCCESS
EXIT_SUCCESS
-----joern-----
(6,12,0)
(11,3,0)
(8,0,0)
(0,10,0)
(7,4,0)
(3,10,0)
(2,12,0)
(4,10,0)
(5,3,0)
(13,10,0)
(14,4,0)
(1,12,0)
(12,10,0)
(14,7,1)
(12,6,1)
(11,5,1)
(2,4,1)
(1,2,1)
(8,3,1)
(5,12,1)
(0,8,1)
(9,0,1)
(6,1,1)
(4,14,1)
(7,13,1)
(3,11,1)
-----------------------------------
(0,exit(EXIT_FAILURE)
(1,"%s ")
(2,stderr)
(3,fprintf(stderr, "[-f image_file]\\n")
(4,fprintf(stderr, "usage:\\n")
(5,stderr)
(6,cmdname)
(7,stderr)
(8,EXIT_FAILURE)
(9,RET)
(10,)
(11,"[-f image_file]\\n")
(12,fprintf(stderr,"%s ", cmdname)
(13,cmdinfo()
(14,"usage:\\n")
-----cfg-----
(130,177)
(132,136)
(134,140)
(7,23)
(136,134)
(138,145)
(140,138)
(143,150)
(145,143)
(148,157)
(150,148)
(23,25)
(23,28)
(25,28)
(26,31)
(154,160)
(154,169)
(155,154)
(28,26)
(157,155)
(31,34)
(160,169)
(161,172)
(34,41)
(38,52)
(38,58)
(38,66)
(38,73)
(38,82)
(38,98)
(39,38)
(168,161)
(169,170)
(41,39)
(170,168)
(172,174)
(174,175)
(175,177)
(52,41)
(58,61)
(61,41)
(66,41)
(73,41)
(79,86)
(79,111)
(80,79)
(82,80)
(86,90)
(90,111)
(95,102)
(95,111)
(96,95)
(98,96)
(102,105)
(105,111)
(108,115)
(108,122)
(109,108)
(111,109)
(115,122)
(119,127)
(119,132)
(120,119)
(122,120)
(127,130)
-----path-----
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,127,130,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,25,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,86,90,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,82,80,79,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,102,105,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,115,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,127,130,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,160,169,170,168,161,172,174,175,177
7,23,28,26,31,34,41,39,38,98,96,95,111,109,108,122,120,119,132,136,134,140,138,145,143,150,148,157,155,154,169,170,168,161,172,174,175,177
-----cfgNode-----
5,<global>
6,<empty>
7,int main (int argc,char **argv)
8,int argc
9,char **argv
10,<empty>
11,int fmtid
12,int id
13,char* infile
14,jas_stream_t* instream
15,jas_image_t* image
16,int width
17,int height
18,int depth
19,int numcmpts
20,int verbose
21,char* fmtname
22,if (jas_init())
23,jas_init()
24,<empty>
25,abort()
26,cmdname = argv[0]
27,cmdname
28,argv[0]
29,argv
30,0
31,infile = 0
32,infile
33,0
34,verbose = 0
35,verbose
36,0
37,while ((id = jas_getopt(argc, argv, opts)) >= 0)
38,(id = jas_getopt(argc, argv, opts)) >= 0
39,id = jas_getopt(argc, argv, opts)
40,id
41,jas_getopt(argc, argv, opts)
42,argc
43,argv
44,opts
45,0
46,<empty>
47,switch(id)
48,id
49,<empty>
50,case OPT_VERBOSE:
51,OPT_VERBOSE
52,verbose = 1
53,verbose
54,1
55,break;
56,case OPT_VERSION:
57,OPT_VERSION
58,printf("%s\n", JAS_VERSION)
59,"%s\n"
60,JAS_VERSION
61,exit(EXIT_SUCCESS)
62,EXIT_SUCCESS
63,break;
64,case OPT_INFILE:
65,OPT_INFILE
66,infile = jas_optarg
67,infile
68,jas_optarg
69,break;
70,case OPT_HELP:
71,OPT_HELP
72,default:
73,usage()
74,break;
75,if (infile)
76,infile
77,<empty>
78,if (!(instream = jas_stream_fopen(infile, "rb")))
79,!(instream = jas_stream_fopen(infile, "rb"))
80,instream = jas_stream_fopen(infile, "rb")
81,instream
82,jas_stream_fopen(infile, "rb")
83,infile
84,"rb"
85,<empty>
86,fprintf(stderr, "cannot open input image file %s\n", infile)
87,stderr
88,"cannot open input image file %s\n"
89,infile
90,exit(EXIT_FAILURE)
91,EXIT_FAILURE
92,else
93,<empty>
94,if (!(instream = jas_stream_fdopen(0, "rb")))
95,!(instream = jas_stream_fdopen(0, "rb"))
96,instream = jas_stream_fdopen(0, "rb")
97,instream
98,jas_stream_fdopen(0, "rb")
99,0
100,"rb"
101,<empty>
102,fprintf(stderr, "cannot open standard input\n")
103,stderr
104,"cannot open standard input\n"
105,exit(EXIT_FAILURE)
106,EXIT_FAILURE
107,if ((fmtid = jas_image_getfmt(instream)) < 0)
108,(fmtid = jas_image_getfmt(instream)) < 0
109,fmtid = jas_image_getfmt(instream)
110,fmtid
111,jas_image_getfmt(instream)
112,instream
113,0
114,<empty>
115,fprintf(stderr, "unknown image format\n")
116,stderr
117,"unknown image format\n"
118,if (!(image = jas_image_decode(instream, fmtid, 0)))
119,!(image = jas_image_decode(instream, fmtid, 0))
120,image = jas_image_decode(instream, fmtid, 0)
121,image
122,jas_image_decode(instream, fmtid, 0)
123,instream
124,fmtid
125,0
126,<empty>
127,fprintf(stderr, "cannot load image\n")
128,stderr
129,"cannot load image\n"
130,return EXIT_FAILURE;
131,EXIT_FAILURE
132,jas_stream_close(instream)
133,instream
134,numcmpts = jas_image_numcmpts(image)
135,numcmpts
136,jas_image_numcmpts(image)
137,image
138,width = jas_image_cmptwidth(image, 0)
139,width
140,jas_image_cmptwidth(image, 0)
141,image
142,0
143,height = jas_image_cmptheight(image, 0)
144,height
145,jas_image_cmptheight(image, 0)
146,image
147,0
148,depth = jas_image_cmptprec(image, 0)
149,depth
150,jas_image_cmptprec(image, 0)
151,image
152,0
153,if (!(fmtname = jas_image_fmttostr(fmtid)))
154,!(fmtname = jas_image_fmttostr(fmtid))
155,fmtname = jas_image_fmttostr(fmtid)
156,fmtname
157,jas_image_fmttostr(fmtid)
158,fmtid
159,<empty>
160,abort()
161,printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image))
162,"%s %d %d %d %d %ld\n"
163,fmtname
164,numcmpts
165,width
166,height
167,depth
168,(long) jas_image_rawsize(image)
169,long
170,jas_image_rawsize(image)
171,image
172,jas_image_destroy(image)
173,image
174,jas_image_clearfmts()
175,return EXIT_SUCCESS;
176,EXIT_SUCCESS
177,RET
178,int argc
179,char **argv
180,RET
181,int main (int argc,char **argv)
182,int argc
183,char **argv
184,<empty>
185,int fmtid
186,int id
187,char* infile
188,jas_stream_t* instream
189,jas_image_t* image
190,int width
191,int height
192,int depth
193,int numcmpts
194,int verbose
195,char* fmtname
196,if (jas_init())
197,jas_init()
198,<empty>
199,abort()
200,cmdname = argv[0]
201,cmdname
202,argv[0]
203,argv
204,0
205,infile = 0
206,infile
207,0
208,verbose = 0
209,verbose
210,0
211,while ((id = jas_getopt(argc, argv, opts)) >= 0)
212,(id = jas_getopt(argc, argv, opts)) >= 0
213,id = jas_getopt(argc, argv, opts)
214,id
215,jas_getopt(argc, argv, opts)
216,argc
217,argv
218,opts
219,0
220,<empty>
221,switch(id)
222,id
223,<empty>
224,case OPT_VERBOSE:
225,OPT_VERBOSE
226,verbose = 1
227,verbose
228,1
229,break;
230,case OPT_VERSION:
231,OPT_VERSION
232,printf("%s\n", JAS_VERSION)
233,"%s\n"
234,JAS_VERSION
235,exit(EXIT_SUCCESS)
236,EXIT_SUCCESS
237,break;
238,case OPT_INFILE:
239,OPT_INFILE
240,infile = jas_optarg
241,infile
242,jas_optarg
243,break;
244,case OPT_HELP:
245,OPT_HELP
246,default:
247,usage()
248,break;
249,if (infile)
250,infile
251,<empty>
252,if (!(instream = jas_stream_fopen(infile, "rb")))
253,!(instream = jas_stream_fopen(infile, "rb"))
254,instream = jas_stream_fopen(infile, "rb")
255,instream
256,jas_stream_fopen(infile, "rb")
257,infile
258,"rb"
259,<empty>
260,fprintf(stderr, "cannot open input image file %s\n", infile)
261,stderr
262,"cannot open input image file %s\n"
263,infile
264,exit(EXIT_FAILURE)
265,EXIT_FAILURE
266,else
267,<empty>
268,if (!(instream = jas_stream_fdopen(0, "rb")))
269,!(instream = jas_stream_fdopen(0, "rb"))
270,instream = jas_stream_fdopen(0, "rb")
271,instream
272,jas_stream_fdopen(0, "rb")
273,0
274,"rb"
275,<empty>
276,fprintf(stderr, "cannot open standard input\n")
277,stderr
278,"cannot open standard input\n"
279,exit(EXIT_FAILURE)
280,EXIT_FAILURE
281,if ((fmtid = jas_image_getfmt(instream)) < 0)
282,(fmtid = jas_image_getfmt(instream)) < 0
283,fmtid = jas_image_getfmt(instream)
284,fmtid
285,jas_image_getfmt(instream)
286,instream
287,0
288,<empty>
289,fprintf(stderr, "unknown image format\n")
290,stderr
291,"unknown image format\n"
292,if (!(image = jas_image_decode(instream, fmtid, 0)))
293,!(image = jas_image_decode(instream, fmtid, 0))
294,image = jas_image_decode(instream, fmtid, 0)
295,image
296,jas_image_decode(instream, fmtid, 0)
297,instream
298,fmtid
299,0
300,<empty>
301,fprintf(stderr, "cannot load image\n")
302,stderr
303,"cannot load image\n"
304,return EXIT_FAILURE;
305,EXIT_FAILURE
306,jas_stream_close(instream)
307,instream
308,numcmpts = jas_image_numcmpts(image)
309,numcmpts
310,jas_image_numcmpts(image)
311,image
312,width = jas_image_cmptwidth(image, 0)
313,width
314,jas_image_cmptwidth(image, 0)
315,image
316,0
317,height = jas_image_cmptheight(image, 0)
318,height
319,jas_image_cmptheight(image, 0)
320,image
321,0
322,depth = jas_image_cmptprec(image, 0)
323,depth
324,jas_image_cmptprec(image, 0)
325,image
326,0
327,if (!(fmtname = jas_image_fmttostr(fmtid)))
328,!(fmtname = jas_image_fmttostr(fmtid))
329,fmtname = jas_image_fmttostr(fmtid)
330,fmtname
331,jas_image_fmttostr(fmtid)
332,fmtid
333,<empty>
334,abort()
335,printf("%s %d %d %d %d %ld\n", fmtname, numcmpts, width, height, depth, (long) jas_image_rawsize(image))
336,"%s %d %d %d %d %ld\n"
337,fmtname
338,numcmpts
339,width
340,height
341,depth
342,(long) jas_image_rawsize(image)
343,long
344,jas_image_rawsize(image)
345,image
346,jas_image_destroy(image)
347,image
348,jas_image_clearfmts()
349,return EXIT_SUCCESS;
350,EXIT_SUCCESS
351,RET
352,int argc
353,char **argv
=====================================
