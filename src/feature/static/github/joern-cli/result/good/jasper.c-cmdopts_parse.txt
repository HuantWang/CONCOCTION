(223,94,0)
(33,77,0)
(134,142,0)
(64,142,0)
(195,142,0)
(277,234,0)
(182,5,0)
(45,159,0)
(157,102,0)
(286,95,0)
(186,71,0)
(116,222,0)
(210,126,0)
(86,2,0)
(272,95,0)
(1,2,0)
(280,111,0)
(228,174,0)
(113,233,0)
(17,159,0)
(30,157,0)
(239,95,0)
(5,62,0)
(104,46,0)
(14,124,0)
(234,95,0)
(247,142,0)
(28,2,0)
(93,14,0)
(84,233,0)
(263,134,0)
(50,168,0)
(201,253,0)
(234,277,0)
(204,2,0)
(157,30,0)
(251,16,0)
(256,36,0)
(22,95,0)
(58,113,0)
(13,108,0)
(89,95,0)
(117,47,0)
(90,117,0)
(126,142,0)
(52,2,0)
(70,122,0)
(76,88,0)
(111,198,0)
(128,59,0)
(153,125,0)
(284,88,0)
(257,2,0)
(193,276,0)
(199,16,0)
(23,170,0)
(208,142,0)
(85,21,0)
(146,2,0)
(271,165,0)
(112,5,0)
(242,262,0)
(260,207,0)
(0,30,0)
(203,27,0)
(234,47,0)
(202,2,0)
(154,193,0)
(54,142,0)
(222,91,0)
(38,2,0)
(47,117,0)
(226,141,0)
(176,158,0)
(230,142,0)
(30,207,0)
(238,142,0)
(46,65,0)
(155,236,0)
(71,241,0)
(158,72,0)
(162,79,0)
(27,142,0)
(273,2,0)
(68,286,0)
(14,47,0)
(267,95,0)
(141,65,0)
(50,95,0)
(177,111,0)
(50,175,0)
(73,69,0)
(244,2,0)
(71,95,0)
(133,2,0)
(274,2,0)
(241,142,0)
(42,276,0)
(9,71,0)
(129,263,0)
(77,33,0)
(63,2,0)
(101,3,0)
(192,134,0)
(55,2,0)
(268,279,0)
(136,230,0)
(60,267,0)
(102,157,0)
(151,231,0)
(53,89,0)
(91,2,0)
(20,277,0)
(267,278,0)
(75,193,0)
(217,73,0)
(243,127,0)
(8,264,0)
(122,95,0)
(149,13,0)
(266,267,0)
(231,95,0)
(120,202,0)
(41,87,0)
(35,2,0)
(111,95,0)
(65,2,0)
(105,127,0)
(209,289,0)
(92,270,0)
(46,95,0)
(219,168,0)
(14,64,0)
(124,175,0)
(205,142,0)
(130,124,0)
(88,95,0)
(212,95,0)
(152,157,0)
(124,130,0)
(77,142,0)
(183,198,0)
(269,16,0)
(127,95,0)
(137,50,0)
(245,292,0)
(10,2,0)
(171,95,0)
(48,21,0)
(254,142,0)
(62,2,0)
(242,142,0)
(30,235,0)
(181,67,0)
(188,219,0)
(160,138,0)
(66,125,0)
(22,230,0)
(78,30,0)
(11,239,0)
(3,168,0)
(259,167,0)
(4,14,0)
(47,190,0)
(168,142,0)
(196,142,0)
(239,10,0)
(6,241,0)
(114,234,0)
(184,173,0)
(237,262,0)
(200,292,0)
(286,146,0)
(50,233,0)
(107,26,0)
(165,55,0)
(119,200,0)
(97,277,0)
(66,2,0)
(170,143,0)
(147,287,0)
(7,272,0)
(12,156,0)
(234,64,0)
(19,2,0)
(156,263,0)
(175,124,0)
(131,24,0)
(174,95,0)
(24,62,0)
(30,108,0)
(26,34,0)
(171,208,0)
(109,13,0)
(150,23,0)
(263,156,0)
(253,242,0)
(20,219,0)
(82,292,0)
(253,95,0)
(250,171,0)
(265,171,0)
(80,87,0)
(88,66,0)
(164,59,0)
(218,156,0)
(166,95,0)
(248,173,0)
(227,264,0)
(216,130,0)
(40,49,0)
(169,94,0)
(194,286,0)
(287,124,0)
(249,141,0)
(165,95,0)
(277,20,0)
(115,261,0)
(172,2,0)
(49,143,0)
(261,95,0)
(220,170,0)
(224,2,0)
(221,95,0)
(31,165,0)
(258,142,0)
(21,85,0)
(264,138,0)
(81,93,0)
(219,20,0)
(159,36,0)
(59,95,0)
(69,2,0)
(141,95,0)
(98,200,0)
(14,93,0)
(103,159,0)
(37,287,0)
(127,77,0)
(23,235,0)
(32,26,0)
(100,219,0)
(118,89,0)
(240,22,0)
(123,142,0)
(214,73,0)
(144,102,0)
(290,55,0)
(229,3,0)
(174,64,0)
(285,222,0)
(161,2,0)
(170,23,0)
(3,95,0)
(287,95,0)
(246,2,0)
(122,202,0)
(51,2,0)
(62,24,0)
(282,168,0)
(215,2,0)
(83,122,0)
(232,261,0)
(222,95,0)
(187,272,0)
(15,46,0)
(96,221,0)
(135,55,0)
(99,2,0)
(213,30,0)
(185,91,0)
(292,200,0)
(221,92,0)
(67,142,0)
(95,85,0)
(231,236,0)
(106,208,0)
(288,146,0)
(64,79,0)
(173,27,0)
(262,242,0)
(139,278,0)
(261,67,0)
(125,66,0)
(110,42,0)
(121,2,0)
(225,2,0)
(219,95,0)
(94,95,0)
(163,113,0)
(140,2,0)
(57,270,0)
(236,142,0)
(179,2,0)
(191,2,0)
(16,189,0)
(233,2,0)
(55,165,0)
(5,95,0)
(74,142,0)
(25,253,0)
(281,2,0)
(39,14,0)
(85,95,0)
(148,33,0)
(180,2,0)
(132,176,0)
(278,142,0)
(292,2,0)
(43,221,0)
(178,2,0)
(173,95,0)
(29,72,0)
(190,47,0)
(207,142,0)
(44,170,0)
(145,50,0)
(200,95,0)
(198,111,0)
(92,189,0)
(156,95,0)
(69,94,0)
(219,233,0)
(59,158,0)
(175,50,0)
(198,126,0)
(95,212,0)
(206,23,0)
(211,231,0)
(89,142,0)
(73,95,0)
(252,190,0)
(18,2,0)
(270,92,0)
(113,95,0)
(94,69,0)
(283,234,0)
(291,142,0)
(14,95,0)
(87,95,0)
(56,239,0)
(61,22,0)
(255,174,0)
(275,10,0)
(87,47,0)
(65,46,0)
(158,176,0)
(72,158,0)
(79,64,0)
(287,95,1)
(219,168,1)
(236,155,1)
(162,174,1)
(92,270,1)
(226,292,1)
(263,129,1)
(152,27,1)
(60,266,1)
(9,42,1)
(50,168,1)
(27,203,1)
(48,166,1)
(218,12,1)
(153,88,1)
(152,38,1)
(152,51,1)
(200,95,1)
(270,57,1)
(193,154,1)
(62,24,1)
(222,116,1)
(286,95,1)
(117,90,1)
(155,231,1)
(261,232,1)
(206,220,1)
(250,265,1)
(171,95,1)
(55,290,1)
(87,95,1)
(71,186,1)
(20,277,1)
(154,75,1)
(152,35,1)
(256,159,1)
(98,119,1)
(194,197,1)
(13,108,1)
(152,121,1)
(94,95,1)
(173,95,1)
(261,95,1)
(209,272,1)
(219,233,1)
(158,176,1)
(3,95,1)
(83,197,1)
(14,39,1)
(51,65,1)
(4,130,1)
(73,214,1)
(64,79,1)
(14,124,1)
(152,274,1)
(183,111,1)
(160,264,1)
(219,95,1)
(228,255,1)
(253,25,1)
(136,22,1)
(121,202,1)
(132,59,1)
(267,60,1)
(9,212,1)
(292,200,1)
(66,125,1)
(111,95,1)
(239,95,1)
(152,179,1)
(272,95,1)
(179,256,1)
(50,233,1)
(5,95,1)
(137,145,1)
(150,206,1)
(280,67,1)
(190,252,1)
(67,181,1)
(203,173,1)
(35,69,1)
(221,96,1)
(207,260,1)
(125,153,1)
(12,236,1)
(16,269,1)
(198,111,1)
(39,4,1)
(176,132,1)
(104,15,1)
(187,13,1)
(124,175,1)
(13,149,1)
(3,101,1)
(243,230,1)
(96,43,1)
(76,197,1)
(127,105,1)
(68,194,1)
(222,95,1)
(95,85,1)
(59,128,1)
(159,45,1)
(122,70,1)
(174,228,1)
(130,124,1)
(283,272,1)
(157,30,1)
(120,122,1)
(30,207,1)
(32,130,1)
(89,118,1)
(134,192,1)
(31,197,1)
(22,95,1)
(208,106,1)
(263,156,1)
(129,156,1)
(46,95,1)
(14,64,1)
(231,95,1)
(82,245,1)
(127,95,1)
(26,107,1)
(128,164,1)
(245,200,1)
(264,8,1)
(99,146,1)
(37,20,1)
(242,262,1)
(72,158,1)
(87,41,1)
(165,271,1)
(29,158,1)
(278,139,1)
(30,235,1)
(118,160,1)
(90,87,1)
(5,182,1)
(149,109,1)
(179,190,1)
(70,83,1)
(246,19,1)
(186,9,1)
(277,234,1)
(4,20,1)
(220,44,1)
(152,244,1)
(53,89,1)
(75,212,1)
(114,283,1)
(115,242,1)
(122,95,1)
(239,11,1)
(73,95,1)
(81,14,1)
(112,197,1)
(109,49,1)
(97,234,1)
(152,191,1)
(100,188,1)
(211,64,1)
(135,165,1)
(233,84,1)
(249,226,1)
(230,136,1)
(131,5,1)
(50,95,1)
(188,277,1)
(141,95,1)
(252,47,1)
(287,147,1)
(65,46,1)
(44,13,1)
(45,17,1)
(240,61,1)
(126,210,1)
(23,150,1)
(116,285,1)
(102,144,1)
(266,77,1)
(69,94,1)
(79,162,1)
(190,47,1)
(118,209,1)
(265,134,1)
(22,240,1)
(10,275,1)
(59,95,1)
(152,281,1)
(200,98,1)
(141,249,1)
(202,120,1)
(174,95,1)
(234,47,1)
(197,102,1)
(213,0,1)
(152,180,1)
(175,50,1)
(251,199,1)
(192,263,1)
(93,14,1)
(21,48,1)
(52,197,1)
(4,26,1)
(191,10,1)
(80,197,1)
(229,126,1)
(173,184,1)
(217,55,1)
(88,95,1)
(151,211,1)
(164,197,1)
(107,32,1)
(102,157,1)
(288,286,1)
(8,227,1)
(85,21,1)
(277,97,1)
(184,248,1)
(232,115,1)
(103,190,1)
(42,110,1)
(234,95,1)
(221,95,1)
(110,193,1)
(284,76,1)
(140,233,1)
(72,29,1)
(199,72,1)
(33,148,1)
(216,124,1)
(58,163,1)
(57,221,1)
(109,102,1)
(6,71,1)
(17,103,1)
(56,197,1)
(214,217,1)
(156,218,1)
(38,66,1)
(180,91,1)
(84,113,1)
(177,280,1)
(185,222,1)
(91,185,1)
(77,33,1)
(41,80,1)
(163,197,1)
(106,171,1)
(212,95,1)
(20,219,1)
(292,82,1)
(290,135,1)
(169,73,1)
(227,93,1)
(223,169,1)
(113,95,1)
(275,239,1)
(144,157,1)
(255,168,1)
(168,282,1)
(171,250,1)
(210,198,1)
(40,170,1)
(237,253,1)
(0,152,1)
(156,95,1)
(71,95,1)
(19,197,1)
(7,187,1)
(281,72,1)
(119,197,1)
(219,100,1)
(281,92,1)
(111,177,1)
(113,58,1)
(24,131,1)
(285,197,1)
(152,99,1)
(43,16,1)
(14,47,1)
(23,235,1)
(49,40,1)
(145,287,1)
(93,81,1)
(241,6,1)
(139,267,1)
(282,3,1)
(61,208,1)
(46,104,1)
(231,151,1)
(146,288,1)
(15,141,1)
(198,183,1)
(55,165,1)
(11,56,1)
(50,137,1)
(30,78,1)
(274,62,1)
(166,207,1)
(181,261,1)
(271,31,1)
(30,108,1)
(201,241,1)
(101,229,1)
(267,95,1)
(118,93,1)
(147,37,1)
(105,243,1)
(47,117,1)
(152,246,1)
(89,95,1)
(88,284,1)
(182,112,1)
(170,23,1)
(78,213,1)
(25,201,1)
(14,95,1)
(148,127,1)
(248,278,1)
(272,7,1)
(234,64,1)
(165,95,1)
(244,52,1)
(234,114,1)
(130,216,1)
(286,68,1)
(94,223,1)
(253,95,1)
(262,237,1)
(152,140,1)
(269,251,1)
(16,72,2)
(233,197,2)
(154,212,2)
(112,197,2)
(261,95,2)
(77,33,2)
(13,13,2)
(128,197,2)
(30,235,2)
(256,190,2)
(43,72,2)
(42,212,2)
(57,72,2)
(150,13,2)
(45,190,2)
(182,197,2)
(263,156,2)
(46,95,2)
(81,272,2)
(111,95,2)
(141,95,2)
(5,197,2)
(202,197,2)
(283,272,2)
(65,197,2)
(245,197,2)
(70,197,2)
(206,13,2)
(220,13,2)
(76,197,2)
(38,197,2)
(31,197,2)
(92,270,2)
(23,13,2)
(50,95,2)
(117,197,2)
(226,197,2)
(194,197,2)
(99,197,2)
(209,272,2)
(62,24,2)
(200,197,2)
(51,197,2)
(122,95,2)
(173,95,2)
(75,212,2)
(157,102,2)
(185,197,2)
(234,47,2)
(284,197,2)
(14,47,2)
(37,20,2)
(53,89,2)
(198,111,2)
(217,197,2)
(47,197,2)
(130,20,2)
(56,197,2)
(116,197,2)
(277,272,2)
(124,175,2)
(80,197,2)
(164,197,2)
(20,277,2)
(179,197,2)
(98,197,2)
(234,272,2)
(71,95,2)
(52,197,2)
(188,277,2)
(15,197,2)
(46,197,2)
(169,197,2)
(219,168,2)
(22,95,2)
(234,95,2)
(107,130,2)
(175,50,2)
(216,20,2)
(44,13,2)
(102,157,2)
(127,95,2)
(190,197,2)
(242,262,2)
(14,124,2)
(147,20,2)
(287,95,2)
(157,30,2)
(24,197,2)
(87,95,2)
(253,95,2)
(246,197,2)
(219,95,2)
(292,197,2)
(219,233,2)
(213,102,2)
(41,197,2)
(14,272,2)
(281,197,2)
(113,197,2)
(72,197,2)
(14,95,2)
(87,197,2)
(285,197,2)
(78,102,2)
(40,13,2)
(144,102,2)
(145,20,2)
(26,130,2)
(66,125,2)
(83,197,2)
(50,20,2)
(146,197,2)
(269,72,2)
(90,197,2)
(214,197,2)
(32,130,2)
(65,46,2)
(227,93,2)
(271,197,2)
(251,72,2)
(160,93,2)
(290,197,2)
(287,20,2)
(163,197,2)
(10,197,2)
(197,102,2)
(72,158,2)
(35,197,2)
(91,197,2)
(158,197,2)
(212,95,2)
(165,95,2)
(69,94,2)
(69,197,2)
(55,165,2)
(158,176,2)
(88,197,2)
(267,95,2)
(17,190,2)
(275,197,2)
(141,197,2)
(252,197,2)
(292,200,2)
(30,102,2)
(19,197,2)
(286,197,2)
(94,197,2)
(122,197,2)
(88,95,2)
(288,197,2)
(244,197,2)
(131,197,2)
(102,102,2)
(175,20,2)
(3,95,2)
(39,272,2)
(97,272,2)
(190,47,2)
(103,190,2)
(29,197,2)
(152,102,2)
(55,197,2)
(193,212,2)
(30,207,2)
(149,13,2)
(58,197,2)
(47,117,2)
(20,272,2)
(277,234,2)
(159,190,2)
(20,219,2)
(153,197,2)
(199,72,2)
(5,95,2)
(221,95,2)
(62,197,2)
(4,272,2)
(85,21,2)
(110,212,2)
(223,197,2)
(23,235,2)
(221,72,2)
(104,197,2)
(95,85,2)
(165,197,2)
(89,95,2)
(96,72,2)
(59,197,2)
(171,95,2)
(0,102,2)
(140,197,2)
(239,197,2)
(66,197,2)
(114,272,2)
(274,197,2)
(286,95,2)
(124,20,2)
(13,108,2)
(234,64,2)
(264,93,2)
(119,197,2)
(170,23,2)
(156,95,2)
(59,95,2)
(14,64,2)
(73,95,2)
(272,95,2)
(249,197,2)
(231,95,2)
(120,197,2)
(270,72,2)
(174,95,2)
(73,197,2)
(50,168,2)
(94,95,2)
(50,233,2)
(109,13,2)
(49,13,2)
(170,13,2)
(135,197,2)
(100,277,2)
(30,108,2)
(84,197,2)
(200,95,2)
(222,95,2)
(222,197,2)
(92,72,2)
(64,79,2)
(82,197,2)
(8,93,2)
(121,197,2)
(68,197,2)
(137,20,2)
(93,14,2)
(93,272,2)
(219,277,2)
(176,197,2)
(113,95,2)
(239,95,2)
(132,197,2)
(130,124,2)
(11,197,2)
(191,197,2)
(180,197,2)
(125,197,2)
-----------------------------------
(0,argc)
(1,case CMDOPT_INFMT:)
(2,)
(3,cmdopts->outfile)
(4,cmdopts)
(5,cmdopts->debug)
(6,0)
(7,version)
(8,"error: no output format specified\\n")
(9,cmdopts)
(10,cmdopts->infile = jas_optarg)
(11,infile)
(12,cmdopts)
(13,jas_optind < argc)
(14,cmdopts->outfmt)
(15,cmdopts)
(16,fprintf(stderr, "warning: ignoring invalid input format %s\\n",\\n\\t\\t\\t\\t  jas_optarg)
(17,"error: invalid output format %s\\n")
(18,case CMDOPT_CMPTNO:)
(19,cmdusage()
(20,cmdopts->outfmt < 0 && cmdopts->outfile)
(21,sizeof(cmdopts_t)
(22,cmdopts->version)
(23,argv[jas_optind])
(24,atoi(jas_optarg)
(25,infmt)
(26,fprintf(stderr,\\n\\t\\t\\t  "error: cannot guess image format from output file name\\n")
(27,cmdopts->srgb = 0)
(28,case CMDOPT_OUTFMT:)
(29,0)
(30,jas_getopt(argc, argv, cmdoptions)
(31,cmdopts)
(32,stderr)
(33,-1)
(34,)
(35,break;)
(36,)
(37,cmdopts)
(38,break;)
(39,outfmt)
(40,jas_optind)
(41,outfmt)
(42,exit(EXIT_FAILURE)
(43,cmdopts)
(44,stderr)
(45,jas_optarg)
(46,cmdopts->inoptsbuf)
(47,cmdopts->outfmt = jas_image_strtofmt(jas_optarg)
(48,cmdopts_t)
(49,++jas_optind)
(50,cmdopts->outfile)
(51,break;)
(52,badusage()
(53,RET)
(54,)
(55,addopt(cmdopts->outoptsbuf, OPTSMAX, jas_optarg)
(56,cmdopts)
(57,1)
(58,outfile)
(59,cmdopts->infmt)
(60,debug)
(61,cmdopts)
(62,cmdopts->debug = atoi(jas_optarg)
(63,if ((cmdopts->outfmt = jas_image_strtofmt(jas_optarg)
(64,cmdopts->outfmt = -1)
(65,cmdopts->inopts = cmdopts->inoptsbuf)
(66,cmdopts->cmptno = atoi(jas_optarg)
(67,cmdopts->inopts = 0)
(68,srgb)
(69,cmdopts->outopts = cmdopts->outoptsbuf)
(70,version)
(71,cmdopts->infile)
(72,(cmdopts->infmt = jas_image_strtofmt(jas_optarg)
(73,cmdopts->outopts)
(74,if (cmdopts->outfmt < 0 && cmdopts->outfile)
(75,stderr)
(76,cmdopts)
(77,cmdopts->cmptno = -1)
(78,cmdoptions)
(79,-1)
(80,cmdopts)
(81,0)
(82,jas_optarg)
(83,cmdopts)
(84,jas_optarg)
(85,malloc(sizeof(cmdopts_t)
(86,case CMDOPT_INFILE:)
(87,cmdopts->outfmt)
(88,cmdopts->cmptno)
(89,return cmdopts;)
(90,jas_optarg)
(91,cmdopts->verbose = 1)
(92,cmdopts->infmt = -1)
(93,cmdopts->outfmt < 0)
(94,cmdopts->outoptsbuf)
(95,cmdopts = malloc(sizeof(cmdopts_t)
(96,infmt)
(97,0)
(98,inoptsbuf)
(99,break;)
(100,outfile)
(101,outfile)
(102,(c = jas_getopt(argc, argv, cmdoptions)
(103,stderr)
(104,inoptsbuf)
(105,cmptno)
(106,0)
(107,"error: cannot guess image format from output file name\\n")
(108,int argc)
(109,jas_optind)
(110,EXIT_FAILURE)
(111,cmdopts->inoptsbuf)
(112,cmdopts)
(113,cmdopts->outfile)
(114,outfmt)
(115,cmdopts)
(116,verbose)
(117,jas_image_strtofmt(jas_optarg)
(118,cmdopts)
(119,cmdopts)
(120,1)
(121,break;)
(122,cmdopts->version)
(123,if (cmdopts->version)
(124,cmdopts->outfmt = jas_image_fmtfromname(cmdopts->outfile)
(125,atoi(jas_optarg)
(126,cmdopts->inoptsbuf[0] = \'\\0\')
(127,cmdopts->cmptno)
(128,infmt)
(129,0)
(130,(cmdopts->outfmt = jas_image_fmtfromname(cmdopts->outfile)
(131,jas_optarg)
(132,jas_optarg)
(133,case CMDOPT_VERSION:)
(134,cmdopts->outoptsbuf[0] = \'\\0\')
(135,OPTSMAX)
(136,0)
(137,outfile)
(138,)
(139,0)
(140,break;)
(141,cmdopts->inopts)
(142,)
(143,)
(144,EOF)
(145,cmdopts)
(146,cmdopts->srgb = 1)
(147,outfmt)
(148,1)
(149,argc)
(150,jas_optind)
(151,outopts)
(152,c)
(153,jas_optarg)
(154,"error: insufficient memory\\n")
(155,0)
(156,cmdopts->outoptsbuf)
(157,c = jas_getopt(argc, argv, cmdoptions)
(158,cmdopts->infmt = jas_image_strtofmt(jas_optarg)
(159,fprintf(stderr, "error: invalid output format %s\\n", jas_optarg)
(160,badusage()
(161,case CMDOPT_OUTFILE:)
(162,1)
(163,cmdopts)
(164,cmdopts)
(165,cmdopts->outoptsbuf)
(166,cmdopts)
(167,)
(168,cmdopts->outfile = 0)
(169,cmdopts)
(170,fprintf(stderr,\\n\\t\\t  "warning: ignoring bogus command line argument %s\\n",\\n\\t\\t  argv[jas_optind])
(171,cmdopts->verbose)
(172,case CMDOPT_HELP:)
(173,cmdopts->srgb)
(174,cmdopts->outfmt)
(175,jas_image_fmtfromname(cmdopts->outfile)
(176,jas_image_strtofmt(jas_optarg)
(177,inoptsbuf)
(178,case CMDOPT_INOPT:)
(179,break;)
(180,break;)
(181,0)
(182,debug)
(183,0)
(184,srgb)
(185,1)
(186,infile)
(187,cmdopts)
(188,cmdopts)
(189,)
(190,(cmdopts->outfmt = jas_image_strtofmt(jas_optarg)
(191,break;)
(192,\'\\0\')
(193,fprintf(stderr, "error: insufficient memory\\n")
(194,cmdopts)
(195,while (jas_optind < argc)
(196,cmdoptions)
(197,c)
(198,cmdopts->inoptsbuf[0])
(199,stderr)
(200,cmdopts->inoptsbuf)
(201,cmdopts)
(202,cmdopts->version = 1)
(203,0)
(204,case CMDOPT_OUTOPT:)
(205,if (!(cmdopts = malloc(sizeof(cmdopts_t)
(206,argv)
(207,cmdoptions[] = {\\n\\t\\t{CMDOPT_HELP, "help", 0},\\n\\t\\t{CMDOPT_VERBOSE, "verbose", 0},\\n\\t\\t{CMDOPT_INFILE, "input", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_INFILE, "f", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_INFMT, "input-format", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_INFMT, "t", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_INOPT, "input-option", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_INOPT, "o", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTFILE, "output", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTFILE, "F", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTFMT, "output-format", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTFMT, "T", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTOPT, "output-option", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_OUTOPT, "O", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_VERSION, "version", 0},\\n\\t\\t{CMDOPT_DEBUG, "debug-level", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_CMPTNO, "cmptno", JAS_OPT_HASARG},\\n\\t\\t{CMDOPT_SRGB, "force-srgb", 0},\\n\\t\\t{CMDOPT_SRGB, "S", 0},\\n\\t\\t{-1, 0, 0}\\n\\t})
(208,cmdopts->verbose = 0)
(209,goto done;)
(210,\'\\0\')
(211,cmdopts)
(212,!(cmdopts = malloc(sizeof(cmdopts_t)
(213,argv)
(214,outopts)
(215,case CMDOPT_DEBUG:)
(216,0)
(217,cmdopts)
(218,outoptsbuf)
(219,cmdopts->outfile)
(220,"warning: ignoring bogus command line argument %s\\n")
(221,cmdopts->infmt)
(222,cmdopts->verbose)
(223,outoptsbuf)
(224,if ((cmdopts->infmt = jas_image_strtofmt(jas_optarg)
(225,case CMDOPT_SRGB:)
(226,cmdopts)
(227,stderr)
(228,outfmt)
(229,cmdopts)
(230,cmdopts->version = 0)
(231,cmdopts->outopts)
(232,inopts)
(233,cmdopts->outfile = jas_optarg)
(234,cmdopts->outfmt)
(235,char **argv)
(236,cmdopts->outopts = 0)
(237,1)
(238,if (cmdopts->outfmt < 0)
(239,cmdopts->infile)
(240,version)
(241,cmdopts->infile = 0)
(242,cmdopts->infmt = -1)
(243,cmdopts)
(244,break;)
(245,OPTSMAX)
(246,break;)
(247,cmdopts)
(248,cmdopts)
(249,inopts)
(250,verbose)
(251,"warning: ignoring invalid input format %s\\n")
(252,0)
(253,cmdopts->infmt)
(254,c)
(255,cmdopts)
(256,badusage()
(257,default:)
(258,while ((c = jas_getopt(argc, argv, cmdoptions)
(259,switch (c)
(260,cmdoptions)
(261,cmdopts->inopts)
(262,-1)
(263,cmdopts->outoptsbuf[0])
(264,fprintf(stderr, "error: no output format specified\\n")
(265,cmdopts)
(266,cmdopts)
(267,cmdopts->debug)
(268,if ((cmdopts->outfmt = jas_image_fmtfromname(cmdopts->outfile)
(269,jas_optarg)
(270,-1)
(271,outoptsbuf)
(272,cmdopts->version)
(273,case CMDOPT_VERBOSE:)
(274,break;)
(275,jas_optarg)
(276,)
(277,cmdopts->outfmt < 0)
(278,cmdopts->debug = 0)
(279,)
(280,cmdopts)
(281,break;)
(282,0)
(283,cmdopts)
(284,cmptno)
(285,cmdopts)
(286,cmdopts->srgb)
(287,cmdopts->outfmt)
(288,1)
(289,)
(290,jas_optarg)
(291,done:)
(292,addopt(cmdopts->inoptsbuf, OPTSMAX, jas_optarg)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0