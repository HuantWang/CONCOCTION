(189,87,0)
(316,254,0)
(208,286,0)
(331,177,0)
(55,211,0)
(74,15,0)
(320,108,0)
(80,161,0)
(21,82,0)
(225,83,0)
(177,272,0)
(66,48,0)
(49,265,0)
(13,254,0)
(166,254,0)
(223,122,0)
(95,216,0)
(153,189,0)
(75,268,0)
(224,161,0)
(36,161,0)
(150,161,0)
(10,130,0)
(256,5,0)
(163,161,0)
(0,92,0)
(22,302,0)
(126,102,0)
(81,217,0)
(93,279,0)
(217,166,0)
(48,66,0)
(257,161,0)
(22,208,0)
(227,286,0)
(255,123,0)
(163,292,0)
(104,174,0)
(123,255,0)
(151,38,0)
(12,161,0)
(42,251,0)
(205,93,0)
(228,154,0)
(61,293,0)
(35,330,0)
(292,196,0)
(214,42,0)
(327,161,0)
(77,226,0)
(229,47,0)
(72,322,0)
(168,320,0)
(231,233,0)
(33,288,0)
(212,237,0)
(246,123,0)
(103,219,0)
(14,269,0)
(12,83,0)
(329,114,0)
(321,233,0)
(219,286,0)
(132,333,0)
(270,161,0)
(109,64,0)
(136,161,0)
(268,92,0)
(87,189,0)
(191,193,0)
(180,15,0)
(98,166,0)
(319,303,0)
(131,280,0)
(103,42,0)
(4,31,0)
(77,287,0)
(145,73,0)
(203,187,0)
(237,15,0)
(32,14,0)
(178,259,0)
(281,309,0)
(209,161,0)
(83,225,0)
(2,286,0)
(60,195,0)
(124,23,0)
(89,60,0)
(233,193,0)
(12,42,0)
(97,286,0)
(293,61,0)
(149,83,0)
(302,17,0)
(268,101,0)
(38,41,0)
(259,31,0)
(64,286,0)
(254,311,0)
(165,103,0)
(274,166,0)
(58,161,0)
(311,161,0)
(249,158,0)
(269,14,0)
(18,161,0)
(252,264,0)
(102,268,0)
(56,161,0)
(105,52,0)
(199,101,0)
(16,92,0)
(118,232,0)
(215,290,0)
(200,53,0)
(262,286,0)
(171,165,0)
(119,216,0)
(34,245,0)
(184,114,0)
(91,149,0)
(226,77,0)
(305,330,0)
(201,76,0)
(27,278,0)
(264,286,0)
(268,240,0)
(240,53,0)
(40,276,0)
(24,68,0)
(271,105,0)
(332,174,0)
(51,30,0)
(287,174,0)
(233,60,0)
(188,7,0)
(26,193,0)
(220,332,0)
(213,98,0)
(285,266,0)
(8,128,0)
(211,15,0)
(317,115,0)
(313,165,0)
(140,286,0)
(241,119,0)
(88,89,0)
(30,43,0)
(103,180,0)
(174,287,0)
(292,163,0)
(120,125,0)
(335,198,0)
(84,318,0)
(23,161,0)
(248,318,0)
(180,115,0)
(92,0,0)
(19,60,0)
(251,227,0)
(287,77,0)
(139,286,0)
(187,129,0)
(99,53,0)
(289,302,0)
(264,156,0)
(177,331,0)
(69,240,0)
(112,102,0)
(90,312,0)
(67,251,0)
(234,161,0)
(47,272,0)
(235,2,0)
(28,87,0)
(167,161,0)
(309,41,0)
(86,77,0)
(73,23,0)
(232,110,0)
(103,165,0)
(22,161,0)
(264,135,0)
(117,286,0)
(106,255,0)
(101,268,0)
(53,240,0)
(173,208,0)
(127,60,0)
(333,129,0)
(79,182,0)
(94,255,0)
(290,306,0)
(210,68,0)
(152,105,0)
(295,22,0)
(304,149,0)
(115,233,0)
(121,12,0)
(113,15,0)
(146,180,0)
(96,103,0)
(230,227,0)
(182,97,0)
(326,69,0)
(137,226,0)
(275,154,0)
(182,43,0)
(329,92,0)
(101,48,0)
(131,69,0)
(66,240,0)
(266,110,0)
(167,278,0)
(7,297,0)
(98,117,0)
(214,83,0)
(239,64,0)
(45,318,0)
(268,102,0)
(116,262,0)
(159,219,0)
(66,92,0)
(179,47,0)
(142,158,0)
(9,161,0)
(265,193,0)
(37,161,0)
(311,191,0)
(130,286,0)
(162,208,0)
(107,97,0)
(312,297,0)
(165,286,0)
(131,161,0)
(101,286,0)
(93,166,0)
(253,161,0)
(193,283,0)
(300,288,0)
(284,83,0)
(278,167,0)
(293,286,0)
(158,218,0)
(100,177,0)
(195,60,0)
(325,226,0)
(134,182,0)
(265,161,0)
(83,149,0)
(123,303,0)
(61,161,0)
(286,139,0)
(298,218,0)
(57,93,0)
(265,180,0)
(299,15,0)
(164,266,0)
(73,44,0)
(174,311,0)
(294,227,0)
(60,19,0)
(306,290,0)
(332,286,0)
(138,161,0)
(92,329,0)
(268,193,0)
(261,4,0)
(186,15,0)
(337,97,0)
(250,8,0)
(6,214,0)
(302,289,0)
(291,7,0)
(208,48,0)
(286,264,0)
(334,286,0)
(227,251,0)
(243,273,0)
(251,42,0)
(185,329,0)
(267,282,0)
(328,130,0)
(29,240,0)
(181,147,0)
(175,114,0)
(204,311,0)
(46,82,0)
(71,101,0)
(226,286,0)
(103,83,0)
(144,187,0)
(102,286,0)
(22,269,0)
(318,44,0)
(307,103,0)
(280,131,0)
(63,42,0)
(324,66,0)
(288,33,0)
(114,329,0)
(277,117,0)
(336,195,0)
(78,161,0)
(20,233,0)
(222,310,0)
(48,5,0)
(244,73,0)
(318,163,0)
(260,143,0)
(242,289,0)
(18,198,0)
(192,115,0)
(128,8,0)
(143,135,0)
(87,286,0)
(155,293,0)
(114,286,0)
(111,161,0)
(62,219,0)
(23,128,0)
(50,289,0)
(330,286,0)
(1,73,0)
(59,196,0)
(42,63,0)
(65,161,0)
(296,117,0)
(85,143,0)
(315,72,0)
(258,298,0)
(14,143,0)
(141,264,0)
(154,286,0)
(263,161,0)
(70,2,0)
(69,131,0)
(196,292,0)
(301,161,0)
(172,302,0)
(89,15,0)
(128,23,0)
(82,322,0)
(240,3,0)
(143,14,0)
(39,87,0)
(97,182,0)
(206,177,0)
(289,135,0)
(190,163,0)
(194,160,0)
(3,240,0)
(176,180,0)
(93,193,0)
(133,309,0)
(25,332,0)
(183,191,0)
(306,161,0)
(308,22,0)
(148,262,0)
(236,42,0)
(233,115,0)
(191,311,0)
(219,103,0)
(193,268,0)
(54,161,0)
(174,332,0)
(254,166,0)
(103,193,0)
(68,166,0)
(169,319,0)
(221,161,0)
(334,161,0)
(198,18,0)
(11,161,0)
(157,161,0)
(147,52,0)
(202,293,0)
(5,48,0)
(207,269,0)
(33,161,0)
(69,92,0)
(238,95,0)
(115,317,0)
(122,272,0)
(255,286,0)
(323,334,0)
(197,123,0)
(211,193,0)
(170,314,0)
(283,193,0)
(117,98,0)
(219,62,1)
(39,28,1)
(94,106,1)
(180,176,1)
(38,151,1)
(137,311,1)
(254,13,1)
(251,67,1)
(73,244,1)
(79,134,1)
(328,3,1)
(68,166,1)
(139,286,1)
(172,269,1)
(67,227,1)
(140,267,1)
(148,139,1)
(93,166,1)
(45,248,1)
(126,101,1)
(329,114,1)
(183,204,1)
(97,286,1)
(22,308,1)
(86,226,1)
(318,163,1)
(178,4,1)
(96,307,1)
(296,213,1)
(142,3,1)
(122,223,1)
(47,229,1)
(55,119,1)
(229,179,1)
(238,317,1)
(155,262,1)
(124,167,1)
(192,19,1)
(143,260,1)
(163,292,1)
(69,92,1)
(335,12,1)
(220,77,1)
(248,73,1)
(174,332,1)
(182,97,1)
(69,240,1)
(292,196,1)
(289,135,1)
(328,298,1)
(268,240,1)
(233,321,1)
(300,180,1)
(256,48,1)
(16,330,1)
(121,103,1)
(255,94,1)
(265,49,1)
(202,155,1)
(181,105,1)
(211,55,1)
(330,305,1)
(158,249,1)
(254,311,1)
(83,149,1)
(130,286,1)
(215,189,1)
(117,277,1)
(24,166,1)
(27,147,1)
(315,82,1)
(29,330,1)
(22,302,1)
(193,268,1)
(208,286,1)
(130,10,1)
(73,23,1)
(251,227,1)
(66,92,1)
(262,286,1)
(328,0,1)
(115,233,1)
(255,286,1)
(217,166,1)
(293,202,1)
(3,240,1)
(167,278,1)
(13,316,1)
(287,77,1)
(70,163,1)
(336,127,1)
(98,117,1)
(188,103,1)
(26,306,1)
(1,2,1)
(149,304,1)
(116,148,1)
(101,286,1)
(189,153,1)
(71,75,1)
(325,137,1)
(247,302,1)
(334,323,1)
(298,258,1)
(46,21,1)
(99,200,1)
(237,212,1)
(112,126,1)
(93,193,1)
(2,286,1)
(331,206,1)
(22,269,1)
(134,0,1)
(274,287,1)
(307,33,1)
(201,64,1)
(106,246,1)
(246,197,1)
(63,42,1)
(164,139,1)
(104,332,1)
(85,207,1)
(24,217,1)
(151,309,1)
(326,2,1)
(64,239,1)
(154,286,1)
(281,214,1)
(28,63,1)
(4,261,1)
(128,8,1)
(213,68,1)
(171,219,1)
(121,312,1)
(203,144,1)
(219,286,1)
(51,182,1)
(69,326,1)
(309,133,1)
(131,69,1)
(169,123,1)
(101,199,1)
(214,6,1)
(214,83,1)
(295,22,1)
(226,325,1)
(264,135,1)
(290,215,1)
(305,35,1)
(177,331,1)
(249,142,1)
(329,185,1)
(262,116,1)
(32,143,1)
(223,177,1)
(155,122,1)
(275,287,1)
(61,293,1)
(190,18,1)
(103,42,1)
(64,286,1)
(28,225,1)
(324,208,1)
(95,238,1)
(72,315,1)
(140,247,1)
(196,59,1)
(10,328,1)
(269,14,1)
(230,294,1)
(294,236,1)
(179,262,1)
(206,100,1)
(337,107,1)
(302,289,1)
(35,201,1)
(109,61,1)
(165,286,1)
(265,180,1)
(231,192,1)
(268,101,1)
(168,269,1)
(102,286,1)
(103,219,1)
(165,313,1)
(5,48,1)
(105,271,1)
(175,184,1)
(333,132,1)
(91,284,1)
(159,96,1)
(93,205,1)
(60,195,1)
(197,63,1)
(326,318,1)
(242,172,1)
(145,1,1)
(8,250,1)
(20,231,1)
(133,281,1)
(103,165,1)
(323,38,1)
(200,29,1)
(77,86,1)
(14,143,1)
(102,112,1)
(261,19,1)
(89,60,1)
(166,254,1)
(189,87,1)
(263,265,1)
(66,324,1)
(12,83,1)
(300,154,1)
(88,211,1)
(235,70,1)
(132,187,1)
(252,140,1)
(21,225,1)
(117,286,1)
(154,228,1)
(146,89,1)
(228,275,1)
(81,93,1)
(162,173,1)
(271,152,1)
(311,191,1)
(267,247,1)
(187,203,1)
(174,311,1)
(211,193,1)
(283,193,1)
(225,83,1)
(152,283,1)
(205,57,1)
(92,329,1)
(227,286,1)
(87,39,1)
(148,232,1)
(12,121,1)
(30,51,1)
(27,283,1)
(265,193,1)
(184,16,1)
(174,104,1)
(332,286,1)
(173,189,1)
(330,286,1)
(321,20,1)
(53,99,1)
(293,286,1)
(59,190,1)
(191,193,1)
(101,48,1)
(119,241,1)
(57,98,1)
(304,91,1)
(114,175,1)
(277,296,1)
(0,92,1)
(5,256,1)
(268,92,1)
(334,286,1)
(118,266,1)
(192,259,1)
(141,252,1)
(306,290,1)
(180,115,1)
(260,85,1)
(258,158,1)
(316,274,1)
(89,88,1)
(319,169,1)
(62,159,1)
(215,5,1)
(147,181,1)
(127,237,1)
(291,188,1)
(12,42,1)
(98,166,1)
(22,208,1)
(212,154,1)
(90,7,1)
(217,81,1)
(317,115,1)
(247,320,1)
(100,47,1)
(286,264,1)
(75,26,1)
(215,333,1)
(14,32,1)
(114,286,1)
(191,183,1)
(82,46,1)
(210,24,1)
(103,193,1)
(328,30,1)
(42,251,1)
(55,317,1)
(323,214,1)
(318,84,1)
(87,286,1)
(25,220,1)
(288,300,1)
(312,90,1)
(236,130,1)
(84,45,1)
(240,53,1)
(287,174,1)
(153,87,1)
(103,180,1)
(285,164,1)
(2,235,1)
(144,5,1)
(33,288,1)
(185,114,1)
(198,335,1)
(6,131,1)
(19,60,1)
(81,98,1)
(103,83,1)
(48,66,1)
(264,141,1)
(23,128,1)
(278,27,1)
(77,226,1)
(204,23,1)
(208,162,1)
(50,242,1)
(28,319,1)
(107,79,1)
(131,280,1)
(227,230,1)
(18,198,1)
(320,168,1)
(308,263,1)
(332,25,1)
(35,64,1)
(284,130,1)
(241,95,1)
(143,135,1)
(233,60,1)
(313,171,1)
(176,146,1)
(244,145,1)
(214,42,1)
(49,334,1)
(28,72,1)
(232,118,1)
(250,124,1)
(97,337,1)
(259,178,1)
(268,102,1)
(199,71,1)
(289,50,1)
(226,286,1)
(195,336,1)
(266,285,1)
(7,291,1)
(68,210,1)
(233,193,1)
(123,255,1)
(275,68,1)
(239,109,1)
(264,156,1)
(66,240,1)
(142,3,2)
(97,0,2)
(242,269,2)
(77,226,2)
(66,240,2)
(88,154,2)
(174,77,2)
(98,117,2)
(5,189,2)
(69,240,2)
(139,286,2)
(254,311,2)
(206,262,2)
(192,154,2)
(1,2,2)
(47,262,2)
(66,189,2)
(89,154,2)
(317,115,2)
(210,287,2)
(246,63,2)
(94,63,2)
(319,63,2)
(236,130,2)
(114,286,2)
(67,130,2)
(63,42,2)
(23,128,2)
(268,240,2)
(225,83,2)
(233,60,2)
(277,68,2)
(166,254,2)
(225,130,2)
(87,286,2)
(166,287,2)
(20,154,2)
(42,251,2)
(269,14,2)
(123,63,2)
(42,130,2)
(152,283,2)
(167,278,2)
(81,68,2)
(217,68,2)
(19,60,2)
(233,193,2)
(48,66,2)
(267,247,2)
(98,68,2)
(227,286,2)
(79,0,2)
(127,154,2)
(208,286,2)
(262,286,2)
(149,130,2)
(103,219,2)
(337,0,2)
(336,154,2)
(12,83,2)
(302,289,2)
(321,154,2)
(95,317,2)
(24,68,2)
(334,286,2)
(266,139,2)
(329,114,2)
(188,103,2)
(211,154,2)
(168,269,2)
(318,2,2)
(21,225,2)
(329,330,2)
(306,290,2)
(60,154,2)
(187,5,2)
(103,193,2)
(200,330,2)
(295,22,2)
(240,53,2)
(289,135,2)
(14,143,2)
(50,269,2)
(131,69,2)
(182,97,2)
(145,2,2)
(83,130,2)
(2,286,2)
(254,287,2)
(130,286,2)
(203,5,2)
(240,330,2)
(69,92,2)
(332,77,2)
(285,139,2)
(227,130,2)
(316,287,2)
(320,269,2)
(237,154,2)
(22,208,2)
(7,103,2)
(83,149,2)
(283,193,2)
(66,92,2)
(118,139,2)
(101,48,2)
(185,330,2)
(324,189,2)
(302,269,2)
(220,77,2)
(231,154,2)
(195,154,2)
(18,198,2)
(33,288,2)
(268,92,2)
(61,293,2)
(255,286,2)
(122,262,2)
(304,130,2)
(309,214,2)
(284,130,2)
(89,60,2)
(256,189,2)
(22,269,2)
(265,193,2)
(158,3,2)
(210,68,2)
(0,92,2)
(63,130,2)
(255,63,2)
(12,42,2)
(311,191,2)
(318,163,2)
(128,8,2)
(312,103,2)
(286,264,2)
(201,64,2)
(0,330,2)
(99,330,2)
(103,83,2)
(72,225,2)
(223,262,2)
(68,287,2)
(84,2,2)
(115,154,2)
(105,283,2)
(25,77,2)
(134,0,2)
(181,283,2)
(22,302,2)
(292,196,2)
(100,262,2)
(68,166,2)
(103,42,2)
(174,311,2)
(179,262,2)
(177,262,2)
(291,103,2)
(178,19,2)
(264,135,2)
(229,262,2)
(98,166,2)
(117,286,2)
(184,330,2)
(230,130,2)
(57,98,2)
(92,330,2)
(162,189,2)
(193,268,2)
(281,214,2)
(165,286,2)
(331,262,2)
(117,68,2)
(133,214,2)
(208,189,2)
(294,130,2)
(147,283,2)
(55,154,2)
(45,2,2)
(24,287,2)
(248,2,2)
(226,286,2)
(132,5,2)
(182,0,2)
(296,68,2)
(333,5,2)
(73,23,2)
(176,154,2)
(123,255,2)
(238,317,2)
(115,233,2)
(51,0,2)
(4,19,2)
(205,98,2)
(264,156,2)
(180,154,2)
(107,0,2)
(104,77,2)
(53,330,2)
(146,154,2)
(177,331,2)
(330,286,2)
(173,189,2)
(29,330,2)
(163,292,2)
(169,63,2)
(317,154,2)
(180,115,2)
(106,63,2)
(93,98,2)
(265,180,2)
(172,269,2)
(13,287,2)
(90,103,2)
(154,286,2)
(261,19,2)
(102,286,2)
(3,330,2)
(131,280,2)
(189,87,2)
(164,139,2)
(251,130,2)
(92,329,2)
(212,154,2)
(3,240,2)
(30,0,2)
(97,286,2)
(101,286,2)
(64,286,2)
(214,42,2)
(274,287,2)
(91,130,2)
(287,174,2)
(197,63,2)
(298,3,2)
(268,101,2)
(68,68,2)
(211,193,2)
(332,286,2)
(143,135,2)
(73,2,2)
(151,214,2)
(233,154,2)
(19,154,2)
(103,180,2)
(174,332,2)
(38,214,2)
(293,286,2)
(93,166,2)
(191,193,2)
(48,189,2)
(217,166,2)
(82,225,2)
(144,5,2)
(315,225,2)
(289,269,2)
(60,195,2)
(271,283,2)
(213,68,2)
(175,330,2)
(114,330,2)
(119,317,2)
(46,225,2)
(103,165,2)
(93,193,2)
(259,19,2)
(5,48,2)
(244,2,2)
(232,139,2)
(16,330,2)
(249,3,2)
(258,3,2)
(287,77,2)
(219,286,2)
(241,317,2)
(214,83,2)
(268,102,2)
(251,227,2)
-----------------------------------
(0,!(in = jas_stream_fopen(cmdopts->infile, "rb")
(1,stderr)
(2,cmdopts->verbose)
(3,!(in = jas_stream_fdopen(0, "rb")
(4,jas_eprintf("cannot create sRGB profile\\n")
(5,(cmdopts->infmt = jas_image_getfmt(in)
(6,out)
(7,fprintf(stderr, "error: cannot encode image\\n")
(8,&dectmr)
(9,if (jas_image_encode(image, out, cmdopts->outfmt, cmdopts->outopts)
(10,outfile)
(11,if ((cmdname = strrchr(argv[0], \'/\')
(12,jas_stream_flush(out)
(13,1)
(14,strrchr(argv[0], \'/\')
(15,)
(16,in)
(17,)
(18,jas_tmr_stop(&enctmr)
(19,!(outprof = jas_cmprof_createfromclrspc(JAS_CLRSPC_SRGB)
(20,outprof)
(21,stderr)
(22,return EXIT_SUCCESS;)
(23,dectime = jas_tmr_get(&dectmr)
(24,i)
(25,cmptno)
(26,image)
(27,dectmr)
(28,cmdopts)
(29,in)
(30,exit(EXIT_FAILURE)
(31,)
(32,\'/\')
(33,jas_tmr_start(&enctmr)
(34,for (i = numcmpts - 1; i >= 0; --i)
(35,cmdopts)
(36,dectmr)
(37,if (cmdopts->outfile)
(38,exit(EXIT_FAILURE)
(39,infmt)
(40,if ((cmdopts->infmt = jas_image_getfmt(in)
(41,)
(42,out = jas_stream_fopen(cmdopts->outfile, "w+b")
(43,)
(44,)
(45,"encoding time = %f\\n")
(46,"error: cannot open standard output\\n")
(47,printf("%s\\n", JAS_VERSION)
(48,cmdopts->infmt = jas_image_getfmt(in)
(49,image)
(50,0)
(51,EXIT_FAILURE)
(52,)
(53,jas_stream_fdopen(0, "rb")
(54,if (jas_stream_close(out)
(55,image)
(56,dectime)
(57,image)
(58,enctime)
(59,enctmr)
(60,outprof = jas_cmprof_createfromclrspc(JAS_CLRSPC_SRGB)
(61,jas_setdbglevel(cmdopts->debug)
(62,outfmt)
(63,!(out = jas_stream_fopen(cmdopts->outfile, "w+b")
(64,cmdopts->verbose)
(65,if (cmdopts->cmptno >= 0 && cmdopts->cmptno < numcmpts)
(66,jas_image_getfmt(in)
(67,"w+b")
(68,i >= 0)
(69,jas_stream_close(in)
(70,cmdopts)
(71,cmdopts)
(72,exit(EXIT_FAILURE)
(73,fprintf(stderr, "decoding time = %f\\n", dectime)
(74,newimage)
(75,in)
(76,)
(77,cmdopts->cmptno >= 0)
(78,if (cmdopts->srgb)
(79,"error: cannot open input image file %s\\n")
(80,in)
(81,i)
(82,fprintf(stderr, "error: cannot open standard output\\n")
(83,out = jas_stream_fdopen(1, "w+b")
(84,enctime)
(85,argv)
(86,0)
(87,cmdopts->infmt)
(88,outprof)
(89,jas_cmprof_destroy(outprof)
(90,EXIT_FAILURE)
(91,1)
(92,in = jas_stream_fopen(cmdopts->infile, "rb")
(93,jas_image_delcmpt(image, i)
(94,outfile)
(95,jas_eprintf("cannot convert to sRGB\\n")
(96,out)
(97,cmdopts->infile)
(98,i != cmdopts->cmptno)
(99,"rb")
(100,stderr)
(101,cmdopts->infmt)
(102,cmdopts->inopts)
(103,jas_image_encode(image, out, cmdopts->outfmt, cmdopts->outopts)
(104,numcmpts)
(105,fprintf(stderr, "error: cannot load image data\\n")
(106,cmdopts)
(107,cmdopts)
(108,)
(109,cmdopts)
(110,)
(111,image)
(112,inopts)
(113,if (!(newimage = jas_image_chclrspc(image, outprof, JAS_CMXFORM_INTENT_PER)
(114,cmdopts->infile)
(115,newimage = jas_image_chclrspc(image, outprof, JAS_CMXFORM_INTENT_PER)
(116,version)
(117,cmdopts->cmptno)
(118,EXIT_FAILURE)
(119,exit(EXIT_FAILURE)
(120,if (!(in = jas_stream_fopen(cmdopts->infile, "rb")
(121,out)
(122,exit(EXIT_SUCCESS)
(123,fprintf(stderr, "error: cannot open output image file %s\\n",\\n\\t\\t\\t  cmdopts->outfile)
(124,dectime)
(125,)
(126,cmdopts)
(127,outprof)
(128,jas_tmr_get(&dectmr)
(129,)
(130,cmdopts->outfile)
(131,(void)
(132,EXIT_FAILURE)
(133,"error: cannot close output image file\\n")
(134,stderr)
(135,char **argv)
(136,if (cmdopts->verbose)
(137,cmdopts)
(138,if (cmdopts->version)
(139,!(cmdopts = cmdopts_parse(argc, argv)
(140,cmdopts)
(141,argv)
(142,stderr)
(143,argv[0])
(144,stderr)
(145,"decoding time = %f\\n")
(146,image)
(147,exit(EXIT_FAILURE)
(148,cmdopts)
(149,jas_stream_fdopen(1, "w+b")
(150,if (cmdopts->infmt < 0)
(151,EXIT_FAILURE)
(152,stderr)
(153,0)
(154,cmdopts->srgb)
(155,cmdopts)
(156,int argc)
(157,if (jas_init()
(158,fprintf(stderr, "error: cannot open standard input\\n")
(159,cmdopts)
(160,)
(161,)
(162,infmt)
(163,enctime = jas_tmr_get(&enctmr)
(164,stderr)
(165,cmdopts->outopts)
(166,i = numcmpts - 1)
(167,jas_tmr_stop(&dectmr)
(168,cmdname)
(169,EXIT_FAILURE)
(170,if (!(out = jas_stream_fopen(cmdopts->outfile, "w+b")
(171,cmdopts)
(172,cmdname)
(173,cmdopts)
(174,cmdopts->cmptno < numcmpts)
(175,infile)
(176,newimage)
(177,fprintf(stderr, "libjasper %s\\n", jas_getversion()
(178,EXIT_FAILURE)
(179,"%s\\n")
(180,image = newimage)
(181,EXIT_FAILURE)
(182,fprintf(stderr, "error: cannot open input image file %s\\n",\\n\\t\\t\\t  cmdopts->infile)
(183,image)
(184,cmdopts)
(185,"rb")
(186,if (!(outprof = jas_cmprof_createfromclrspc(JAS_CLRSPC_SRGB)
(187,fprintf(stderr, "error: input image has unknown format\\n")
(188,stderr)
(189,cmdopts->infmt < 0)
(190,enctime)
(191,jas_image_numcmpts(image)
(192,newimage)
(193,image = jas_image_decode(in, cmdopts->infmt, cmdopts->inopts)
(194,if (!(out = jas_stream_fdopen(1, "w+b")
(195,jas_cmprof_createfromclrspc(JAS_CLRSPC_SRGB)
(196,&enctmr)
(197,stderr)
(198,&enctmr)
(199,infmt)
(200,0)
(201,cmdinfo()
(202,debug)
(203,"error: input image has unknown format\\n")
(204,numcmpts)
(205,i)
(206,"libjasper %s\\n")
(207,cmdname)
(208,cmdopts->infmt)
(209,if (!(cmdopts = cmdopts_parse(argc, argv)
(210,0)
(211,jas_image_destroy(image)
(212,"forcing conversion to sRGB\\n")
(213,i)
(214,jas_stream_close(out)
(215,dectmr)
(216,)
(217,--i)
(218,)
(219,cmdopts->outfmt)
(220,cmdopts)
(221,enctmr)
(222,if (!(in = jas_stream_fdopen(0, "rb")
(223,EXIT_SUCCESS)
(224,numcmpts)
(225,!(out = jas_stream_fdopen(1, "w+b")
(226,cmdopts->cmptno)
(227,cmdopts->outfile)
(228,srgb)
(229,JAS_VERSION)
(230,outfile)
(231,image)
(232,exit(EXIT_FAILURE)
(233,jas_image_chclrspc(image, outprof, JAS_CMXFORM_INTENT_PER)
(234,i)
(235,verbose)
(236,out)
(237,jas_eprintf("forcing conversion to sRGB\\n")
(238,"cannot convert to sRGB\\n")
(239,verbose)
(240,in = jas_stream_fdopen(0, "rb")
(241,EXIT_FAILURE)
(242,argv)
(243,if (i != cmdopts->cmptno)
(244,dectime)
(245,)
(246,"error: cannot open output image file %s\\n")
(247,jas_init()
(248,stderr)
(249,"error: cannot open standard input\\n")
(250,dectmr)
(251,jas_stream_fopen(cmdopts->outfile, "w+b")
(252,argc)
(253,if (!(image = jas_image_decode(in, cmdopts->infmt, cmdopts->inopts)
(254,numcmpts - 1)
(255,cmdopts->outfile)
(256,0)
(257,out)
(258,EXIT_FAILURE)
(259,exit(EXIT_FAILURE)
(260,0)
(261,"cannot create sRGB profile\\n")
(262,cmdopts->version)
(263,jas_image_clearfmts()
(264,cmdopts_parse(argc, argv)
(265,jas_image_destroy(image)
(266,fprintf(stderr, "error: cannot parse command line\\n")
(267,abort()
(268,jas_image_decode(in, cmdopts->infmt, cmdopts->inopts)
(269,cmdname = strrchr(argv[0], \'/\')
(270,if (cmdopts->infile)
(271,"error: cannot load image data\\n")
(272,)
(273,)
(274,i)
(275,cmdopts)
(276,)
(277,cmptno)
(278,&dectmr)
(279,)
(280,void)
(281,stderr)
(282,)
(283,!(image = jas_image_decode(in, cmdopts->infmt, cmdopts->inopts)
(284,out)
(285,"error: cannot parse command line\\n")
(286,cmdopts = cmdopts_parse(argc, argv)
(287,cmdopts->cmptno >= 0 && cmdopts->cmptno < numcmpts)
(288,&enctmr)
(289,argv[0])
(290,&dectmr)
(291,"error: cannot encode image\\n")
(292,jas_tmr_get(&enctmr)
(293,cmdopts->debug)
(294,cmdopts)
(295,RET)
(296,cmdopts)
(297,)
(298,exit(EXIT_FAILURE)
(299,outprof)
(300,enctmr)
(301,if (cmdopts->verbose)
(302,cmdname = argv[0])
(303,)
(304,"w+b")
(305,infile)
(306,jas_tmr_start(&dectmr)
(307,image)
(308,EXIT_SUCCESS)
(309,fprintf(stderr, "error: cannot close output image file\\n")
(310,)
(311,numcmpts = jas_image_numcmpts(image)
(312,exit(EXIT_FAILURE)
(313,outopts)
(314,)
(315,EXIT_FAILURE)
(316,numcmpts)
(317,!(newimage = jas_image_chclrspc(image, outprof, JAS_CMXFORM_INTENT_PER)
(318,fprintf(stderr, "encoding time = %f\\n", enctime)
(319,exit(EXIT_FAILURE)
(320,++cmdname)
(321,JAS_CMXFORM_INTENT_PER)
(322,)
(323,cmdopts)
(324,in)
(325,cmptno)
(326,in)
(327,cmdopts)
(328,cmdopts)
(329,jas_stream_fopen(cmdopts->infile, "rb")
(330,cmdopts->infile)
(331,jas_getversion()
(332,cmdopts->cmptno)
(333,exit(EXIT_FAILURE)
(334,cmdopts_destroy(cmdopts)
(335,enctmr)
(336,JAS_CLRSPC_SRGB)
(337,infile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0