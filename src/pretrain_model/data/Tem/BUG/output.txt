data:0x0000000000000000 model_version:0x01000000 static void bad_sink()  { char * data = CWE416_Use_After_Free__malloc_free_char_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printLine(data); bad_sink(); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_int64_t_16_bad()  { int64_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (int64_t *)malloc(100*sizeof(int64_t)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; free(data); 0 printLongLongLine(data[0]); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_long_05_bad()  { long * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (long *)malloc(100*sizeof(long)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; free(data); 0 printLongLine(data[0]); Finished bad()
data:0x00860022e1550000 model_version:0x01000000 static void bad_sink()  { wchar_t * data = CWE416_Use_After_Free__malloc_free_wchar_t_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printWLine(data); bad_sink(); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_int64_t_04_bad()  { int64_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (int64_t *)malloc(100*sizeof(int64_t)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; free(data); 0 printLongLongLine(data[0]); Finished bad()
data:0x06860022e1550000 model_version:0x01000000 static void bad_sink()  { wchar_t * data = CWE416_Use_After_Free__malloc_free_wchar_t_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printWLine(data); bad_sink(); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_int64_t_05_bad()  { int64_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (int64_t *)malloc(100*sizeof(int64_t)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; free(data); 0 printLongLongLine(data[0]); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_long_04_bad()  { long * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (long *)malloc(100*sizeof(long)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; free(data); 0 printLongLine(data[0]); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_int64_t_09_bad()  { int64_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (int64_t *)malloc(100*sizeof(int64_t)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; free(data); 0 printLongLongLine(data[0]); Finished bad()
data:0x0000000000000000 model_version:0x01000000 static void bad_sink(char * data)  { klee_make_symbolic(&data,sizeof(data),'data'); printLine(data); bad_sink(data); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_long_02_bad()  { long * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (long *)malloc(100*sizeof(long)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; free(data); 0 printLongLine(data[0]); Finished bad()
data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_16_bad()  { char * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (char *)malloc(100*sizeof(char)); memset(data, 'A', 100-1); data[100-1] = 'free(data);
data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_wchar_t_16_bad()  { wchar_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (wchar_t *)malloc(100*sizeof(wchar_t)); wmemset(data, L'A', 100-1); data[100-1] = L'free(data); printWLine(data); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_int64_t_10_bad()  { int64_t * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (int64_t *)malloc(100*sizeof(int64_t)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; data[i] = 5LL; free(data); 0 printLongLongLine(data[0]); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_long_16_bad()  { long * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (long *)malloc(100*sizeof(long)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; free(data); 0 printLongLine(data[0]); Finished bad()
data:0x8205fe21e1550000 model_version:0x01000000 static void bad_sink()  { wchar_t * data = CWE416_Use_After_Free__malloc_free_wchar_t_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printWLine(data); bad_sink(); Finished bad()
i:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_long_10_bad()  { long * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (long *)malloc(100*sizeof(long)); size_t i; klee_make_symbolic(&i,sizeof(i),'i'); data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; data[i] = 5L; free(data); 0 printLongLine(data[0]); Finished bad()
data:0x0000000000000000 model_version:0x01000000 static void bad_sink()  { wchar_t * data = CWE416_Use_After_Free__malloc_free_wchar_t_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printWLine(data); bad_sink(); Finished bad()
data:0x0101010101010101 model_version:0x01000000 static void bad_sink()  { wchar_t * data = CWE416_Use_After_Free__malloc_free_wchar_t_45_bad_data; klee_make_symbolic(&data,sizeof(data),'data'); printWLine(data); bad_sink(); Finished bad()
data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_16_good()  {
data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_12_good()  {
data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_18_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_05_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_04_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_08_good()  {
data:0x0000000000000000 j:0x00000000 data:0x0000000000000000 k:0x00000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_17_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_10_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_14_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_09_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_02_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_15_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_13_good()  {
data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 static void goodG2B()  { char * data; klee_make_symbolic(&data,sizeof(data),'data'); data = NULL; data = (char *)malloc(100*sizeof(char)); memset(data, 'A', 100-1); data[100-1] = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA printLine(data); goodG2B(); Finished good() Calling bad()...
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_03_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_11_good()  {
data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_01_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_07_good()  {
data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 data:0x0000000000000000 model_version:0x01000000 void CWE416_Use_After_Free__malloc_free_char_06_good()  {
